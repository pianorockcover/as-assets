{"version":3,"sources":["components/icons.ts","components/RichTextEditor/RichTextEditorTools.tsx","components/RichTextEditor/LinkPicker.tsx","components/RichTextEditor/LinkPreview.tsx","components/RichTextEditor/decorators.ts","components/RichTextEditor/RichTextEditor.tsx","components/Comments/Comment.tsx","components/Comments/Comments.tsx","App.tsx","customTheme.ts","index.tsx"],"names":["icons","List","FormatBold","FormatItalic","FormatUnderlined","Link","SentimentVerySatisfied","Close","Check","FormatListNumberedIcon","getIcon","icon","useStyles","makeStyles","richEditorTools","borderBottom","btn","padding","borderRadius","borderRight","textIcon","fontWeight","fontSize","height","alignItems","justifyContent","display","paddingLeft","paddingRight","controls","type","style","text","RichTextEditorTools","editorState","toggleBlockType","toggleInlineStyle","openLinkPicker","className","classes","onToggleControl","useCallback","e","preventDefault","currentStyle","getCurrentInlineStyle","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","getType","clsx","map","control","i","IconComponent","color","has","IconButton","size","onMouseDown","disabled","linkPicker","top","left","zIndex","position","background","boxShadow","width","input","border","marginRight","outline","transition","inputError","CloseIcon","CheckIcon","LinkPicker","closeLinkPicker","setEditorState","useState","error","setError","url","setUrl","onChange","target","value","saveUrl","contentStateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","EditorState","set","currentContent","RichUtils","toggleLink","Fade","in","placeholder","onClick","link","textDecoration","richTextEditorDecorators","CompositeDecorator","strategy","contentBlock","callback","contentState","findEntityRanges","character","getEntity","component","props","getData","href","children","richEditorWrapper","marginBottom","richEditorWrapperFocus","borderColor","richEditorArea","overflowY","richEditorAreaFocus","toolsUnfocus","opacity","styleMap","BOLD","LINK","RichTextEditor","forceClean","createEmpty","focus","setFocus","useEffect","ref","createRef","onBlur","content","rawObject","convertToRaw","markdownString","draftToMarkdown","styleItems","ITALIC","open","close","console","log","nextEditorState","inlineStyle","onClickArea","current","setLinkPicker","isEmpty","undefined","spellCheck","customStyleMap","comment","author","date","SingleComment","React","memo","CommentContainer","index","showLastComment","animationTimeout","visible","Zoom","timeout","comments","marginTop","maxHeight","overflowX","Comments","data","setShowLastComment","setAnimationTimeout","dataLengthRef","useRef","length","setTimeout","key","appWrapper","margin","maxWidth","backgroundColor","App","fakeApiComments","setComments","setForceClean","currentComment","setCurrentComment","leaveComment","Date","Button","variant","customTheme","createMuiTheme","palette","primary","main","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","theme","document","getElementById"],"mappings":"ivEAYMA,EAEF,CACHC,SACAC,eACAC,iBACAC,qBACAC,SACAC,2BACAC,UACAC,UACAC,4BAGYC,EAAU,SAACC,GAAD,OAAkBX,EAAMW,I,OCnBzCC,EAAYC,YAAW,CAC5BC,gBAAiB,CAChBC,aAAc,qBAEfC,IAAK,CACJC,QAAS,EACTC,aAAc,EACdC,YAAa,qBAEdC,SAAU,CACTC,WAAY,IACZC,SAAU,GACVC,OAAQ,GACRC,WAAY,SACZC,eAAgB,SAChBC,QAAS,OACTC,YAAa,EACbC,aAAc,KAYVC,EAA0B,CAC/B,CACCC,KAAM,SACNnB,KAAM,aACNoB,MAAO,QAER,CACCD,KAAM,SACNnB,KAAM,eACNoB,MAAO,UAER,CACCD,KAAM,QACNC,MAAO,sBACPpB,KAAM,QAEP,CACCmB,KAAM,QACNC,MAAO,oBACPpB,KAAM,0BAEP,CACCmB,KAAM,QACNC,MAAO,aACPC,KAAM,0DAEP,CACCF,KAAM,QACNC,MAAO,eACPC,KAAM,4EAEP,CACCF,KAAM,OACNC,MAAO,GACPpB,KAAM,SAYKsB,EAA0D,SAAC,GAM1B,IAL7CC,EAK4C,EAL5CA,YACAC,EAI4C,EAJ5CA,gBACAC,EAG4C,EAH5CA,kBACAC,EAE4C,EAF5CA,eACAC,EAC4C,EAD5CA,UAEMC,EAAU3B,IACV4B,EAAkBC,uBACvB,gBAAGX,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OAAkC,SACjCW,GAIA,OAFAA,EAAEC,iBAEMb,GACP,IAAK,QACJK,EAAgBJ,GAChB,MACD,IAAK,SACJK,EAAkBL,GAClB,MACD,IAAK,OACJM,QAIH,CAACF,EAAiBC,EAAmBC,IAGhCO,EAAeV,EAAYW,wBAC3BC,EAAYZ,EAAYa,eACxBC,EAAYd,EAChBe,oBACAC,eAAeJ,EAAUK,eACzBC,UAEF,OACC,qBAAKd,UAAWe,YAAKd,EAAQzB,gBAAiBwB,GAA9C,SACET,EAASyB,KAAI,SAACC,EAASC,GACvB,IAAMC,EAAgBF,EAAQ5C,MAAQD,EAAQ6C,EAAQ5C,MAChD+C,EACa,WAAjBH,EAAQzB,MACRc,EAAae,IAAIJ,EAAQxB,QACR,UAAjBwB,EAAQzB,MAAoByB,EAAQxB,QAAUiB,EAC5C,UACA,UAEJ,OACC,eAACY,EAAA,EAAD,CAECtB,UAAWC,EAAQvB,IACnB6C,KAAK,QACLC,YAAatB,EAAgBe,GAC7BG,MAAOA,EACPK,SAAUR,EAAQQ,SANnB,UAQEN,GAAiB,cAACA,EAAD,IACjBF,EAAQvB,MACR,sBAAMM,UAAWC,EAAQnB,SAAzB,SACEmC,EAAQvB,SAVNwB,S,kBCtHL5C,EAAYC,YAAW,CAC5BmD,WAAY,CACXC,IAAK,GACLC,KAAM,EACNC,OAAQ,EACRC,SAAU,WACVC,WAAY,UACZtD,aAAc,oBACduD,UAAW,0BACXrD,QAAS,EACTS,QAAS,OACTF,WAAY,SACZC,eAAgB,aAChBE,YAAa,GACb4C,MAAO,QAERC,MAAO,CACNC,OAAQ,EACR1D,aAAc,oBACd2D,YAAa,GACbL,WAAY,cACZM,QAAS,kBACTC,WAAY,0BAEbC,WAAY,CACX9D,aAAc,uBAIV+D,EAAYpE,EAAQ,SACpBqE,EAAYrE,EAAQ,SAQbsE,EAAwC,SAAC,GAI/C,IAHNC,EAGK,EAHLA,gBACA/C,EAEK,EAFLA,YACAgD,EACK,EADLA,eAEM3C,EAAU3B,IADX,EAGqBuE,qBAHrB,mBAGEC,EAHF,KAGSC,EAHT,QAKanD,EAAYa,eAgBRoC,mBAAiB,KArBlC,mBAqBEG,EArBF,KAqBOC,EArBP,KAuBCC,EAAW/C,uBAAY,SAACC,GAC7B6C,EAAO7C,EAAE+C,OAAOC,OAEZhD,EAAE+C,OAAOC,OACZL,GAAS,KAER,IAEGM,EAAUlD,uBACf,SAACC,GAGA,GAFAA,EAAEC,iBAEG2C,EAAL,CAKA,IACMM,EADe1D,EAAYe,oBACW4C,aAC3C,OACA,UACA,CAAEP,QAEGQ,EAAYF,EAAuBG,0BACnCC,EAAiBC,cAAYC,IAAIhE,EAAa,CACnDiE,eAAgBP,IAGjBV,EACCkB,YAAUC,WACTL,EACAA,EAAejD,eACf+C,IAGFP,EAAO,IACPN,SAvBCI,GAAS,KAyBX,CAACnD,EAAagD,EAAgBD,EAAiBK,IAGhD,OACC,cAACgB,EAAA,EAAD,CAAMC,IAAI,EAAV,SACC,sBAAKjE,UAAWC,EAAQyB,WAAxB,UACC,uBACClC,KAAK,OACL0E,YAAY,kDACZhB,SAAUA,EACVE,MAAOJ,EACPhD,UAAWe,YAAKd,EAAQiC,MAAT,eACbjC,EAAQsC,WAAaO,MAGxB,cAACxB,EAAA,EAAD,CAAYC,KAAK,QAAQC,YAAa6B,EAAtC,SACC,cAACZ,EAAD,MAED,cAACnB,EAAA,EAAD,CAAYC,KAAK,QAAQ4C,QAASxB,EAAlC,SACC,cAACH,EAAD,YCpIClE,EAAYC,YAAW,CAC5B6F,KAAM,CACLhD,MAAO,UACPiD,eAAgB,eCWLC,EAA2B,IAAIC,qBAAmB,CAC9D,CACCC,SAhBuB,SACxBC,EACAC,EACAC,GAEAF,EAAaG,kBAAiB,SAACC,GAC9B,IAAMrB,EAAYqB,EAAUC,YAC5B,OACe,OAAdtB,GACgD,SAAhDmB,EAAaG,UAAUtB,GAAW1C,YAEjC4D,IAMFK,UDVwC,SAACC,GAC1C,IAAM/E,EAAU3B,IAER0E,EAAQgC,EAAML,aAAaG,UAAUE,EAAMxB,WAAWyB,UAAtDjC,IAER,OACC,mBAAGhD,UAAWC,EAAQmE,KAAMc,KAAMlC,EAAlC,SACEgC,EAAMG,eEMJ7G,EAAYC,YAAW,CAC5B6G,kBAAmB,CAClBrD,WAAY,UACZI,OALa,oBAMbkD,aAAc,GACdvD,SAAU,WACVQ,WAAY,0BAEbgD,uBAAwB,CACvBC,YAAa,WAEdC,eAAgB,CACf7G,QAAS,GACTM,OAAQ,IACRwG,UAAW,OACXnD,WAAY,8BAEboD,oBAAqB,CACpB1D,UAAW,8BAEZ2D,aAAc,CACbC,QAAS,IACTtD,WAAY,6BAIRuD,EAAW,CAChBC,KAAM,CACL/G,WAAY,KAEbgH,KAAM,CACL3E,MAAO,YASI4E,EAAgD,SAAC,GAGrB,IAFxCC,EAEuC,EAFvCA,WACGjB,EACoC,8BACjC/E,EAAU3B,IADuB,EAGDuE,mBACrCc,cAAYuC,YAAY5B,IAJc,mBAGhC1E,EAHgC,KAGnBgD,EAHmB,OAObC,qBAPa,mBAOhCsD,EAPgC,KAOzBC,EAPyB,KASvCC,qBAAU,WACLJ,GACHrD,EAAee,cAAYuC,iBAE1B,CAACD,IAEJ,IAAMK,EAAMC,sBAENC,EAASrG,uBACd,WACCiG,GAAS,GACT,IAAMK,EAAU7G,EAAYe,oBACtB+F,EAAYC,uBAAaF,GAEzBG,EAAiBC,YAAgBH,EAAW,CACjDI,WAAY,CACXC,OAAQ,CACPC,KAAM,iBAAM,KACZC,MAAO,iBAAM,SAMhBC,QAAQC,IAAIT,EAAWE,GAEvB5B,EAAM9B,SAAS0D,KAEhB,CAAC5B,EAAM9B,SAAUtD,IAGZsD,EAAW/C,uBAChB,SAACiH,GAAD,OAAkCxE,EAAewE,KACjD,IAGKvH,EAAkBM,uBACvB,SAACO,GAAD,OACCkC,EAAekB,YAAUjE,gBAAgBD,EAAac,MACvD,CAACd,IAGIE,EAAoBK,uBACzB,SAACkH,GAAD,OACCzE,EACCkB,YAAUhE,kBAAkBF,EAAayH,MAE3C,CAACzH,IAGI0H,EAAcnH,uBAAY,WAC3BmG,GAAOA,EAAIiB,UACdjB,EAAIiB,QAAQpB,QACZC,GAAS,MAER,CAACE,IAhEmC,EAkEHzD,qBAlEG,mBAkEhCnB,EAlEgC,KAkEpB8F,EAlEoB,KAoEjCzH,EAAiBI,uBAAY,WAChBP,EAAYa,eACfgH,WACdD,GAAc,KAEb,CAAC5H,IAEE+C,EAAkBxC,uBAAY,WACnCqH,GAAc,KACZ,CAACF,IAEJ,OACC,sBACCtH,UAAWe,YAAKd,EAAQmF,kBAAT,eACbnF,EAAQqF,uBAAyBa,IAFpC,UAKC,cAAC,EAAD,CACCvG,YAAaA,EACbC,gBAAiBA,EACjBC,kBAAmBA,EACnBC,eAAgBA,EAChBC,UAAYmG,OAA+BuB,EAAvBzH,EAAQ0F,eAE5BjE,GACA,cAAC,EAAD,CACC9B,YAAaA,EACb+C,gBAAiBA,EACjBC,eAAgBA,IAGlB,qBACC5C,UAAWe,YAAKd,EAAQuF,eAAT,eACbvF,EAAQyF,oBAAsBS,IAEhChC,QAASmD,EAJV,SAMC,cAAC,SAAD,CACC1H,YAAaA,EACbsD,SAAUA,EACVyE,YAAY,EACZC,eAAgB/B,EAChBW,OAAQA,EACRF,IAAKA,U,uCC5KJhI,GAAYC,YAAW,CAC5BsJ,QAAS,CACRxC,aAAc,GACdtD,WAAY,UACZpD,QAAS,GACTC,aAAc,GAEfkJ,OAAQ,CACP/I,WAAY,KAEbgJ,KAAM,CACLnC,QAAS,GACTP,aAAc,MAcH2C,GAAwCC,IAAMC,MAC1D,YAAqD,IAAlDJ,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,KAAMrI,EAAmC,EAAnCA,KAASsF,EAA0B,wCAC7C/E,EAAU3B,KAEhB,OACC,cAAC,GAAD,2BAAsB0G,GAAtB,aACC,sBAAKhF,UAAWC,EAAQ4H,QAAxB,UACC,qBAAK7H,UAAWC,EAAQ6H,OAAxB,SAAiCA,IACjC,qBAAK9H,UAAWC,EAAQ8H,KAAxB,SAA+BA,IAE/B,cAAC,KAAD,UAAgBrI,aAOfyI,GAKF,SAAC,GAAD,IAAGhD,EAAH,EAAGA,SAAUiD,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,gBAAiBC,EAArC,EAAqCA,iBAAkBC,EAAvD,EAAuDA,QAAvD,OACO,IAAVH,GAAgBG,EAKf,8BAAMpD,IAJN,cAACqD,GAAA,EAAD,CAAMvE,GAAIoE,EAAiBI,QAASH,EAApC,SACC,8BAAMnD,OCpDH7G,GAAYC,YAAW,CAC5BmK,SAAU,CACTrD,aAAc,GACdsD,UAAW,GACXC,UAAW,IACXtJ,aAAc,EACdmG,UAAW,OACXoD,UAAW,YAQAC,GAAoCb,IAAMC,MAAK,YAAe,IAAZa,EAAW,EAAXA,KACxD9I,EAAU3B,KADyD,EAG3BuE,oBAAkB,GAHS,mBAGlEwF,EAHkE,KAGjDW,EAHiD,OAIzBnG,mBAAiB,GAJQ,mBAIlEyF,EAJkE,KAIhDW,EAJgD,KAMnEC,EAAgBC,iBAAOJ,EAAKK,QAclC,OAbA/C,qBAAU,WACL6C,EAAc3B,UAAYwB,EAAKK,SAClCF,EAAc3B,QAAUwB,EAAKK,OAC7BJ,GAAmB,GACnBC,EAAoB,GAEpBI,YAAW,WACVJ,EAAoB,KACpBD,GAAmB,KACjB,OAEF,CAACD,IAGH,qBAAK/I,UAAWC,EAAQyI,SAAxB,SACEK,EAAK/H,KAAI,SAAC6G,EAAS3G,GAAV,OACT,wBAAC8G,GAAD,2BACKH,GADL,IAECyB,IAAKpI,EACLkH,MAAOlH,EACPmH,gBAAiBA,EACjBC,iBAAkBA,a,UCvCjBhK,GAAYC,YAAW,CAC5BgL,WAAY,CACXC,OAAQ,SACRC,SAAU,IACVxK,OAAQ,QACRN,QAAS,GACToD,WAAY,WAGb,UAAW,CACV,uBAAwB,CACvBE,MAAO,IAER,6BAA8B,CAC7ByH,gBAAiB,iBACjB9K,aAAc,MAgDF+K,OA3Cf,WACC,IAAM1J,EAAU3B,KADF,EAGkBuE,mBAAyB+G,IAH3C,mBAGPlB,EAHO,KAGGmB,EAHH,OAIsBhH,qBAJtB,mBAIPoD,EAJO,KAIK6D,EAJL,OAK8BjH,qBAL9B,mBAKPkH,EALO,KAKSC,EALT,KAORC,EAAe9J,uBAAY,WAC5B4J,IACHF,EAAY,CACX,CACC/B,OAAQ,gEACRC,KAAM,mBACNrI,KAAMqK,IAJG,mBAMPrB,KAEJoB,GAAe,IAAII,MACnBF,OAAkBtC,GAElBR,QAAQC,IAAI4C,MAEX,CAACA,EAAgBrB,IAEpB,OACC,sBAAK1I,UAAWC,EAAQsJ,WAAxB,UACC,cAAC,EAAD,CACCrG,SAAU8G,EACV/D,WAAYA,IAEb,cAACkE,EAAA,EAAD,CACCC,QAAQ,YACRhJ,MAAM,UACNG,KAAK,QACL4C,QAAS8F,EAJV,iIAQA,cAACnB,GAAD,CAAUC,KAAML,Q,UChEN2B,GAAcC,aAAe,CACzCC,QAAS,CACRC,QAAS,CACRC,KAAM,cCCTC,IAASC,OACR,eAAC,IAAMC,WAAP,WACC,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAeC,MAAOV,GAAtB,SACC,cAAC,GAAD,SAGFW,SAASC,eAAe,W","file":"static/js/main.d92fd50c.chunk.js","sourcesContent":["import List from \"@material-ui/icons/List\";\r\nimport FormatBold from \"@material-ui/icons/FormatBold\";\r\nimport FormatItalic from \"@material-ui/icons/FormatItalic\";\r\nimport Link from \"@material-ui/icons/Link\";\r\nimport FormatUnderlined from \"@material-ui/icons/FormatUnderlined\";\r\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\r\nimport { SvgIconTypeMap } from \"@material-ui/core\";\r\nimport SentimentVerySatisfied from \"@material-ui/icons/SentimentVerySatisfied\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\n\r\nconst icons: {\r\n\t[key: string]: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\r\n} = {\r\n\tList,\r\n\tFormatBold,\r\n\tFormatItalic,\r\n\tFormatUnderlined,\r\n\tLink,\r\n\tSentimentVerySatisfied,\r\n\tClose,\r\n\tCheck,\r\n\tFormatListNumberedIcon,\r\n};\r\n\r\nexport const getIcon = (icon: string) => icons[icon];\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport React, { useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getIcon } from \"../icons\";\r\nimport { EditorState } from \"draft-js\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorTools: {\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t},\r\n\tbtn: {\r\n\t\tpadding: 4,\r\n\t\tborderRadius: 0,\r\n\t\tborderRight: \"1px solid #d2d2d2\",\r\n\t},\r\n\ttextIcon: {\r\n\t\tfontWeight: 400,\r\n\t\tfontSize: 15,\r\n\t\theight: 24,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tpaddingLeft: 3,\r\n\t\tpaddingRight: 3,\r\n\t},\r\n});\r\n\r\ninterface ToolControl {\r\n\ttype: \"inline\" | \"block\" | \"link\";\r\n\ticon?: string;\r\n\ttext?: string;\r\n\tstyle: string;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst controls: ToolControl[] = [\r\n\t{\r\n\t\ttype: \"inline\",\r\n\t\ticon: \"FormatBold\",\r\n\t\tstyle: \"BOLD\",\r\n\t},\r\n\t{\r\n\t\ttype: \"inline\",\r\n\t\ticon: \"FormatItalic\",\r\n\t\tstyle: \"ITALIC\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"unordered-list-item\",\r\n\t\ticon: \"List\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"ordered-list-item\",\r\n\t\ticon: \"FormatListNumberedIcon\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"header-two\",\r\n\t\ttext: \"Заголовок\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"header-three\",\r\n\t\ttext: \"Подзаголовок\",\r\n\t},\r\n\t{\r\n\t\ttype: \"link\",\r\n\t\tstyle: \"\",\r\n\t\ticon: \"Link\",\r\n\t},\r\n];\r\n\r\ninterface RichTextEditorToolsProps {\r\n\teditorState: EditorState;\r\n\ttoggleBlockType: (blockType: string) => void;\r\n\ttoggleInlineStyle: (inlineStyle: string) => void;\r\n\topenLinkPicker: () => void;\r\n\tclassName?: string;\r\n}\r\n\r\nexport const RichTextEditorTools: React.FC<RichTextEditorToolsProps> = ({\r\n\teditorState,\r\n\ttoggleBlockType,\r\n\ttoggleInlineStyle,\r\n\topenLinkPicker,\r\n\tclassName,\r\n}: RichTextEditorToolsProps): JSX.Element => {\r\n\tconst classes = useStyles();\r\n\tconst onToggleControl = useCallback(\r\n\t\t({ type, style }: ToolControl) => (\r\n\t\t\te: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n\t\t) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase \"block\":\r\n\t\t\t\t\ttoggleBlockType(style);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\t\ttoggleInlineStyle(style);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\topenLinkPicker();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[toggleBlockType, toggleInlineStyle, openLinkPicker]\r\n\t);\r\n\r\n\tconst currentStyle = editorState.getCurrentInlineStyle();\r\n\tconst selection = editorState.getSelection();\r\n\tconst blockType = editorState\r\n\t\t.getCurrentContent()\r\n\t\t.getBlockForKey(selection.getStartKey())\r\n\t\t.getType();\r\n\r\n\treturn (\r\n\t\t<div className={clsx(classes.richEditorTools, className)}>\r\n\t\t\t{controls.map((control, i) => {\r\n\t\t\t\tconst IconComponent = control.icon && getIcon(control.icon);\r\n\t\t\t\tconst color =\r\n\t\t\t\t\t(control.type === \"inline\" &&\r\n\t\t\t\t\t\tcurrentStyle.has(control.style)) ||\r\n\t\t\t\t\t(control.type === \"block\" && control.style === blockType)\r\n\t\t\t\t\t\t? \"primary\"\r\n\t\t\t\t\t\t: \"default\";\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonMouseDown={onToggleControl(control)}\r\n\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\tdisabled={control.disabled}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{IconComponent && <IconComponent />}\r\n\t\t\t\t\t\t{control.text && (\r\n\t\t\t\t\t\t\t<span className={classes.textIcon}>\r\n\t\t\t\t\t\t\t\t{control.text}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Fade, IconButton, makeStyles, TextField } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { EditorState, RichUtils } from \"draft-js\";\r\nimport React, {\r\n\tChangeEvent,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseRef,\r\n\tuseState,\r\n} from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlinkPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 2,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#fafdff\",\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t\tpadding: 5,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpaddingLeft: 10,\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tinput: {\r\n\t\tborder: 0,\r\n\t\tborderBottom: \"2px solid #0088bb\",\r\n\t\tmarginRight: 10,\r\n\t\tbackground: \"transparent\",\r\n\t\toutline: \"none !important\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t},\r\n\tinputError: {\r\n\t\tborderBottom: \"2px solid #ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\nconst CheckIcon = getIcon(\"Check\")!;\r\n\r\ninterface LinkPickerProps {\r\n\teditorState: EditorState;\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\tcloseLinkPicker: () => void;\r\n}\r\n\r\nexport const LinkPicker: React.FC<LinkPickerProps> = ({\r\n\tcloseLinkPicker,\r\n\teditorState,\r\n\tsetEditorState,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [error, setError] = useState<boolean>();\r\n\r\n\tconst selection = editorState.getSelection();\r\n\r\n\t// let presetUrl = \"\";\r\n\t// if (!selection.isCollapsed()) {\r\n\t// \tconst contentState = editorState.getCurrentContent();\r\n\t// \tconst startKey = editorState.getSelection().getStartKey();\r\n\t// \tconst startOffset = editorState.getSelection().getStartOffset();\r\n\t// \tconst blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\r\n\t// \tconst linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\r\n\r\n\t// \tif (linkKey) {\r\n\t// \t\tconst linkInstance = contentState.getEntity(linkKey);\r\n\t// \t\tpresetUrl = linkInstance.getData().url;\r\n\t// \t}\r\n\t// }\r\n\r\n\tconst [url, setUrl] = useState<string>(\"\");\r\n\r\n\tconst onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetUrl(e.target.value);\r\n\r\n\t\tif (e.target.value) {\r\n\t\t\tsetError(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst saveUrl = useCallback(\r\n\t\t(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tif (!url) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\tconst contentStateWithEntity = contentState.createEntity(\r\n\t\t\t\t\"LINK\",\r\n\t\t\t\t\"MUTABLE\",\r\n\t\t\t\t{ url }\r\n\t\t\t);\r\n\t\t\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n\t\t\tconst newEditorState = EditorState.set(editorState, {\r\n\t\t\t\tcurrentContent: contentStateWithEntity,\r\n\t\t\t});\r\n\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleLink(\r\n\t\t\t\t\tnewEditorState,\r\n\t\t\t\t\tnewEditorState.getSelection(),\r\n\t\t\t\t\tentityKey\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tsetUrl(\"\");\r\n\t\t\tcloseLinkPicker();\r\n\t\t},\r\n\t\t[editorState, setEditorState, closeLinkPicker, url]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fade in={true}>\r\n\t\t\t<div className={classes.linkPicker}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Введите URL:\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={url}\r\n\t\t\t\t\tclassName={clsx(classes.input, {\r\n\t\t\t\t\t\t[classes.inputError]: error,\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t\t<IconButton size=\"small\" onMouseDown={saveUrl}>\r\n\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" onClick={closeLinkPicker}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlink: {\r\n\t\tcolor: \"#0088bb\",\r\n\t\ttextDecoration: \"underline\",\r\n\t},\r\n});\r\n\r\nexport const LinkPreview: React.FC<any> = (props) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { url } = props.contentState.getEntity(props.entityKey).getData();\r\n\r\n\treturn (\r\n\t\t<a className={classes.link} href={url}>\r\n\t\t\t{props.children}\r\n\t\t</a>\r\n\t);\r\n};\r\n","import { CompositeDecorator, ContentBlock, ContentState } from \"draft-js\";\r\nimport { LinkPreview } from \"./LinkPreview\";\r\n\r\nconst findLinkEntities = (\r\n\tcontentBlock: ContentBlock,\r\n\tcallback: (start: number, end: number) => void,\r\n\tcontentState: ContentState\r\n) => {\r\n\tcontentBlock.findEntityRanges((character) => {\r\n\t\tconst entityKey = character.getEntity();\r\n\t\treturn (\r\n\t\t\tentityKey !== null &&\r\n\t\t\tcontentState.getEntity(entityKey).getType() === \"LINK\"\r\n\t\t);\r\n\t}, callback);\r\n};\r\n\r\nexport const richTextEditorDecorators = new CompositeDecorator([\r\n\t{\r\n\t\tstrategy: findLinkEntities,\r\n\t\tcomponent: LinkPreview,\r\n\t},\r\n]);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, {\r\n\tcreateRef,\r\n\tSyntheticEvent,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseState,\r\n} from \"react\";\r\nimport {\r\n\tconvertToRaw,\r\n\tEditor,\r\n\tEditorState,\r\n\tModifier,\r\n\tRichUtils,\r\n} from \"draft-js\";\r\nimport { RichTextEditorTools } from \"./RichTextEditorTools\";\r\nimport { draftToMarkdown } from \"markdown-draft-js\";\r\nimport clsx from \"clsx\";\r\nimport { LinkPicker } from \"./LinkPicker\";\r\nimport { richTextEditorDecorators } from \"./decorators\";\r\n\r\nconst border = \"1px solid #d2d2d2\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorWrapper: {\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborder,\r\n\t\tmarginBottom: 20,\r\n\t\tposition: \"relative\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t},\r\n\trichEditorWrapperFocus: {\r\n\t\tborderColor: \"#4dd0e1\",\r\n\t},\r\n\trichEditorArea: {\r\n\t\tpadding: 10,\r\n\t\theight: 200,\r\n\t\toverflowY: \"auto\",\r\n\t\ttransition: \"box-shadow .2s ease-in-out\",\r\n\t},\r\n\trichEditorAreaFocus: {\r\n\t\tboxShadow: \"inset 0px 0px 10px #caefff\",\r\n\t},\r\n\ttoolsUnfocus: {\r\n\t\topacity: 0.95,\r\n\t\ttransition: \"opacity .2s ease-in-out\",\r\n\t},\r\n});\r\n\r\nconst styleMap = {\r\n\tBOLD: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n\tLINK: {\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n};\r\n\r\ninterface RichTextEditorProps {\r\n\tonChange: (value: string) => void;\r\n\tforceClean?: number;\r\n}\r\n\r\nexport const RichTextEditor: React.FC<RichTextEditorProps> = ({\r\n\tforceClean,\r\n\t...props\r\n}: RichTextEditorProps): JSX.Element => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [editorState, setEditorState] = useState(\r\n\t\tEditorState.createEmpty(richTextEditorDecorators)\r\n\t);\r\n\r\n\tconst [focus, setFocus] = useState<boolean>();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (forceClean) {\r\n\t\t\tsetEditorState(EditorState.createEmpty());\r\n\t\t}\r\n\t}, [forceClean]);\r\n\r\n\tconst ref = createRef<any>();\r\n\r\n\tconst onBlur = useCallback(\r\n\t\t() => {\r\n\t\t\tsetFocus(false);\r\n\t\t\tconst content = editorState.getCurrentContent();\r\n\t\t\tconst rawObject = convertToRaw(content);\r\n\r\n\t\t\tconst markdownString = draftToMarkdown(rawObject, {\r\n\t\t\t\tstyleItems: {\r\n\t\t\t\t\tITALIC: {\r\n\t\t\t\t\t\topen: () => \"*\",\r\n\t\t\t\t\t\tclose: () => \"*\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// TODO: кастомный маппер в markdown\r\n\t\t\tconsole.log(rawObject, markdownString);\r\n\r\n\t\t\tprops.onChange(markdownString);\r\n\t\t},\r\n\t\t[props.onChange, editorState]\r\n\t);\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(nextEditorState: EditorState) => setEditorState(nextEditorState),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst toggleBlockType = useCallback(\r\n\t\t(blockType: string) =>\r\n\t\t\tsetEditorState(RichUtils.toggleBlockType(editorState, blockType)),\r\n\t\t[editorState]\r\n\t);\r\n\r\n\tconst toggleInlineStyle = useCallback(\r\n\t\t(inlineStyle: string) =>\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleInlineStyle(editorState, inlineStyle)\r\n\t\t\t),\r\n\t\t[editorState]\r\n\t);\r\n\r\n\tconst onClickArea = useCallback(() => {\r\n\t\tif (ref && ref.current) {\r\n\t\t\tref.current.focus();\r\n\t\t\tsetFocus(true);\r\n\t\t}\r\n\t}, [ref]);\r\n\r\n\tconst [linkPicker, setLinkPicker] = useState<boolean>();\r\n\r\n\tconst openLinkPicker = useCallback(() => {\r\n\t\tconst selection = editorState.getSelection();\r\n\t\tif (!selection.isEmpty()) {\r\n\t\t\tsetLinkPicker(true);\r\n\t\t}\r\n\t}, [editorState]);\r\n\r\n\tconst closeLinkPicker = useCallback(() => {\r\n\t\tsetLinkPicker(false);\r\n\t}, [onClickArea]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={clsx(classes.richEditorWrapper, {\r\n\t\t\t\t[classes.richEditorWrapperFocus]: focus,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<RichTextEditorTools\r\n\t\t\t\teditorState={editorState}\r\n\t\t\t\ttoggleBlockType={toggleBlockType}\r\n\t\t\t\ttoggleInlineStyle={toggleInlineStyle}\r\n\t\t\t\topenLinkPicker={openLinkPicker}\r\n\t\t\t\tclassName={!focus ? classes.toolsUnfocus : undefined}\r\n\t\t\t/>\r\n\t\t\t{linkPicker && (\r\n\t\t\t\t<LinkPicker\r\n\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\tcloseLinkPicker={closeLinkPicker}\r\n\t\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(classes.richEditorArea, {\r\n\t\t\t\t\t[classes.richEditorAreaFocus]: focus,\r\n\t\t\t\t})}\r\n\t\t\t\tonClick={onClickArea}\r\n\t\t\t>\r\n\t\t\t\t<Editor\r\n\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Zoom } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcomment: {\r\n\t\tmarginBottom: 10,\r\n\t\tbackground: \"#e8e8e8\",\r\n\t\tpadding: 10,\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tauthor: {\r\n\t\tfontWeight: 500,\r\n\t},\r\n\tdate: {\r\n\t\topacity: 0.8,\r\n\t\tmarginBottom: 10,\r\n\t},\r\n});\r\n\r\nexport interface CommentProps {\r\n\ttext: string;\r\n\tauthor: string;\r\n\tdate: string;\r\n\tindex?: number;\r\n\tshowLastComment?: boolean;\r\n\tanimationTimeout?: number;\r\n\tvisible?: boolean;\r\n}\r\n\r\nexport const SingleComment: React.FC<CommentProps> = React.memo(\r\n\t({ author, date, text, ...props }: CommentProps) => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\treturn (\r\n\t\t\t<CommentContainer {...props}>\r\n\t\t\t\t<div className={classes.comment}>\r\n\t\t\t\t\t<div className={classes.author}>{author}</div>\r\n\t\t\t\t\t<div className={classes.date}>{date}</div>\r\n\t\t\t\t\t{/* TODO: заюзать: @crossfield/react-read-more */}\r\n\t\t\t\t\t<ReactMarkdown>{text}</ReactMarkdown>\r\n\t\t\t\t</div>\r\n\t\t\t</CommentContainer>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nconst CommentContainer: React.FC<\r\n\tPick<\r\n\t\tCommentProps,\r\n\t\t\"index\" | \"showLastComment\" | \"animationTimeout\" | \"visible\"\r\n\t>\r\n> = ({ children, index, showLastComment, animationTimeout, visible }) =>\r\n\tindex === 0 && !visible ? (\r\n\t\t<Zoom in={showLastComment} timeout={animationTimeout}>\r\n\t\t\t<div>{children}</div>\r\n\t\t</Zoom>\r\n\t) : (\r\n\t\t<div>{children}</div>\r\n\t);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { CommentProps, SingleComment } from \"./Comment\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcomments: {\r\n\t\tmarginBottom: 20,\r\n\t\tmarginTop: 20,\r\n\t\tmaxHeight: 500,\r\n\t\tpaddingRight: 5,\r\n\t\toverflowY: \"auto\",\r\n\t\toverflowX: \"hidden\",\r\n\t},\r\n});\r\n\r\ninterface CommentsProps {\r\n\tdata: CommentProps[];\r\n}\r\n\r\nexport const Comments: React.FC<CommentsProps> = React.memo(({ data }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [showLastComment, setShowLastComment] = useState<boolean>(false);\r\n\tconst [animationTimeout, setAnimationTimeout] = useState<number>(0);\r\n\r\n\tconst dataLengthRef = useRef(data.length);\r\n\tuseEffect(() => {\r\n\t\tif (dataLengthRef.current !== data.length) {\r\n\t\t\tdataLengthRef.current = data.length;\r\n\t\t\tsetShowLastComment(false);\r\n\t\t\tsetAnimationTimeout(0);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetAnimationTimeout(300);\r\n\t\t\t\tsetShowLastComment(true);\r\n\t\t\t}, 10);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.comments}>\r\n\t\t\t{data.map((comment, i) => (\r\n\t\t\t\t<SingleComment\r\n\t\t\t\t\t{...comment}\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tindex={i}\r\n\t\t\t\t\tshowLastComment={showLastComment}\r\n\t\t\t\t\tanimationTimeout={animationTimeout}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n});\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { RichTextEditor } from \"./components/RichTextEditor/RichTextEditor\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CommentProps } from \"./components/Comments/Comment\";\r\nimport { Comments } from \"./components/Comments/Comments\";\r\nimport fakeApiComments from \"./fake-api.json\";\r\n\r\nconst useStyles = makeStyles({\r\n\tappWrapper: {\r\n\t\tmargin: \"0 auto\",\r\n\t\tmaxWidth: 700,\r\n\t\theight: \"100vh\",\r\n\t\tpadding: 10,\r\n\t\tbackground: \"#f5f5f5\",\r\n\t},\r\n\r\n\t\"@global\": {\r\n\t\t\"*::-webkit-scrollbar\": {\r\n\t\t\twidth: 10,\r\n\t\t},\r\n\t\t\"*::-webkit-scrollbar-thumb\": {\r\n\t\t\tbackgroundColor: \"rgba(0,0,0,.1)\",\r\n\t\t\tborderRadius: 5,\r\n\t\t},\r\n\t},\r\n});\r\n\r\nfunction App() {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [comments, setComments] = useState<CommentProps[]>(fakeApiComments);\r\n\tconst [forceClean, setForceClean] = useState<number>();\r\n\tconst [currentComment, setCurrentComment] = useState<string>();\r\n\r\n\tconst leaveComment = useCallback(() => {\r\n\t\tif (currentComment) {\r\n\t\t\tsetComments([\r\n\t\t\t\t{\r\n\t\t\t\t\tauthor: \"Тест Тестов\",\r\n\t\t\t\t\tdate: \"23.09.2020 20:31\",\r\n\t\t\t\t\ttext: currentComment,\r\n\t\t\t\t},\r\n\t\t\t\t...comments,\r\n\t\t\t]);\r\n\t\t\tsetForceClean(+new Date());\r\n\t\t\tsetCurrentComment(undefined);\r\n\r\n\t\t\tconsole.log(currentComment);\r\n\t\t}\r\n\t}, [currentComment, comments]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.appWrapper}>\r\n\t\t\t<RichTextEditor\r\n\t\t\t\tonChange={setCurrentComment}\r\n\t\t\t\tforceClean={forceClean}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tonClick={leaveComment}\r\n\t\t\t>\r\n\t\t\t\tОставить комментарий\r\n\t\t\t</Button>\r\n\t\t\t<Comments data={comments} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const customTheme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: \"#0088bb\",\r\n\t\t},\r\n\t},\r\n});\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { customTheme } from \"./customTheme\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<CssBaseline />\n\t\t<ThemeProvider theme={customTheme}>\n\t\t\t<App />\n\t\t</ThemeProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}