{"version":3,"sources":["customTheme.ts","components/icons.ts","components/RichTextEditor/toolControls.ts","components/RichTextEditor/LinkPicker.tsx","components/Loader.tsx","components/RichTextEditor/StickerPicker.tsx","components/RichTextEditor/RichTextEditorTools.tsx","components/RichTextEditor/LinkPreview.tsx","components/RichTextEditor/RichEditorContext.ts","components/RichTextEditor/StickerPreview.tsx","components/RichTextEditor/decorators.ts","components/RichTextEditor/draftMarkdown.ts","components/RichTextEditor/RichTextEditor.tsx","components/Comments/decorateStickers.ts","components/Comments/getCommentAvatar.ts","components/Comments/Comment.tsx","components/Comments/generateComment.ts","components/Comments/Comments.tsx","components/CardLayout/CardLayout.tsx","App.tsx","components/TaskHistory/TaskHistory.tsx","AppGraph.tsx","routes.tsx","index.tsx"],"names":["customTheme","createMuiTheme","palette","primary","main","overrides","MuiTooltip","tooltip","fontSize","fontWeight","icons","List","FormatBold","FormatItalic","FormatUnderlined","Link","SentimentVerySatisfied","Close","Check","FormatListNumberedIcon","ExpandMore","Info","Warning","Error","CheckCircle","getIcon","icon","richTextControls","type","style","text","useStyles","makeStyles","linkPicker","top","left","zIndex","position","background","borderBottom","boxShadow","padding","display","alignItems","justifyContent","paddingLeft","width","input","border","marginRight","outline","transition","paddingTop","paddingBottom","inputError","CloseIcon","CheckIcon","LinkPicker","closeLinkPicker","editorState","setEditorState","classes","presetUrl","contentState","getCurrentContent","startKey","getSelection","getStartKey","startOffset","getStartOffset","linkKey","getBlockForKey","getEntityAt","getEntity","getData","url","useState","setUrl","error","setError","onChange","useCallback","e","target","value","saveUrl","preventDefault","contentStateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","EditorState","set","currentContent","RichUtils","toggleLink","Fade","in","className","placeholder","clsx","IconButton","size","onMouseDown","onClick","Loader","LinearProgress","stickerPicker","height","overflow","sticker","cursor","verticalAlign","filter","close","right","loader","stickersPath","StickerPicker","closeStickerPicker","addSticker","linkText","selectionState","currentBlock","currentBlockKey","getKey","blockMap","getBlockMap","blocksBefore","toSeq","takeUntil","v","blocksAfter","skipUntil","rest","newBlockKey","length","result","characters","charactersLength","i","charAt","Math","floor","random","genKey","newBlock","ContentBlock","key","newBlockMap","concat","toOrderedMap","selection","newContent","merge","selectionBefore","selectionAfter","anchorKey","anchorOffset","focusKey","focusOffset","isBackward","push","newSelection","SelectionState","forceSelection","blockKey","Array","fill","map","_","src","richEditorTools","maxWidth","btn","borderRadius","borderRight","textIcon","paddingRight","RichTextEditorTools","React","memo","setLinkPicker","openLinkPicker","isEmpty","isCollapsed","setStickerPicker","onToggleControl","toggleBlockType","toggleInlineStyle","currentStyle","getCurrentInlineStyle","blockType","getType","control","IconComponent","color","has","Tooltip","placement","title","arrow","disabled","link","textDecoration","RichEditorContext","createContext","stickerWrapper","opacity","richTextEditorDecorators","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","component","props","href","children","useContext","onRemove","block","targetRange","getLength","withoutTeX","Modifier","removeRange","resetBlock","setBlockType","getSelectionAfter","newState","console","italicDecorator","richEditorWrapper","marginBottom","richEditorWrapperFocus","borderColor","richEditorArea","overflowY","richEditorAreaFocus","toolsUnfocus","amountBar","bottom","textAlign","borderTop","amountBarError","styleMap","BOLD","LINK","RichTextEditor","defaultValue","forceClean","createWithContent","markdown","convertFromRaw","markdownToDraft","convertMarkdownToDraft","max","useMemo","symbolsLeft","setSymbolsLeft","nextEditorState","ref","createRef","focus","setFocus","onBlur","onClickArea","current","useEffect","createEmpty","markdownString","content","rawObject","convertToRaw","draftToMarkdown","styleItems","ITALIC","open","convertDraftToMarkdown","editorContextValue","Provider","undefined","spellCheck","customStyleMap","stickerRegexp","colors","symbols","comment","commentArea","author","date","marginTop","textHidden","readMoreButton","marginLeft","readMoreButtonClose","transform","avatar","avatarSelf","decision","decisionSuccess","decisionError","ArrowIcon","SingleComment","index","firstAnimated","selfUserId","user","hidden","setHidden","needReadMoreButton","setNeedReadMoreButton","initialHeight","getBoundingClientRect","toggleHidden","animationTimeout","firstSymbol","split","slice","toLocaleUpperCase","symbol","find","includes","getCommentAvatarData","name","decoratedText","word","test","replace","join","decorateStickers","timeout","success","label","id","backgroundColor","maxHeight","escapeHtml","capitalize","str","toUpperCase","generateComment","lorem","LoremIpsum","sentencesPerParagraph","min","wordsPerSentence","generateSentences","generateWords","commentsWrapper","comments","overflowX","Comments","data","rows","totalCount","commentsList","setCommentsList","animated","setAnimated","showMoreDisabled","onShowMore","toAdd","showLessDisabled","onShowLess","Fragment","Date","Button","shadow","cardLayoutWrapper","margin","minHeight","cardLayout","closeIcon","CardLayout","body","minWidth","leaveCommentBtn","badge","decisionBtn","App","fakeApiComments","setComments","setForceClean","currentComment","setCurrentComment","leaveComment","log","Typography","variant","taskHistoryWrapper","taskHistory","taskHistoryBlock","warnin","info","warning","TaskHistory","items","j","decisionBy","by","typeClass","AppGraph","basePath","Routes","path","exact","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.b9e4353f.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const customTheme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: \"#0088bb\",\r\n\t\t},\r\n\t},\r\n\toverrides: {\r\n\t\tMuiTooltip: {\r\n\t\t\ttooltip: {\r\n\t\t\t\tfontSize: 13,\r\n\t\t\t\tfontWeight: 400,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n","import List from \"@material-ui/icons/List\";\r\nimport FormatBold from \"@material-ui/icons/FormatBold\";\r\nimport FormatItalic from \"@material-ui/icons/FormatItalic\";\r\nimport Link from \"@material-ui/icons/Link\";\r\nimport FormatUnderlined from \"@material-ui/icons/FormatUnderlined\";\r\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\r\nimport { SvgIconTypeMap } from \"@material-ui/core\";\r\nimport SentimentVerySatisfied from \"@material-ui/icons/SentimentVerySatisfied\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport Info from \"@material-ui/icons/Info\";\r\nimport Warning from \"@material-ui/icons/Warning\";\r\nimport Error from \"@material-ui/icons/Error\";\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\n\r\nconst icons: {\r\n\t[key: string]: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\r\n} = {\r\n\tList,\r\n\tFormatBold,\r\n\tFormatItalic,\r\n\tFormatUnderlined,\r\n\tLink,\r\n\tSentimentVerySatisfied,\r\n\tClose,\r\n\tCheck,\r\n\tFormatListNumberedIcon,\r\n\tExpandMore,\r\n\tInfo,\r\n\tWarning,\r\n\tError,\r\n\tCheckCircle,\r\n};\r\n\r\nexport const getIcon = (icon: string) => icons[icon];\r\n","/**\r\n * Описание кнопки в панели инструментов расширенного редактора текстов\r\n */\r\nexport interface ToolControl {\r\n\t/**\r\n\t * Тип действия кнопки\r\n\t * - inline - включить стиль (например: курсив, жирный)\r\n\t * - block - добавить стилизованный блок (напримр: заголовок, список)\r\n\t * - link - добавить ссылку\r\n     * - sticker - добавить стикер\r\n\t */\r\n\ttype: \"inline\" | \"block\" | \"link\" | \"sticker\";\r\n\t/**\r\n\t * Иконка для кнопки\r\n\t */\r\n\ticon?: string;\r\n\t/**\r\n\t * Текст для кнопки\r\n\t */\r\n\ttext?: string;\r\n\t/**\r\n\t * Тип стиля/блока, активируемого кнопкой\r\n\t */\r\n\tstyle?: string;\r\n\t/**\r\n\t * Кнопка неактивна\r\n\t */\r\n\tdisabled?: boolean;\r\n\t/**\r\n\t * Подсказка\r\n\t */\r\n\ttooltip?: string;\r\n}\r\n\r\n/**\r\n * Набор кнопок для панели инструментов расширенного редактора текстов\r\n */\r\nexport const richTextControls: ToolControl[] = [\r\n\t{\r\n\t\ttype: \"inline\",\r\n\t\ticon: \"FormatBold\",\r\n\t\tstyle: \"BOLD\",\r\n\t\ttooltip: \"Жирный шрифт\",\r\n\t},\r\n\t{\r\n\t\ttype: \"inline\",\r\n\t\ticon: \"FormatItalic\",\r\n\t\tstyle: \"ITALIC\",\r\n\t\ttooltip: \"Курсив\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"unordered-list-item\",\r\n\t\ticon: \"List\",\r\n\t\ttooltip: \"Список\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"ordered-list-item\",\r\n\t\ticon: \"FormatListNumberedIcon\",\r\n\t\ttooltip: \"Нумерованный список\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"header-two\",\r\n\t\ttext: \"Заголовок\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"header-three\",\r\n\t\ttext: \"Подзаголовок\",\r\n\t},\r\n\t{\r\n\t\ttype: \"link\",\r\n\t\tstyle: \"\",\r\n\t\ticon: \"Link\",\r\n\t\ttooltip: \"Ссылка\",\r\n    },\r\n    // ***TODO: Just for fun! Remove in production!***\r\n    {\r\n\t\ttype: \"sticker\",\r\n\t\tstyle: \"\",\r\n\t\ticon: \"SentimentVerySatisfied\",\r\n\t\ttooltip: \"Стикеры\",\r\n\t},\r\n];\r\n","import { Fade, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { EditorState, RichUtils } from \"draft-js\";\r\nimport React, { ChangeEvent, useCallback, useState } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlinkPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 3,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#fafdff\",\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t\tpadding: 5,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpaddingLeft: 10,\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tinput: {\r\n\t\tborder: 0,\r\n\t\tborderBottom: \"2px solid #0088bb\",\r\n\t\tmarginRight: 10,\r\n\t\tbackground: \"transparent\",\r\n\t\toutline: \"none !important\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 3,\r\n\t},\r\n\tinputError: {\r\n\t\tborderBottom: \"2px solid #ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\nconst CheckIcon = getIcon(\"Check\")!;\r\n\r\ninterface LinkPickerProps {\r\n\t/**\r\n\t * Текущий стейт редактора текстов\r\n\t */\r\n\teditorState: EditorState;\r\n\t/**\r\n\t * Ф-я изменения стейта\r\n\t */\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\t/**\r\n\t * Ф-я, закрывающая интерфейс редактирования ссылки\r\n\t */\r\n\tcloseLinkPicker: () => void;\r\n}\r\n\r\n/**\r\n * Форма добавления ссылки в расширенном редакторе текстов\r\n *\r\n * @param {LinkPickerProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPicker: React.FC<LinkPickerProps> = ({\r\n\tcloseLinkPicker,\r\n\teditorState,\r\n\tsetEditorState,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tlet presetUrl = \"\";\r\n\tconst contentState = editorState.getCurrentContent();\r\n\tconst startKey = editorState.getSelection().getStartKey();\r\n\tconst startOffset = editorState.getSelection().getStartOffset();\r\n\tconst blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\r\n\tconst linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\r\n\r\n\tif (linkKey) {\r\n\t\tconst linkInstance = contentState.getEntity(linkKey);\r\n\t\tpresetUrl = linkInstance.getData().url;\r\n\t}\r\n\r\n\tconst [url, setUrl] = useState<string>(presetUrl);\r\n\tconst [error, setError] = useState<boolean>();\r\n\r\n\tconst onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.value) {\r\n\t\t\tsetError(false);\r\n\t\t}\r\n\t\tsetUrl(e.target.value);\r\n\t}, []);\r\n\r\n\tconst saveUrl = useCallback(\r\n\t\t(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tif (!url) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\tconst contentStateWithEntity = contentState.createEntity(\r\n\t\t\t\t\"LINK\",\r\n\t\t\t\t\"MUTABLE\",\r\n\t\t\t\t{ url }\r\n\t\t\t);\r\n\t\t\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n\t\t\tconst newEditorState = EditorState.set(editorState, {\r\n\t\t\t\tcurrentContent: contentStateWithEntity,\r\n\t\t\t});\r\n\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleLink(\r\n\t\t\t\t\tnewEditorState,\r\n\t\t\t\t\tnewEditorState.getSelection(),\r\n\t\t\t\t\tentityKey\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tcloseLinkPicker();\r\n\t\t},\r\n\t\t[editorState, url]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fade in={true}>\r\n\t\t\t<div className={classes.linkPicker}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Введите URL:\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={url}\r\n\t\t\t\t\tclassName={clsx(classes.input, {\r\n\t\t\t\t\t\t[classes.inputError]: error,\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t\t<IconButton size=\"small\" onMouseDown={saveUrl}>\r\n\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" onClick={closeLinkPicker}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n","import { LinearProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface LoaderProps {\r\n\tclassName?: string;\r\n}\r\n\r\nexport const Loader: React.FC<LoaderProps> = ({ className }) => (\r\n\t<LinearProgress className={className} />\r\n);\r\n","import { Fade, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport {\r\n\tContentBlock,\r\n\tContentState,\r\n\tEditorState,\r\n\tRichUtils,\r\n\tSelectionState,\r\n} from \"draft-js\";\r\nimport React, { useCallback } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nconst useStyles = makeStyles({\r\n\tstickerPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 3,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"calc(100% - 100px)\",\r\n\t\toverflow: \"auto\",\r\n\t},\r\n\tsticker: {\r\n\t\tdisplay: \"inline-block\",\r\n\t\twidth: 60,\r\n\t\tposition: \"relative\",\r\n\t\tzIndex: 2,\r\n\t\tcursor: \"pointer\",\r\n\t\tverticalAlign: \"middle\",\r\n\t\ttransition: \"saturate .3s ease-in-out\",\r\n\t\t\"&:hover\": {\r\n\t\t\tfilter: \"saturate(300%)\",\r\n\t\t},\r\n\t},\r\n\tclose: {\r\n\t\tposition: \"absolute\",\r\n\t\tright: 10,\r\n        top: 10,\r\n        zIndex: 3,\r\n\t},\r\n\tloader: {\r\n\t\tposition: \"absolute\",\r\n\t\tzIndex: 1,\r\n\t\twidth: 100,\r\n\t\ttop: 70,\r\n\t\tleft: \"calc(50% - 50px)\",\r\n\t},\r\n});\r\n\r\nconst genKey = (length = 10) => {\r\n\tlet result = \"\";\r\n\tconst characters =\r\n\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\tconst charactersLength = characters.length;\r\n\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tresult += characters.charAt(\r\n\t\t\tMath.floor(Math.random() * charactersLength)\r\n\t\t);\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport const stickersPath = \"/as-assets/build/stickers/\";\r\nconst stickersAmount = 28;\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\n\r\ninterface StickerPickerProps {\r\n\t/**\r\n\t * Текущий стейт редактора текстов\r\n\t */\r\n\teditorState: EditorState;\r\n\t/**\r\n\t * Ф-я изменения стейта\r\n\t */\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\t/**\r\n\t * Ф-я, закрывающая интерфейс выбора стикера\r\n\t */\r\n\tcloseStickerPicker: () => void;\r\n}\r\n\r\n/**\r\n * Форма добавления стикера в расширенном редакторе текстов\r\n *\r\n * ***TODO: Just for fun! Remove in production!***\r\n *\r\n * @param {StickerPickerProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const StickerPicker: React.FC<StickerPickerProps> = ({\r\n\tcloseStickerPicker,\r\n\teditorState,\r\n\tsetEditorState,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst addSticker = useCallback(\r\n\t\t(type: number) => (\r\n\t\t\te: React.MouseEvent<HTMLImageElement, MouseEvent>\r\n\t\t) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tconst linkText = ` sticker:${type} `;\r\n\r\n\t\t\tconst selectionState = editorState.getSelection();\r\n\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\tconst currentBlock = contentState.getBlockForKey(\r\n\t\t\t\tselectionState.getStartKey()\r\n\t\t\t);\r\n\t\t\tconst currentBlockKey = currentBlock.getKey();\r\n            const blockMap = contentState.getBlockMap();\r\n            \r\n\t\t\tconst blocksBefore = blockMap\r\n\t\t\t\t.toSeq()\r\n                .takeUntil((v) => v === currentBlock);\r\n                \r\n\t\t\tconst blocksAfter = blockMap\r\n\t\t\t\t.toSeq()\r\n\t\t\t\t.skipUntil((v) => v === currentBlock)\r\n                .rest();\r\n                \r\n\t\t\tconst newBlockKey = genKey();\r\n\r\n\t\t\tconst newBlock = new ContentBlock({\r\n\t\t\t\tkey: newBlockKey,\r\n\t\t\t\ttype: \"unstyled\",\r\n\t\t\t\ttext: linkText,\r\n\t\t\t});\r\n\r\n\t\t\tconst newBlockMap = blocksBefore\r\n\t\t\t\t.concat(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t[currentBlockKey, currentBlock],\r\n\t\t\t\t\t\t[newBlockKey, newBlock],\r\n\t\t\t\t\t],\r\n\t\t\t\t\tblocksAfter\r\n\t\t\t\t)\r\n\t\t\t\t.toOrderedMap();\r\n\r\n\t\t\tconst selection = editorState.getSelection();\r\n\r\n\t\t\tconst newContent = contentState.merge({\r\n\t\t\t\tblockMap: newBlockMap,\r\n\t\t\t\tselectionBefore: selection,\r\n\t\t\t\tselectionAfter: selection.merge({\r\n\t\t\t\t\tanchorKey: newBlockKey,\r\n\t\t\t\t\tanchorOffset: 0,\r\n\t\t\t\t\tfocusKey: newBlockKey,\r\n\t\t\t\t\tfocusOffset: 0,\r\n\t\t\t\t\tisBackward: false,\r\n\t\t\t\t}),\r\n\t\t\t}) as ContentState;\r\n\r\n\t\t\tlet newEditorState = EditorState.push(\r\n\t\t\t\teditorState,\r\n\t\t\t\tnewContent,\r\n\t\t\t\t\"split-block\"\r\n\t\t\t);\r\n\r\n\t\t\tlet newSelection = new SelectionState({\r\n\t\t\t\tanchorKey: newBlockKey,\r\n\t\t\t\tanchorOffset: 0,\r\n\t\t\t\tfocusKey: newBlockKey,\r\n\t\t\t\tfocusOffset: linkText.length,\r\n\t\t\t});\r\n\r\n\t\t\tnewEditorState = EditorState.forceSelection(\r\n\t\t\t\tnewEditorState,\r\n\t\t\t\tnewSelection\r\n\t\t\t);\r\n\r\n\t\t\tconst newContentState = newEditorState.getCurrentContent();\r\n\r\n\t\t\tconst contentStateWithEntity = newContentState.createEntity(\r\n\t\t\t\t\"STICKER\",\r\n\t\t\t\t\"IMMUTABLE\",\r\n\t\t\t\t{ type, blockKey: newBlockKey }\r\n\t\t\t);\r\n\r\n\t\t\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n\t\t\tnewEditorState = EditorState.set(newEditorState, {\r\n\t\t\t\tcurrentContent: contentStateWithEntity,\r\n\t\t\t});\r\n\r\n\t\t\tnewEditorState = RichUtils.toggleLink(\r\n\t\t\t\tnewEditorState,\r\n\t\t\t\tnewEditorState.getSelection(),\r\n\t\t\t\tentityKey\r\n\t\t\t);\r\n\r\n\t\t\tnewSelection = new SelectionState({\r\n\t\t\t\tanchorKey: newBlockKey,\r\n\t\t\t\tanchorOffset: linkText.length,\r\n\t\t\t\tfocusKey: newBlockKey,\r\n\t\t\t\tfocusOffset: linkText.length,\r\n\t\t\t});\r\n\r\n\t\t\tnewEditorState = EditorState.forceSelection(\r\n\t\t\t\tnewEditorState,\r\n\t\t\t\tnewSelection\r\n\t\t\t);\r\n\r\n\t\t\tsetEditorState(newEditorState);\r\n\t\t\tcloseStickerPicker();\r\n\t\t},\r\n\t\t[editorState]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fade in={true}>\r\n\t\t\t<div className={classes.stickerPicker}>\r\n\t\t\t\t<Loader className={classes.loader} />\r\n\t\t\t\t{new Array(stickersAmount).fill(null).map((_, i) => (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={`${stickersPath}${i + 1}.gif`}\r\n\t\t\t\t\t\tonClick={addSticker(i + 1)}\r\n\t\t\t\t\t\tclassName={classes.sticker}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\tonClick={closeStickerPicker}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n","import { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getIcon } from \"../icons\";\r\nimport { EditorState, RichUtils } from \"draft-js\";\r\nimport clsx from \"clsx\";\r\nimport { richTextControls, ToolControl } from \"./toolControls\";\r\nimport { LinkPicker } from \"./LinkPicker\";\r\nimport { StickerPicker } from \"./StickerPicker\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorTools: {\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tmaxWidth: \"100%\",\r\n\t\toverflow: \"auto\",\r\n\t\tbackground: \"#fbfbfb\",\r\n\t},\r\n\tbtn: {\r\n\t\tpadding: 4,\r\n\t\tborderRadius: 0,\r\n\t\tborderRight: \"1px solid #d2d2d2\",\r\n\t},\r\n\ttextIcon: {\r\n\t\tfontWeight: 400,\r\n\t\tfontSize: 15,\r\n\t\theight: 24,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tpaddingLeft: 3,\r\n\t\tpaddingRight: 3,\r\n\t},\r\n});\r\n\r\ninterface RichTextEditorToolsProps {\r\n\t/**\r\n\t * Текущий стейт редактора\r\n\t */\r\n\teditorState: EditorState;\r\n\t/**\r\n\t * Ф-я обновления текущего стейта\r\n\t */\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\t/**\r\n\t * CSS-класс\r\n\t */\r\n\tclassName?: string;\r\n}\r\n\r\n/**\r\n * Панель инструментов расширенного редактора текстов\r\n *\r\n * @param {RichTextEditorToolsProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const RichTextEditorTools: React.FC<RichTextEditorToolsProps> = React.memo(\r\n\t({\r\n\t\teditorState,\r\n\t\tsetEditorState,\r\n\t\tclassName,\r\n\t}: RichTextEditorToolsProps): JSX.Element => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst [linkPicker, setLinkPicker] = useState<boolean>();\r\n\r\n\t\tconst openLinkPicker = useCallback(() => {\r\n\t\t\tconst selection = editorState.getSelection();\r\n\t\t\tif (!selection.isEmpty() && !selection.isCollapsed()) {\r\n\t\t\t\tsetLinkPicker(true);\r\n\t\t\t}\r\n\t\t}, [editorState]);\r\n\r\n\t\tconst closeLinkPicker = useCallback(() => setLinkPicker(false), []);\r\n\r\n\t\tconst [stickerPicker, setStickerPicker] = useState<boolean>();\r\n\r\n\t\tconst closeStickerPicker = useCallback(\r\n\t\t\t() => setStickerPicker(false),\r\n\t\t\t[]\r\n\t\t);\r\n\r\n\t\tconst onToggleControl = useCallback(\r\n\t\t\t({ type, style }: ToolControl) => (\r\n\t\t\t\te: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n\t\t\t) => {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase \"block\":\r\n\t\t\t\t\t\tif (style) {\r\n\t\t\t\t\t\t\tsetEditorState(\r\n\t\t\t\t\t\t\t\tRichUtils.toggleBlockType(editorState, style)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"inline\":\r\n\t\t\t\t\t\tif (style) {\r\n\t\t\t\t\t\t\tsetEditorState(\r\n\t\t\t\t\t\t\t\tRichUtils.toggleInlineStyle(editorState, style)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"link\":\r\n\t\t\t\t\t\topenLinkPicker();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"sticker\":\r\n\t\t\t\t\t\tsetStickerPicker(true);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t[editorState, openLinkPicker, setEditorState]\r\n\t\t);\r\n\r\n\t\tconst currentStyle = editorState.getCurrentInlineStyle();\r\n\t\tconst selection = editorState.getSelection();\r\n\t\tconst blockType = editorState\r\n\t\t\t.getCurrentContent()\r\n\t\t\t.getBlockForKey(selection.getStartKey())\r\n\t\t\t.getType();\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className={clsx(classes.richEditorTools, className)}>\r\n\t\t\t\t\t{richTextControls.map((control, i) => {\r\n\t\t\t\t\t\tconst IconComponent =\r\n\t\t\t\t\t\t\tcontrol.icon && getIcon(control.icon);\r\n\t\t\t\t\t\tconst color =\r\n\t\t\t\t\t\t\t(control.style &&\r\n\t\t\t\t\t\t\t\tcontrol.type === \"inline\" &&\r\n\t\t\t\t\t\t\t\tcurrentStyle.has(control.style)) ||\r\n\t\t\t\t\t\t\t(control.type === \"block\" &&\r\n\t\t\t\t\t\t\t\tcontrol.style === blockType)\r\n\t\t\t\t\t\t\t\t? \"primary\"\r\n\t\t\t\t\t\t\t\t: \"default\";\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tplacement=\"bottom\"\r\n\t\t\t\t\t\t\t\ttitle={control.tooltip || \"\"}\r\n\t\t\t\t\t\t\t\tarrow={true}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tonMouseDown={onToggleControl(control)}\r\n\t\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\t\tdisabled={control.disabled}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{IconComponent && <IconComponent />}\r\n\t\t\t\t\t\t\t\t\t{control.text && (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.textIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t{control.text}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t{linkPicker && (\r\n\t\t\t\t\t<LinkPicker\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tcloseLinkPicker={closeLinkPicker}\r\n\t\t\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{/* ***TODO: Just for fun! Remove in production!*** */}\r\n\t\t\t\t{stickerPicker && (\r\n\t\t\t\t\t<StickerPicker\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tcloseStickerPicker={closeStickerPicker}\r\n\t\t\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { ContentBlock, ContentState, DraftDecorator } from \"draft-js\";\r\nimport React, { ReactNode } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlink: {\r\n\t\tcolor: \"#0088bb\",\r\n\t\ttextDecoration: \"underline\",\r\n\t},\r\n});\r\n\r\ninterface LinkPreviewProps {\r\n\t/**\r\n\t * Название ссылки\r\n\t */\r\n\tchildren?: ReactNode;\r\n\t/**\r\n\t * Адрес ссылки\r\n\t */\r\n\turl?: string;\r\n\t/**\r\n\t * Стейт расширенного редактора текстов\r\n\t */\r\n\tcontentState: ContentState;\r\n\t/**\r\n\t * Id ссылки\r\n\t */\r\n\tentityKey: string;\r\n}\r\n\r\n/**\r\n * Декоратор для отображения ссылок в расширенном редакторе текстов\r\n *\r\n * @param {LinkPreviewProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPreview: React.FC<LinkPreviewProps> = (props) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { url } = props.contentState.getEntity(props.entityKey).getData();\r\n\r\n\treturn (\r\n\t\t<a className={classes.link} href={url} title={`Ссылка: ${url}`}>\r\n\t\t\t{props.children}\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\n/**\r\n * Ф-я для определения ссылки в стейте Draft.js\r\n *\r\n * @param {ContentBlock} contentBlock - блок с контентом\r\n * @param {Function} callback - callback\r\n * @param {ContentState} contentState - текущий стейт редактора\r\n * @returns {void}\r\n */\r\nexport const findLinkEntities = (\r\n\tcontentBlock: ContentBlock,\r\n\tcallback: (start: number, end: number) => void,\r\n\tcontentState: ContentState\r\n): void =>\r\n\tcontentBlock.findEntityRanges((character) => {\r\n\t\tconst entityKey = character.getEntity();\r\n\t\treturn (\r\n\t\t\tentityKey !== null &&\r\n\t\t\tcontentState.getEntity(entityKey).getType() === \"LINK\"\r\n\t\t);\r\n\t}, callback);\r\n","import { EditorState } from \"draft-js\";\r\nimport React from \"react\";\r\n\r\ninterface RichEditorContextProps {\r\n\t/**\r\n\t * Стейт редактора текстов\r\n\t */\r\n\teditorState?: EditorState;\r\n\t/**\r\n\t * Ф-я изменения стейта редактора текстов\r\n\t */\r\n\tsetEditorState?: (editorState: EditorState) => void;\r\n}\r\n\r\n/**\r\n * Контекст расширенного редактора текстов\r\n */\r\nexport const RichEditorContext = React.createContext<RichEditorContextProps>(\r\n\t{}\r\n);\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n\tContentBlock,\r\n\tContentState,\r\n\tEditorState,\r\n\tModifier,\r\n\tSelectionState,\r\n} from \"draft-js\";\r\nimport React, { useCallback, useContext } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\nimport { RichEditorContext } from \"./RichEditorContext\";\r\nimport { stickersPath } from \"./StickerPicker\";\r\n\r\nconst useStyles = makeStyles({\r\n\tstickerWrapper: {\r\n\t\tposition: \"relative\",\r\n\t\tzIndex: 2,\r\n\t\twidth: 100,\r\n\t},\r\n\tsticker: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tclose: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 0,\r\n\t\tright: 0,\r\n\t\tzIndex: 2,\r\n\t\tfontSize: 10,\r\n\t\tcursor: \"pointer\",\r\n\t\tdisplay: \"block\",\r\n\t\topacity: 0.7,\r\n\t\ttransition: \"opacity .2s linear\",\r\n\t\t\"&:hover\": {\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\n\r\ninterface StickerPreviewProps {\r\n\t/**\r\n\t * Номер стикера\r\n\t */\r\n\ttype: number;\r\n\t/**\r\n\t * Стейт расширенного редактора текстов\r\n\t */\r\n\tcontentState: ContentState;\r\n\t/**\r\n\t * Id объекта в редакторе\r\n\t */\r\n\tentityKey: string;\r\n}\r\n\r\n/**\r\n * Декоратор для отображения стикеров в расширенном редакторе текстов\r\n *\r\n * ***TODO: Just for fun! Remove in production!***\r\n *\r\n * @param {StickerPreviewProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const StickerPreview: React.FC<StickerPreviewProps> = ({\r\n\tcontentState,\r\n\tentityKey,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { editorState, setEditorState } = useContext(RichEditorContext);\r\n\r\n\tconst { type, blockKey } = contentState.getEntity(entityKey).getData();\r\n\r\n\tconst onRemove = useCallback(() => {\r\n\t\tif (editorState && entityKey && setEditorState) {\r\n\t\t\ttry {\r\n\t\t\t\tconst block = contentState.getBlockForKey(blockKey);\r\n\r\n\t\t\t\tconst targetRange = new SelectionState({\r\n\t\t\t\t\tanchorKey: blockKey,\r\n\t\t\t\t\tanchorOffset: 0,\r\n\t\t\t\t\tfocusKey: blockKey,\r\n\t\t\t\t\tfocusOffset: block.getLength(),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst withoutTeX = Modifier.removeRange(\r\n\t\t\t\t\tcontentState,\r\n\t\t\t\t\ttargetRange,\r\n\t\t\t\t\t\"backward\"\r\n\t\t\t\t);\r\n\t\t\t\tconst resetBlock = Modifier.setBlockType(\r\n\t\t\t\t\twithoutTeX,\r\n\t\t\t\t\twithoutTeX.getSelectionAfter(),\r\n\t\t\t\t\t\"unstyled\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst newState = EditorState.push(\r\n\t\t\t\t\teditorState,\r\n\t\t\t\t\tresetBlock,\r\n\t\t\t\t\t\"remove-range\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetEditorState(\r\n\t\t\t\t\tEditorState.forceSelection(\r\n\t\t\t\t\t\tnewState,\r\n\t\t\t\t\t\tresetBlock.getSelectionAfter()\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"Can't remove sticker\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [entityKey, editorState, blockKey, setEditorState]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.stickerWrapper}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={`${stickersPath}${type}.gif`}\r\n\t\t\t\tclassName={classes.sticker}\r\n\t\t\t/>\r\n\t\t\t<span className={classes.close} onClick={onRemove}>\r\n\t\t\t\t<CloseIcon />\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n/**\r\n * Ф-я для определения стикера в стейте Draft.js\r\n *\r\n * ***TODO: Just for fun! Remove in production!***\r\n *\r\n * @param {ContentBlock} contentBlock - блок с контентом\r\n * @param {Function} callback - callback\r\n * @param {ContentState} contentState - текущий стейт редактора\r\n * @returns {void}\r\n */\r\nexport const findStickerEntities = (\r\n\tcontentBlock: ContentBlock,\r\n\tcallback: (start: number, end: number) => void,\r\n\tcontentState: ContentState\r\n): void =>\r\n\tcontentBlock.findEntityRanges((character) => {\r\n\t\tconst entityKey = character.getEntity();\r\n\t\treturn (\r\n\t\t\tentityKey !== null &&\r\n\t\t\tcontentState.getEntity(entityKey).getType() === \"STICKER\"\r\n\t\t);\r\n\t}, callback);\r\n","import { CompositeDecorator } from \"draft-js\";\r\nimport { findLinkEntities, LinkPreview } from \"./LinkPreview\";\r\nimport { findStickerEntities, StickerPreview } from \"./StickerPreview\";\r\n\r\n/**\r\n * Декораторы расширенного редактора текстов\r\n */\r\nexport const richTextEditorDecorators = new CompositeDecorator([\r\n\t{\r\n\t\tstrategy: findLinkEntities,\r\n\t\tcomponent: LinkPreview,\r\n    },\r\n    // ***TODO: Just for fun! Remove in production!***\r\n\t{\r\n\t\tstrategy: findStickerEntities,\r\n\t\tcomponent: StickerPreview,\r\n\t},\r\n]);\r\n","import {\r\n\tContentState,\r\n\tconvertFromRaw,\r\n\tconvertToRaw,\r\n\tEditorState,\r\n} from \"draft-js\";\r\nimport { draftToMarkdown, markdownToDraft } from \"markdown-draft-js\";\r\n\r\n/**\r\n * Декоратор для _курсива_ в markdown\r\n */\r\nconst italicDecorator = () => \"*\";\r\n\r\n/**\r\n * Конвертирует стейт Draft.js в Markdown\r\n *\r\n * @param {EditorState} editorState - стейт редактора текстов\r\n * @returns {string}\r\n */\r\nexport const convertDraftToMarkdown = (editorState: EditorState): string => {\r\n\tconst content = editorState.getCurrentContent();\r\n\tconst rawObject = convertToRaw(content);\r\n\r\n\tconst markdown = draftToMarkdown(rawObject, {\r\n\t\tstyleItems: {\r\n\t\t\tITALIC: {\r\n\t\t\t\topen: italicDecorator,\r\n\t\t\t\tclose: italicDecorator,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\r\n\treturn markdown;\r\n};\r\n\r\n/**\r\n * Конвертирует строку в формате Markdown в объект-стейт редактора текстов Draft.js\r\n *\r\n * @param {string | undefined} markdown - строка в формате markdown\r\n * @returns {ContentState}\r\n */\r\nexport const convertMarkdownToDraft = (markdown: string = \"\"): ContentState =>\r\n\tconvertFromRaw(markdownToDraft(markdown));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, {\r\n\tcreateRef,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\nimport { Editor, EditorState } from \"draft-js\";\r\nimport { RichTextEditorTools } from \"./RichTextEditorTools\";\r\nimport clsx from \"clsx\";\r\nimport { richTextEditorDecorators } from \"./decorators\";\r\nimport {\r\n\tconvertMarkdownToDraft,\r\n\tconvertDraftToMarkdown,\r\n} from \"./draftMarkdown\";\r\nimport { RichEditorContext } from \"./RichEditorContext\";\r\n\r\nconst border = \"1px solid #d2d2d2\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorWrapper: {\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborder,\r\n\t\tmarginBottom: 20,\r\n\t\tposition: \"relative\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingBottom: 22,\r\n\t},\r\n\trichEditorWrapperFocus: {\r\n\t\tborderColor: \"#4dd0e1\",\r\n\t},\r\n\trichEditorArea: {\r\n\t\tpadding: 10,\r\n\t\theight: 200,\r\n\t\toverflowY: \"auto\",\r\n\t\ttransition: \"box-shadow .2s ease-in-out\",\r\n\t},\r\n\trichEditorAreaFocus: {\r\n\t\tboxShadow: \"inset 0px 0px 10px #caefff\",\r\n\t},\r\n\ttoolsUnfocus: {\r\n\t\topacity: 0.95,\r\n\t\ttransition: \"opacity .2s ease-in-out\",\r\n\t},\r\n\tamountBar: {\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\twidth: \"100%\",\r\n\t\ttextAlign: \"right\",\r\n\t\tfontSize: 11,\r\n\t\tbackground: \"#eeeeee\",\r\n\t\tborderTop: \"1px solid #d2d2d2\",\r\n\t\tpadding: 3,\r\n\t\tzIndex: 1,\r\n\t\tcolor: \"#4c4b4b\",\r\n\t},\r\n\tamountBarError: {\r\n\t\tcolor: \"#ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst styleMap = {\r\n\tBOLD: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n\tLINK: {\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n};\r\n\r\nconst defaultMax = 1000;\r\n\r\ninterface RichTextEditorProps {\r\n\t/**\r\n\t * Обработчик изменения текста\r\n\t */\r\n\tonChange: (value: string) => void;\r\n\t/**\r\n\t * Дефолтное значение\r\n\t */\r\n\tdefaultValue?: string;\r\n\t/**\r\n\t * Редактор очищается при изменении этого свойства\r\n\t */\r\n\tforceClean?: number;\r\n\t/**\r\n\t * Подсказка\r\n\t */\r\n\tplaceholder?: string;\r\n\t/**\r\n\t * CSS-класс\r\n\t */\r\n\tclassName?: string;\r\n\t/**\r\n\t * Макс. количество символов\r\n\t */\r\n\tmax?: number;\r\n}\r\n\r\n/**\r\n * Расширенный редактор текста. Экспортирует строку в формате Markdown.\r\n * - Фреймворк для создания редактора: [Draft.js](https://draftjs.org/)\r\n * - Конвертер стейта Draft.js в Markdown: [markdown-draft-js](https://www.npmjs.com/package/markdown-draft-js)\r\n *\r\n * @param {RichTextEditorProps} props - св-ва компонента\r\n * @returns {JSX.Element}\r\n */\r\nexport const RichTextEditor: React.FC<RichTextEditorProps> = React.memo(\r\n\t({\r\n\t\tdefaultValue,\r\n\t\tforceClean,\r\n\t\tplaceholder,\r\n\t\tclassName,\r\n\t\t...props\r\n\t}: RichTextEditorProps): JSX.Element => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst [editorState, setEditorState] = useState(\r\n\t\t\tEditorState.createWithContent(\r\n\t\t\t\tconvertMarkdownToDraft(defaultValue),\r\n\t\t\t\trichTextEditorDecorators\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst max = useMemo(() => props.max || defaultMax, [props.max]);\r\n\r\n\t\tconst [symbolsLeft, setSymbolsLeft] = useState<number>(max);\r\n\r\n\t\tconst onChange = useCallback(\r\n\t\t\t(nextEditorState: EditorState) => setEditorState(nextEditorState),\r\n\t\t\t[]\r\n\t\t);\r\n\r\n\t\tconst ref = createRef<any>();\r\n\t\tconst [focus, setFocus] = useState<boolean>();\r\n\r\n\t\tconst onBlur = useCallback(() => setFocus(false), [editorState]);\r\n\r\n\t\tconst onClickArea = useCallback(() => {\r\n\t\t\tif (ref && ref.current) {\r\n\t\t\t\tref.current.focus();\r\n\t\t\t\tsetFocus(true);\r\n\t\t\t}\r\n\t\t}, [ref]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (forceClean) {\r\n\t\t\t\tsetEditorState(\r\n\t\t\t\t\tEditorState.createEmpty(richTextEditorDecorators)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, [forceClean]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst markdownString = convertDraftToMarkdown(editorState);\r\n\t\t\tprops.onChange(markdownString);\r\n\t\t\tsetSymbolsLeft(max - markdownString.length);\r\n\t\t}, [editorState]);\r\n\r\n\t\tconst editorContextValue = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\teditorState,\r\n\t\t\t\tsetEditorState,\r\n\t\t\t}),\r\n\t\t\t[editorState]\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<RichEditorContext.Provider value={editorContextValue}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\tclasses.richEditorWrapper,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t[classes.richEditorWrapperFocus]: focus,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclassName\r\n\t\t\t\t\t)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<RichTextEditorTools\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t\t\t\tclassName={!focus ? classes.toolsUnfocus : undefined}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={clsx(classes.richEditorArea, {\r\n\t\t\t\t\t\t\t[classes.richEditorAreaFocus]: focus,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tonClick={onClickArea}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={clsx(classes.amountBar, {\r\n\t\t\t\t\t\t\t[classes.amountBarError]: symbolsLeft <= 0,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tОсталось симолов: {symbolsLeft}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</RichEditorContext.Provider>\r\n\t\t);\r\n\t}\r\n);\r\n","import { stickersPath } from \"../RichTextEditor/StickerPicker\";\r\n\r\nconst stickerRegexp = /^sticker:[0-9]+$/;\r\nconst stickerWidth = 100;\r\n\r\n/**\r\n * Декоратор для стикеров в Markdown\r\n * \r\n * ***TODO: Just for fun! Remove in production!***\r\n *\r\n * @param text\r\n */\r\nexport const decorateStickers = (text: string) => {\r\n\tconst words = text.split(\" \");\r\n\tconst decoratedWords = words.map((word) => {\r\n\t\tif (stickerRegexp.test(word)) {\r\n\t\t\tconst type = word.replace(\"sticker:\", \"\");\r\n\t\t\treturn `<img style=\"display:block;\" src=\"${stickersPath}${type}.gif\" width=\"${stickerWidth}\" />`;\r\n\t\t}\r\n\r\n\t\treturn word;\r\n\t});\r\n\r\n\treturn decoratedWords.join(\" \");\r\n};\r\n","// TODO: переделать на коды символов!\r\nconst colors = [\r\n\t{\r\n\t\tsymbols: [\"A\", \"B\", \"А\", \"Б\", \"В\"],\r\n\t\tcolor: \"#55efc4\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"E\", \"F\", \"Г\", \"Д\", \"Е\", \"Ё\"],\r\n\t\tcolor: \"#81ecec\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"I\", \"J\", \"K\", \"Ж\", \"З\", \"И\", \"Й\"],\r\n\t\tcolor: \"#74b9ff\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"L\", \"M\", \"N\", \"O\", \"К\", \"Л\", \"М\", \"Н\"],\r\n\t\tcolor: \"#a29bfe\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"P\", \"Q\", \"R\", \"О\", \"П\", \"Р\", \"С\"],\r\n\t\tcolor: \"#ffeaa7\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"S\", \"T\", \"U\", \"Т\", \"У\", \"Ф\", \"Х\"],\r\n\t\tcolor: \"#f8c291\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"V\", \"W\", \"Ц\", \"Ч\", \"Ш\", \"Щ\"],\r\n\t\tcolor: \"#fab1a0\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"X\", \"Y\", \"Z\", \"Ъ\", \"Ы\", \"Ь\"],\r\n\t\tcolor: \"#ff7675\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"C\", \"D\", \"Э\", \"Ю\", \"Я\"],\r\n\t\tcolor: \"#fd79a8\",\r\n\t},\r\n\r\n\t{\r\n\t\tsymbols: [\"G\", \"H\"],\r\n\t\tcolor: \"#636e72\",\r\n\t},\r\n];\r\n\r\nconst notLatinSymbolColor = \"#636e72\";\r\n\r\ninterface AvatarData {\r\n\tsymbol: string;\r\n\tcolor: string;\r\n}\r\n\r\n/**\r\n * Выделяет первую букву имени автора комментария и выбирает случайный цвет для генерации аватара.\r\n *\r\n * @param {string} author - имя автора комментария\r\n */\r\nexport const getCommentAvatarData = (author: string): AvatarData => {\r\n\tconst firstSymbol = author.split(\" \")[0].slice(0, 1).toLocaleUpperCase();\r\n\tconst symbol = `${firstSymbol}${author.split(\" \")[1].slice(0, 1).toLocaleUpperCase()}`;\r\n\tconst color = colors.find(({ symbols }) => symbols.includes(firstSymbol));\r\n\r\n\treturn {\r\n\t\tcolor: color ? color.color : notLatinSymbolColor,\r\n\t\tsymbol,\r\n\t};\r\n};\r\n","import { Fade, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport React, {\r\n\tcreateRef,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { getIcon } from \"../icons\";\r\nimport { decorateStickers } from \"./decorateStickers\";\r\nimport { getCommentAvatarData } from \"./getCommentAvatar\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcomment: {\r\n\t\tmarginBottom: 25,\r\n\t\t\"&:nth-last-child(1)\": {\r\n\t\t\tmarginBottom: 0,\r\n\t\t},\r\n\t\tposition: \"relative\",\r\n\t\tpaddingLeft: 60,\r\n\r\n\t\t\"&:before\": {\r\n\t\t\tcontent: \"''\",\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: \"calc(100% - 60px)\",\r\n\t\t\theight: 1,\r\n\t\t\tbackground: \"#d4d4d4\",\r\n\t\t\ttop: 10,\r\n\t\t\tzIndex: 1,\r\n\t\t},\r\n\r\n\t\t\"&:after\": {\r\n\t\t\tcontent: \"''\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: 5,\r\n\t\t\theight: 5,\r\n\t\t\tbackground: \"#d4d4d4\",\r\n\t\t\ttop: 8,\r\n\t\t\tleft: 60,\r\n\t\t\tright: \"auto\",\r\n\t\t},\r\n\t},\r\n\tcommentArea: {\r\n\t\tpadding: 10,\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborderRadius: 5,\r\n\t\tboxShadow: \"2px 4px 5px 2px #dcdcdc80\",\r\n\t},\r\n\tauthor: {\r\n\t\tfontWeight: 500,\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n\tdate: {\r\n\t\topacity: 0.8,\r\n\t\tmarginBottom: 10,\r\n\t\tcolor: \"#5d5d5d\",\r\n\t\tfontSize: 13,\r\n\t},\r\n\ttext: {\r\n\t\toverflow: \"hidden\",\r\n\t\tposition: \"relative\",\r\n\t\t\"& p\": {\r\n\t\t\tmarginTop: 0,\r\n\t\t},\r\n\t},\r\n\ttextHidden: {\r\n\t\t\"&:after\": {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tcontent: \"''\",\r\n\t\t\tbackground: \"linear-gradient(to top, #ffffff, transparent)\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: 40,\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tbottom: 0,\r\n\t\t\tzIndex: 1,\r\n\t\t},\r\n\t},\r\n\treadMoreButton: {\r\n\t\tbottom: 0,\r\n\t\tposition: \"absolute\",\r\n\t\tmarginLeft: \"calc(50% - 15px)\",\r\n\t\tzIndex: 2,\r\n\t\ttransition: \"transform .3s ease-in-out, background .2s linear\",\r\n\t\tcolor: \"#252733\",\r\n\t\tbackground: \"rgb(16, 16, 16, 0.1)\",\r\n\t},\r\n\treadMoreButtonClose: {\r\n\t\ttransform: \"rotate(180deg)\",\r\n\t\tposition: \"static\",\r\n\t\tbackground: \"transparent\",\r\n\t},\r\n\tavatar: {\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#636e72\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tborderRadius: \"100%\",\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tfontSize: 20,\r\n\t\tfontWeight: 400,\r\n\t},\r\n\tavatarSelf: {\r\n\t\tborder: \"3px solid #ffffff\",\r\n\r\n\t\t\"&:after\": {\r\n\t\t\tcontent: \"''\",\r\n\t\t\twidth: 14,\r\n\t\t\theight: 14,\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tbottom: -4,\r\n\t\t\tright: 0,\r\n\t\t\tborderRadius: \"100%\",\r\n\t\t\tbackground: \"#03A9F4\",\r\n\t\t\tborder: \"2px solid #ffffff\",\r\n\t\t},\r\n\t},\r\n\tdecision: {\r\n\t\tcolor: \"#636e72\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: 3,\r\n\t\tfontSize: 11,\r\n\t\tmarginLeft: 20,\r\n\t\tmarginBottom: 8,\r\n\t\tborderRadius: 5,\r\n\t\tpaddingLeft: 10,\r\n\t\tpaddingRight: 10,\r\n\t\tposition: \"relative\",\r\n\t\tzIndex: 2,\r\n\t\tbackground: \"#eef2f4\",\r\n\t\tborder: \"1px solid\",\r\n\t},\r\n\tdecisionSuccess: {\r\n\t\tcolor: \"#8BC34A\",\r\n\t\tborder: \"1px solid\",\r\n\t},\r\n\tdecisionError: {\r\n\t\tcolor: \"#f44336\",\r\n\t\tborder: \"1px solid\",\r\n\t},\r\n});\r\n\r\nconst ArrowIcon = getIcon(\"ExpandMore\");\r\n\r\n/**\r\n * Максимальная высота блока с текстом комментария\r\n */\r\nconst maxHeight = 120;\r\n\r\nexport interface CommentProps {\r\n\t/**\r\n\t * Содержимое коментария в формате Markdown\r\n\t */\r\n\ttext: string;\r\n\t/**\r\n\t * Дата\r\n\t */\r\n\tdate: string;\r\n\t/**\r\n\t * Индекс во внешнем массиве комментариев\r\n\t */\r\n\tindex?: number;\r\n\t/**\r\n\t * Анимировать коммент, если он первый в списке\r\n\t */\r\n\tfirstAnimated?: boolean;\r\n\t/**\r\n\t * Решение\r\n\t */\r\n\tdecision?: {\r\n\t\t/**\r\n\t\t * Успех/неуспех\r\n\t\t */\r\n\t\tsuccess?: boolean;\r\n\t\t/**\r\n\t\t * Текст решения\r\n\t\t */\r\n\t\tlabel: string;\r\n\t};\r\n\t/**\r\n\t * Id текущего пользователя\r\n\t */\r\n\tselfUserId?: number;\r\n\t/**\r\n\t * Пользователь, оставивший коммент\r\n\t */\r\n\tuser: {\r\n\t\t/**\r\n\t\t * Id\r\n\t\t */\r\n\t\tid: number;\r\n\t\t/**\r\n\t\t * Имя\r\n\t\t */\r\n\t\tname: string;\r\n\t};\r\n}\r\n\r\n/**\r\n * Компонент для отображения комментария\r\n * - Пакет для рендеринга html из Markdown: [react-markdown](https://www.npmjs.com/package/react-markdown)\r\n *\r\n * @param {CommentProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const SingleComment: React.FC<CommentProps> = React.memo(\r\n\t({\r\n\t\tdate,\r\n\t\ttext,\r\n\t\tindex,\r\n\t\tfirstAnimated,\r\n\t\tdecision,\r\n\t\tselfUserId,\r\n\t\tuser,\r\n\t}: CommentProps) => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst ref = createRef<HTMLDivElement>();\r\n\r\n\t\tconst [hidden, setHidden] = useState<boolean>();\r\n\t\tconst [needReadMoreButton, setNeedReadMoreButton] = useState<boolean>();\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (ref && ref.current) {\r\n\t\t\t\tconst initialHeight = ref.current.getBoundingClientRect()\r\n\t\t\t\t\t.height;\r\n\r\n\t\t\t\tif (hidden === undefined && initialHeight > maxHeight) {\r\n\t\t\t\t\tsetHidden(true);\r\n\t\t\t\t\tsetNeedReadMoreButton(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, []);\r\n\r\n\t\tconst toggleHidden = useCallback(() => setHidden(!hidden), [hidden]);\r\n\r\n\t\tconst height = useMemo(() => {\r\n\t\t\treturn hidden ? maxHeight : undefined;\r\n\t\t}, [hidden]);\r\n\r\n\t\tconst animationTimeout = useMemo(\r\n\t\t\t() => (firstAnimated && index === 0 ? 1000 : 0),\r\n\t\t\t[index, firstAnimated]\r\n\t\t);\r\n\r\n\t\tconst avatar = useMemo(() => getCommentAvatarData(user.name), [\r\n\t\t\tuser.name,\r\n\t\t]);\r\n\r\n        // ***TODO: Just for fun! Remove in production!***\r\n\t\tconst decoratedText = useMemo(() => decorateStickers(text), [text]);\r\n\r\n\t\treturn (\r\n\t\t\t<Fade in={true} timeout={animationTimeout}>\r\n\t\t\t\t<div className={clsx(classes.comment)}>\r\n\t\t\t\t\t{decision && (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(classes.decision, {\r\n\t\t\t\t\t\t\t\t[classes.decisionSuccess]:\r\n\t\t\t\t\t\t\t\t\tdecision && decision.success,\r\n\t\t\t\t\t\t\t\t[classes.decisionError]:\r\n\t\t\t\t\t\t\t\t\tdecision && decision.success === false,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{decision.label}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={clsx(classes.avatar, {\r\n\t\t\t\t\t\t\t[classes.avatarSelf]: selfUserId === user.id,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tstyle={{ backgroundColor: avatar.color }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{avatar.symbol}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.commentArea}>\r\n\t\t\t\t\t\t<div className={classes.author}>{user.name}</div>\r\n\t\t\t\t\t\t<div className={classes.date}>{date}</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(classes.text, {\r\n\t\t\t\t\t\t\t\t[classes.textHidden]: hidden,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\tstyle={{ maxHeight: height }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ReactMarkdown escapeHtml={false}>\r\n\t\t\t\t\t\t\t\t{decoratedText}\r\n\t\t\t\t\t\t\t</ReactMarkdown>\r\n\t\t\t\t\t\t\t{needReadMoreButton && (\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tclassName={clsx(classes.readMoreButton, {\r\n\t\t\t\t\t\t\t\t\t\t[classes.readMoreButtonClose]: !hidden,\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleHidden}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{ArrowIcon && <ArrowIcon />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>\r\n\t\t);\r\n\t}\r\n);\r\n","import { LoremIpsum } from \"lorem-ipsum\";\r\nimport { CommentProps } from \"./Comment\";\r\n\r\nconst capitalize = (str: string) => `${str[0].toUpperCase()}${str.slice(1)}`;\r\n\r\n/**\r\n * Для тестов. Генерирует рыбу-коментарий.\r\n */\r\nexport const generateComment = (): CommentProps => {\r\n\tconst lorem = new LoremIpsum({\r\n\t\tsentencesPerParagraph: {\r\n\t\t\tmax: 2,\r\n\t\t\tmin: 1,\r\n\t\t},\r\n\t\twordsPerSentence: {\r\n\t\t\tmax: 6,\r\n\t\t\tmin: 4,\r\n\t\t},\r\n\t});\r\n\r\n\treturn {\r\n\t\tdate: `12.02.2020 20:43`,\r\n\t\ttext: lorem.generateSentences(5),\r\n\t\tuser: {\r\n\t\t\tid: 1,\r\n\t\t\tname: `${capitalize(lorem.generateWords(1))} ${capitalize(\r\n\t\t\t\tlorem.generateWords(1)\r\n\t\t\t)}`,\r\n\t\t},\r\n\t\tdecision: {\r\n\t\t\tlabel: \"Решение не принято\",\r\n\t\t},\r\n\t};\r\n};\r\n","import { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { CommentProps, SingleComment } from \"./Comment\";\r\nimport { generateComment } from \"./generateComment\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcommentsWrapper: {\r\n\t\tmarginBottom: 20,\r\n\t},\r\n\tcomments: {\r\n\t\tmarginBottom: 10,\r\n\t\tmaxHeight: 700,\r\n\t\toverflowY: \"auto\",\r\n\t\toverflowX: \"hidden\",\r\n\t\tpaddingTop: 10,\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingBottom: 15,\r\n\t},\r\n});\r\n\r\nconst paginationSize = 5;\r\nconst tmpTotalCount = 15;\r\n\r\n/**\r\n * Формат ответа от сервера, возвращающего массив комментариев\r\n */\r\ninterface CommentsList {\r\n\trows: CommentProps[];\r\n\ttotalCount: number;\r\n}\r\n\r\ninterface CommentsProps {\r\n\t/**\r\n\t * Массив комментариев.\r\n\t * TODO: только для тестов.\r\n\t * В проекте комментарии будут запрашиваться самим комопонентом с сервера.\r\n\t */\r\n\tdata: CommentProps[];\r\n\t/**\r\n\t * CSS-класс\r\n\t */\r\n\tclassName?: string;\r\n\t/**\r\n\t * Id текущего пользователя\r\n\t */\r\n\tselfUserId?: number;\r\n}\r\n\r\n/**\r\n * Список комментариев\r\n *\r\n * @param {CommentsProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const Comments: React.FC<CommentsProps> = React.memo(\r\n\t({ data, className, selfUserId }) => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst [commentsList, setCommentsList] = useState<CommentsList>({\r\n\t\t\trows: data,\r\n\t\t\ttotalCount: tmpTotalCount,\r\n\t\t});\r\n\r\n\t\tconst [animated, setAnimated] = useState<boolean>(false);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetCommentsList({\r\n\t\t\t\trows: data,\r\n\t\t\t\ttotalCount: tmpTotalCount,\r\n\t\t\t});\r\n\t\t\tsetAnimated(true);\r\n\t\t}, [data]);\r\n\r\n\t\tconst showMoreDisabled = useMemo(\r\n\t\t\t() => commentsList.rows.length >= commentsList.totalCount,\r\n\t\t\t[commentsList]\r\n\t\t);\r\n\r\n\t\tconst onShowMore = useCallback(() => {\r\n\t\t\t// TODO: временно, заглушка! Здесь запрос на сервер!\r\n\t\t\tconst toAdd: CommentProps[] = new Array(paginationSize)\r\n\t\t\t\t.fill(null)\r\n\t\t\t\t.map(generateComment);\r\n\r\n\t\t\tsetCommentsList({\r\n\t\t\t\trows: [...commentsList.rows, ...toAdd],\r\n\t\t\t\ttotalCount: tmpTotalCount,\r\n\t\t\t});\r\n\t\t\tsetAnimated(false);\r\n\t\t}, [commentsList]);\r\n\r\n\t\tconst showLessDisabled = useMemo(\r\n\t\t\t() => commentsList.rows.length <= paginationSize,\r\n\t\t\t[commentsList]\r\n\t\t);\r\n\r\n\t\tconst onShowLess = useCallback(() => {\r\n\t\t\t// TODO: временно, заглушка!\r\n\t\t\tsetCommentsList({\r\n\t\t\t\trows: commentsList.rows.slice(0, -paginationSize),\r\n\t\t\t\ttotalCount: tmpTotalCount,\r\n\t\t\t});\r\n\t\t\tsetAnimated(false);\r\n\t\t}, [commentsList]);\r\n\r\n\t\treturn (\r\n\t\t\t<div className={clsx(classes.commentsWrapper, className)}>\r\n\t\t\t\t<div className={classes.comments}>\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t{commentsList.rows.map((comment, i) => (\r\n\t\t\t\t\t\t\t<SingleComment\r\n\t\t\t\t\t\t\t\t{...comment}\r\n\t\t\t\t\t\t\t\t// Чтобы обеспечить правильную перерисовку комментария\r\n\t\t\t\t\t\t\t\t// при добавлении нового элемента в стек\r\n\t\t\t\t\t\t\t\tkey={`${i}-${+new Date()}`}\r\n\t\t\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\t\t\tfirstAnimated={animated}\r\n\t\t\t\t\t\t\t\tselfUserId={selfUserId}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t</div>\r\n\t\t\t\t{commentsList.totalCount && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={onShowMore}\r\n\t\t\t\t\t\t\tdisabled={showMoreDisabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t+ Показать больше\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={onShowLess}\r\n\t\t\t\t\t\t\tdisabled={showLessDisabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t- Скрыть\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n);\r\n","// import { IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tshadow: {},\r\n\tcardLayoutWrapper: {\r\n\t\tmargin: \"0 auto\",\r\n\t\tmaxWidth: 800,\r\n\t\tminHeight: \"100vh\",\r\n\t\tpadding: 10,\r\n\t\tpaddingLeft: 20,\r\n\t\tpaddingRight: 20,\r\n\t\tbackground: \"#eef2f4\",\r\n\t},\r\n\tcardLayout: {},\r\n\tclose: {},\r\n\tcloseIcon: {},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\");\r\n\r\n// TODO: доделать\r\nexport const CardLayout: React.FC = ({ children }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.cardLayoutWrapper}>\r\n\t\t\t{/* <div className={classes.close}>\r\n\t\t\t\t<IconButton size=\"small\" className={classes.closeIcon}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div> */}\r\n\t\t\t<div className={classes.shadow} />\r\n\t\t\t<div className={classes.cardLayout}>{children}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { RichTextEditor } from \"./components/RichTextEditor/RichTextEditor\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CommentProps } from \"./components/Comments/Comment\";\r\nimport { Comments } from \"./components/Comments/Comments\";\r\nimport fakeApiComments from \"./fake-api.json\";\r\nimport { CardLayout } from \"./components/CardLayout/CardLayout\";\r\n\r\nconst useStyles = makeStyles({\r\n\t\"@global\": {\r\n\t\t\"*::-webkit-scrollbar\": {\r\n\t\t\twidth: 10,\r\n\t\t\theight: 10,\r\n\t\t},\r\n\t\t\"*::-webkit-scrollbar-thumb\": {\r\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, .3)\",\r\n\t\t\tborderRadius: 5,\r\n\t\t},\r\n\t\t\"*::-webkit-scrollbar-track\": {\r\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, .1)\",\r\n\t\t},\r\n\t},\r\n\tbody: {\r\n\t\tminWidth: 1000,\r\n\t\tbackgroundColor: \"#eef2f4\",\r\n\t},\r\n\tleaveCommentBtn: {\r\n\t\tmarginBottom: 20,\r\n\t},\r\n\tbadge: {\r\n\t\tbackground: \"#FF9800\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\tmaxWidth: 250,\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: 5,\r\n\t\tpadding: 3,\r\n\t\tmargin: \"0 auto\",\r\n\t\tmarginBottom: 30,\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 17,\r\n\t\ttextAlign: \"center\",\r\n\t\tmarginBottom: 10,\r\n\t\tmarginTop: 15,\r\n\t\tfontWeight: 500,\r\n\t},\r\n\tdecisionBtn: {\r\n\t\tbackground: \"#78a971\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\tpaddingLeft: 50,\r\n\t\tpaddingRight: 50,\r\n\t\tmargin: \"0 auto\",\r\n\t\tdisplay: \"block\",\r\n\t\tmarginTop: 10,\r\n\t\tmarginBottom: 40,\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"#78a971\",\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst App: React.FC = () => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [comments, setComments] = useState<CommentProps[]>(fakeApiComments);\r\n\tconst [forceClean, setForceClean] = useState<number>();\r\n\tconst [currentComment, setCurrentComment] = useState<string>();\r\n\r\n\tconst leaveComment = useCallback(() => {\r\n\t\tif (currentComment) {\r\n\t\t\tsetComments([\r\n\t\t\t\t{\r\n\t\t\t\t\tdate: \"23.09.2020 20:31\",\r\n\t\t\t\t\ttext: currentComment,\r\n\t\t\t\t\tuser: {\r\n\t\t\t\t\t\tid: 2,\r\n\t\t\t\t\t\tname: \"Тест Тестов\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdecision: {\r\n\t\t\t\t\t\tlabel: \"Решение не принято\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t...comments,\r\n\t\t\t]);\r\n\t\t\tsetForceClean(+new Date());\r\n\t\t\tsetCurrentComment(undefined);\r\n\r\n\t\t\tconsole.log(currentComment);\r\n\t\t}\r\n\t}, [currentComment, comments]);\r\n\r\n\treturn (\r\n\t\t<CardLayout>\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\tОснование для принятия решения по активу 201212000932\r\n\t\t\t</Typography>\r\n\t\t\t<div className={classes.badge}>Актив в пуле</div>\r\n\t\t\t<RichTextEditor\r\n\t\t\t\tonChange={setCurrentComment}\r\n\t\t\t\tforceClean={forceClean}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tclassName={classes.decisionBtn}\r\n\t\t\t\tonClick={leaveComment}\r\n\t\t\t>\r\n\t\t\t\tПринять решение по активу\r\n\t\t\t</Button>\r\n\t\t\t<Comments data={comments} selfUserId={2} />\r\n\t\t</CardLayout>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { makeStyles, SvgIconTypeMap } from \"@material-ui/core\";\r\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\r\nimport clsx from \"clsx\";\r\nimport React, { useMemo } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\nimport { TaskHistoryBlockInfo } from \"./interface\";\r\n\r\nconst useStyles = makeStyles({\r\n\ttaskHistoryWrapper: {},\r\n\ttaskHistory: {\r\n\t\tpadding: 30,\r\n\t\tborder: \"1px solid #d2d2d2\",\r\n\t\tborderRight: 0,\r\n\t\tposition: \"relative\",\r\n\t\t\"&:not(:nth-child(1))\": {\r\n\t\t\tmarginTop: -1,\r\n\t\t},\r\n\t},\r\n\ttaskHistoryBlock: {},\r\n\tdate: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: -10,\r\n\t\twidth: 100,\r\n\t\ttextAlign: \"center\",\r\n\t\tbackground: \"#cacaca\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\tpadding: 3,\r\n\t\tborderRadius: 7,\r\n\t\tleft: \"calc(50% - 50px)\",\r\n\t},\r\n\ticon: {},\r\n\tsuccess: {},\r\n\twarnin: {},\r\n\tinfo: {},\r\n\terror: {},\r\n\tdecision: {},\r\n});\r\n\r\nconst icons: {\r\n\t[key: string]: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\r\n} = {\r\n\tinfo: getIcon(\"Info\"),\r\n\twarning: getIcon(\"Warning\"),\r\n\terror: getIcon(\"Error\"),\r\n\tsuccess: getIcon(\"CheckCircle\"),\r\n};\r\n\r\ninterface TaskHistoryProps {\r\n\t/**\r\n\t * Данные\r\n\t * TODO: доделать запрос с сервера\r\n\t */\r\n\tdata: {\r\n\t\t/**\r\n\t\t * Список событий за день\r\n\t\t */\r\n\t\titems: TaskHistoryBlockInfo[];\r\n\t\t/**\r\n\t\t * Дата\r\n\t\t */\r\n\t\tdate: string;\r\n\t}[];\r\n}\r\n\r\n/**\r\n * Граф с историей изменений в задаче\r\n *\r\n * @param {TaskHistoryProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const TaskHistory: React.FC<TaskHistoryProps> = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data.map(({ date, items }, i) => (\r\n\t\t\t\t<div className={classes.taskHistory} key={i}>\r\n\t\t\t\t\t<div className={classes.date}>{date}</div>\r\n\t\t\t\t\t{items.map(({ text, decision, type }, j) => {\r\n\t\t\t\t\t\tconst IconComponent = icons[type];\r\n\r\n\t\t\t\t\t\tconst decisionBy =\r\n\t\t\t\t\t\t\tdecision &&\r\n\t\t\t\t\t\t\t`Решение ${\r\n\t\t\t\t\t\t\t\tdecision.by === \"controller\"\r\n\t\t\t\t\t\t\t\t\t? \"контролера\"\r\n\t\t\t\t\t\t\t\t\t: \"оператора\"\r\n\t\t\t\t\t\t\t}`;\r\n\r\n\t\t\t\t\t\tconst typeClass = classes[type as keyof typeof classes];\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className={classes.taskHistoryBlock} key={j}>\r\n\t\t\t\t\t\t\t\t{IconComponent && (\r\n\t\t\t\t\t\t\t\t\t<IconComponent\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\t\t\t\t\t\ttypeClass\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{decision && (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.decision}>\r\n\t\t\t\t\t\t\t\t\t\t\t{decisionBy}:{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={typeClass}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{decision.label} {decision.date}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { CardLayout } from \"./components/CardLayout/CardLayout\";\r\nimport { TaskHistory } from \"./components/TaskHistory/TaskHistory\";\r\nimport data from \"./fake-api-graph.json\";\r\n\r\nconst AppGraph: React.FC = () => {\r\n\treturn (\r\n\t\t<CardLayout>\r\n\t\t\t<TaskHistory data={data as any} />\r\n\t\t</CardLayout>\r\n\t);\r\n};\r\n\r\nexport default AppGraph;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport AppGraph from \"./AppGraph\";\r\n\r\nconst basePath = \"/as-assets/build\";\r\n\r\nexport const Routes: React.FC = () => (\r\n\t<Router>\r\n\t\t<Switch>\r\n\t\t\t<Route path={`${basePath}/graph`} component={AppGraph} exact={true} />\r\n\t\t\t<Route path={`${basePath}/`} component={App} exact={true} />\r\n\t\t</Switch>\r\n\t</Router>\r\n);\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { customTheme } from \"./customTheme\";\r\nimport { Routes } from \"./routes\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<CssBaseline />\r\n\t\t<ThemeProvider theme={customTheme}>\r\n\t\t\t<Routes />\r\n\t\t</ThemeProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}