{"version":3,"sources":["components/icons.ts","components/RichTextEditor/RichTextEditorTools.tsx","components/RichTextEditor/LinkPicker.tsx","components/RichTextEditor/RichTextEditor.tsx","components/Comments/Comment.tsx","components/Comments/Comments.tsx","App.tsx","customTheme.ts","index.tsx"],"names":["icons","List","FormatBold","FormatItalic","FormatUnderlined","Link","SentimentVerySatisfied","Close","getIcon","icon","useStyles","makeStyles","richEditorTools","borderBottom","btn","padding","borderRadius","borderRight","controls","type","style","RichTextEditorTools","editorState","toggleBlockType","toggleInlineStyle","toggleLinkPicker","classes","onToggleControl","useCallback","e","preventDefault","currentStyle","getCurrentInlineStyle","selection","getSelection","blockType","getCurrentContent","getBlockForKey","getStartKey","getType","className","map","control","i","IconComponent","color","has","IconButton","size","onMouseDown","disabled","linkPicker","top","left","zIndex","position","width","background","boxShadow","CloseIcon","LinkPicker","open","createLink","Fade","in","TextField","label","richEditorWrapper","border","marginBottom","richEditorArea","height","overflowY","transition","richEditorAreaFocus","styleMap","BOLD","fontWeight","RichTextEditor","forceClean","props","useState","EditorState","createEmpty","setEditorState","focus","setFocus","useEffect","ref","createRef","onChange","nextEditorState","content","rawObject","convertToRaw","markdownString","draftToMarkdown","styleItems","ITALIC","close","RichUtils","inlineStyle","onClickArea","current","onBlur","setLinkPicker","url","console","log","clsx","onClick","spellCheck","customStyleMap","comment","author","date","opacity","SingleComment","React","memo","text","CommentContainer","children","index","showLastComment","animationTimeout","visible","Zoom","timeout","comments","marginTop","maxHeight","paddingRight","overflowX","Comments","data","setShowLastComment","setAnimationTimeout","dataLengthRef","useRef","length","setTimeout","key","appWrapper","margin","maxWidth","backgroundColor","App","fakeApiComments","setComments","setForceClean","currentComment","setCurrentComment","leaveComment","Date","undefined","Button","variant","customTheme","createMuiTheme","palette","primary","main","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.a85c0aea.chunk.js","sourcesContent":["import List from \"@material-ui/icons/List\";\r\nimport FormatBold from \"@material-ui/icons/FormatBold\";\r\nimport FormatItalic from \"@material-ui/icons/FormatItalic\";\r\nimport Link from \"@material-ui/icons/Link\";\r\nimport FormatUnderlined from \"@material-ui/icons/FormatUnderlined\";\r\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\r\nimport { SvgIconTypeMap } from \"@material-ui/core\";\r\nimport SentimentVerySatisfied from \"@material-ui/icons/SentimentVerySatisfied\";\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nconst icons: {\r\n\t[key: string]: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\r\n} = {\r\n\tList,\r\n\tFormatBold,\r\n\tFormatItalic,\r\n\tFormatUnderlined,\r\n\tLink,\r\n\tSentimentVerySatisfied,\r\n\tClose,\r\n};\r\n\r\nexport const getIcon = (icon: string) => icons[icon];\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport React, { useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getIcon } from \"../icons\";\r\nimport { EditorState } from \"draft-js\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorTools: {\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t},\r\n\tbtn: {\r\n\t\tpadding: 4,\r\n\t\tborderRadius: 0,\r\n\t\tborderRight: \"1px solid #d2d2d2\",\r\n\t},\r\n});\r\n\r\ninterface ToolControl {\r\n\ttype: \"inline\" | \"block\" | \"link\";\r\n\ticon: string;\r\n\tstyle: string;\r\n\tdisabled?: boolean;\r\n}\r\n\r\nconst controls: ToolControl[] = [\r\n\t{\r\n\t\ttype: \"inline\",\r\n\t\ticon: \"FormatBold\",\r\n\t\tstyle: \"BOLD\",\r\n\t},\r\n\t{\r\n\t\ttype: \"inline\",\r\n\t\ticon: \"FormatItalic\",\r\n\t\tstyle: \"ITALIC\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"unordered-list-item\",\r\n\t\ticon: \"List\",\r\n\t},\r\n\t{\r\n\t\ttype: \"link\",\r\n\t\tstyle: \"\",\r\n\t\ticon: \"Link\",\r\n\t},\r\n];\r\n\r\ninterface RichTextEditorToolsProps {\r\n\teditorState: EditorState;\r\n\ttoggleBlockType: (blockType: string) => void;\r\n\ttoggleInlineStyle: (inlineStyle: string) => void;\r\n\ttoggleLinkPicker: () => void;\r\n}\r\n\r\nexport const RichTextEditorTools: React.FC<RichTextEditorToolsProps> = ({\r\n\teditorState,\r\n\ttoggleBlockType,\r\n\ttoggleInlineStyle,\r\n\ttoggleLinkPicker,\r\n}: RichTextEditorToolsProps): JSX.Element => {\r\n\tconst classes = useStyles();\r\n\tconst onToggleControl = useCallback(\r\n\t\t({ type, style }: ToolControl) => (\r\n\t\t\te: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n\t\t) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase \"block\":\r\n\t\t\t\t\ttoggleBlockType(style);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inline\":\r\n\t\t\t\t\ttoggleInlineStyle(style);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"link\":\r\n\t\t\t\t\ttoggleLinkPicker();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\t\t[toggleBlockType, toggleInlineStyle, toggleLinkPicker]\r\n\t);\r\n\r\n\tconst currentStyle = editorState.getCurrentInlineStyle();\r\n\tconst selection = editorState.getSelection();\r\n\tconst blockType = editorState\r\n\t\t.getCurrentContent()\r\n\t\t.getBlockForKey(selection.getStartKey())\r\n\t\t.getType();\r\n\r\n\treturn (\r\n\t\t<div className={classes.richEditorTools}>\r\n\t\t\t{controls.map((control, i) => {\r\n\t\t\t\tconst IconComponent = getIcon(control.icon);\r\n\t\t\t\tconst color =\r\n\t\t\t\t\t(control.type === \"inline\" &&\r\n\t\t\t\t\t\tcurrentStyle.has(control.style)) ||\r\n\t\t\t\t\t(control.type === \"block\" && control.style === blockType)\r\n\t\t\t\t\t\t? \"primary\"\r\n\t\t\t\t\t\t: \"default\";\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\tonMouseDown={onToggleControl(control)}\r\n\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\tdisabled={control.disabled}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{IconComponent && <IconComponent />}\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Fade, IconButton, makeStyles, TextField } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlinkPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 2,\r\n\t\tposition: \"absolute\",\r\n\t\twidth: 165,\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tbackground: \"#fafdff\",\r\n\t\tborderRight: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\");\r\n\r\ninterface LinkPickerProps {\r\n\topen?: boolean;\r\n\tcreateLink: (symbol: string) => void;\r\n}\r\n\r\nexport const LinkPicker: React.FC<LinkPickerProps> = ({ open, createLink }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<Fade in={open}>\r\n\t\t\t<div className={classes.linkPicker}>\r\n\t\t\t\t<IconButton size=\"small\">\r\n\t\t\t\t\t<TextField size=\"small\" label=\"http://\" />\r\n\t\t\t\t\t{CloseIcon && <CloseIcon />}\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { createRef, useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n\tconvertToRaw,\r\n\tEditor,\r\n\tEditorState,\r\n\tModifier,\r\n\tRichUtils,\r\n} from \"draft-js\";\r\nimport { RichTextEditorTools } from \"./RichTextEditorTools\";\r\nimport { draftToMarkdown } from \"markdown-draft-js\";\r\nimport clsx from \"clsx\";\r\nimport { LinkPicker } from \"./LinkPicker\";\r\n\r\nconst border = \"1px solid #d2d2d2\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorWrapper: {\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborder,\r\n\t\tmarginBottom: 20,\r\n\t\tposition: \"relative\",\r\n\t},\r\n\trichEditorArea: {\r\n\t\tpadding: 10,\r\n\t\theight: 200,\r\n\t\toverflowY: \"auto\",\r\n\t\ttransition: \"box-shadow .2s linear\",\r\n\t},\r\n\trichEditorAreaFocus: {\r\n\t\tboxShadow: \"inset 0px 0px 10px rgba(0, 0, 0, 0.09)\",\r\n\t},\r\n});\r\n\r\nconst styleMap = {\r\n\tBOLD: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n};\r\n\r\ninterface RichTextEditorProps {\r\n\tonChange: (value: string) => void;\r\n\tforceClean?: number;\r\n}\r\n\r\nexport const RichTextEditor: React.FC<RichTextEditorProps> = ({\r\n\tforceClean,\r\n\t...props\r\n}: RichTextEditorProps): JSX.Element => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n\tconst [focus, setFocus] = useState<boolean>();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (forceClean) {\r\n\t\t\tsetEditorState(EditorState.createEmpty());\r\n\t\t}\r\n\t}, [forceClean]);\r\n\r\n\tconst ref = createRef<any>();\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(nextEditorState: EditorState) => {\r\n\t\t\tsetEditorState(nextEditorState);\r\n\r\n\t\t\tconst content = nextEditorState.getCurrentContent();\r\n\t\t\tconst rawObject = convertToRaw(content);\r\n\t\t\tconst markdownString = draftToMarkdown(rawObject, {\r\n\t\t\t\tstyleItems: {\r\n\t\t\t\t\tITALIC: {\r\n\t\t\t\t\t\topen: () => \"*\",\r\n\t\t\t\t\t\tclose: () => \"*\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tprops.onChange(markdownString);\r\n\t\t},\r\n\t\t[props.onChange]\r\n\t);\r\n\r\n\tconst toggleBlockType = useCallback(\r\n\t\t(blockType: string) =>\r\n\t\t\tsetEditorState(RichUtils.toggleBlockType(editorState, blockType)),\r\n\t\t[editorState]\r\n\t);\r\n\r\n\tconst toggleInlineStyle = useCallback(\r\n\t\t(inlineStyle: string) =>\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleInlineStyle(editorState, inlineStyle)\r\n\t\t\t),\r\n\t\t[editorState]\r\n\t);\r\n\r\n\tconst onClickArea = useCallback(() => {\r\n\t\tif (ref && ref.current) {\r\n\t\t\tref.current.focus();\r\n\t\t\tsetFocus(true);\r\n\t\t}\r\n\t}, [ref]);\r\n\r\n\tconst onBlur = useCallback(() => setFocus(false), []);\r\n\r\n\tconst [linkPicker, setLinkPicker] = useState<boolean>();\r\n\tconst toggleLinkPicker = useCallback(() => setLinkPicker(!linkPicker), [\r\n\t\tlinkPicker,\r\n\t]);\r\n\r\n\tconst createLink = useCallback(\r\n\t\t(url: string) => {\r\n\t\t\tconsole.log(url);\r\n\t\t},\r\n\t\t[editorState]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={classes.richEditorWrapper}>\r\n\t\t\t<RichTextEditorTools\r\n\t\t\t\teditorState={editorState}\r\n\t\t\t\ttoggleBlockType={toggleBlockType}\r\n\t\t\t\ttoggleInlineStyle={toggleInlineStyle}\r\n\t\t\t\ttoggleLinkPicker={toggleLinkPicker}\r\n\t\t\t/>\r\n\t\t\t<LinkPicker createLink={createLink} open={linkPicker} />\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(classes.richEditorArea, {\r\n\t\t\t\t\t[classes.richEditorAreaFocus]: focus,\r\n\t\t\t\t})}\r\n\t\t\t\tonClick={onClickArea}\r\n\t\t\t>\r\n\t\t\t\t<Editor\r\n\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { Zoom } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcomment: {\r\n\t\tmarginBottom: 10,\r\n\t\tbackground: \"#e8e8e8\",\r\n\t\tpadding: 10,\r\n\t\tborderRadius: 5,\r\n\t},\r\n\tauthor: {\r\n\t\tfontWeight: 500,\r\n\t},\r\n\tdate: {\r\n\t\topacity: 0.8,\r\n\t\tmarginBottom: 10,\r\n\t},\r\n});\r\n\r\nexport interface CommentProps {\r\n\ttext: string;\r\n\tauthor: string;\r\n\tdate: string;\r\n\tindex?: number;\r\n\tshowLastComment?: boolean;\r\n\tanimationTimeout?: number;\r\n\tvisible?: boolean;\r\n}\r\n\r\nexport const SingleComment: React.FC<CommentProps> = React.memo(\r\n\t({ author, date, text, ...props }: CommentProps) => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\treturn (\r\n\t\t\t<CommentContainer {...props}>\r\n\t\t\t\t<div className={classes.comment}>\r\n\t\t\t\t\t<div className={classes.author}>{author}</div>\r\n\t\t\t\t\t<div className={classes.date}>{date}</div>\r\n\t\t\t\t\t<ReactMarkdown>{text}</ReactMarkdown>\r\n\t\t\t\t</div>\r\n\t\t\t</CommentContainer>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nconst CommentContainer: React.FC<\r\n\tPick<\r\n\t\tCommentProps,\r\n\t\t\"index\" | \"showLastComment\" | \"animationTimeout\" | \"visible\"\r\n\t>\r\n> = ({ children, index, showLastComment, animationTimeout, visible }) =>\r\n\tindex === 0 && !visible ? (\r\n\t\t<Zoom in={showLastComment} timeout={animationTimeout}>\r\n\t\t\t<div>{children}</div>\r\n\t\t</Zoom>\r\n\t) : (\r\n\t\t<div>{children}</div>\r\n\t);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { CommentProps, SingleComment } from \"./Comment\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcomments: {\r\n\t\tmarginBottom: 20,\r\n\t\tmarginTop: 20,\r\n\t\tmaxHeight: 500,\r\n\t\tpaddingRight: 5,\r\n\t\toverflowY: \"auto\",\r\n\t\toverflowX: \"hidden\",\r\n\t},\r\n});\r\n\r\ninterface CommentsProps {\r\n\tdata: CommentProps[];\r\n}\r\n\r\nexport const Comments: React.FC<CommentsProps> = React.memo(({ data }) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [showLastComment, setShowLastComment] = useState<boolean>(false);\r\n\tconst [animationTimeout, setAnimationTimeout] = useState<number>(0);\r\n\r\n\tconst dataLengthRef = useRef(data.length);\r\n\tuseEffect(() => {\r\n\t\tif (dataLengthRef.current !== data.length) {\r\n\t\t\tdataLengthRef.current = data.length;\r\n\t\t\tsetShowLastComment(false);\r\n\t\t\tsetAnimationTimeout(0);\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetAnimationTimeout(300);\r\n\t\t\t\tsetShowLastComment(true);\r\n\t\t\t}, 10);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.comments}>\r\n\t\t\t{data.map((comment, i) => (\r\n\t\t\t\t<SingleComment\r\n\t\t\t\t\t{...comment}\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tindex={i}\r\n\t\t\t\t\tshowLastComment={showLastComment}\r\n\t\t\t\t\tanimationTimeout={animationTimeout}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n});\r\n","import { Button } from \"@material-ui/core\";\nimport React, { useCallback, useState } from \"react\";\nimport { RichTextEditor } from \"./components/RichTextEditor/RichTextEditor\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CommentProps } from \"./components/Comments/Comment\";\nimport { Comments } from \"./components/Comments/Comments\";\nimport fakeApiComments from \"./fake-api.json\";\n\nconst useStyles = makeStyles({\n\tappWrapper: {\n\t\tmargin: \"0 auto\",\n\t\tmaxWidth: 700,\n\t\theight: \"100vh\",\n\t\tpadding: 10,\n\t\tbackground: \"#f5f5f5\",\n\t},\n\n\t\"@global\": {\n\t\t\"*::-webkit-scrollbar\": {\n\t\t\twidth: 10,\n\t\t},\n\t\t\"*::-webkit-scrollbar-thumb\": {\n\t\t\tbackgroundColor: \"rgba(0,0,0,.1)\",\n\t\t\tborderRadius: 5,\n\t\t},\n\t},\n});\n\nfunction App() {\n\tconst classes = useStyles();\n\n\tconst [comments, setComments] = useState<CommentProps[]>(fakeApiComments);\n\tconst [forceClean, setForceClean] = useState<number>();\n\tconst [currentComment, setCurrentComment] = useState<string>();\n\n\tconst leaveComment = useCallback(() => {\n\t\tif (currentComment) {\n\t\t\tsetComments([\n\t\t\t\t{\n\t\t\t\t\tauthor: \"Тест Тестов\",\n\t\t\t\t\tdate: \"23.09.2020 20:31\",\n\t\t\t\t\ttext: currentComment,\n\t\t\t\t},\n\t\t\t\t...comments,\n\t\t\t]);\n\t\t\tsetForceClean(+new Date());\n\t\t\tsetCurrentComment(undefined);\n\t\t}\n\t}, [currentComment, comments]);\n\n\treturn (\n\t\t<div className={classes.appWrapper}>\n\t\t\t<RichTextEditor\n\t\t\t\tonChange={setCurrentComment}\n\t\t\t\tforceClean={forceClean}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tonClick={leaveComment}\n\t\t\t>\n\t\t\t\tОставить комментарий\n\t\t\t</Button>\n\t\t\t<Comments data={comments} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const customTheme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: \"#0088bb\",\r\n\t\t},\r\n\t},\r\n});\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { customTheme } from \"./customTheme\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<CssBaseline />\n\t\t<ThemeProvider theme={customTheme}>\n\t\t\t<App />\n\t\t</ThemeProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}