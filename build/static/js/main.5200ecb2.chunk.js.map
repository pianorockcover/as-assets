{"version":3,"sources":["components/icons.ts","components/RichTextEditor/toolControls.ts","components/RichTextEditor/LinkPicker.tsx","components/RichTextEditor/RichTextEditorTools.tsx","components/RichTextEditor/LinkPreview.tsx","components/RichTextEditor/decorators.ts","components/RichTextEditor/draftMarkdown.ts","components/RichTextEditor/RichTextEditor.tsx","components/Comments/getCommentAvatar.ts","components/Comments/Comment.tsx","components/Comments/generateComment.ts","components/Comments/Comments.tsx","App.tsx","customTheme.ts","index.tsx"],"names":["icons","List","FormatBold","FormatItalic","FormatUnderlined","Link","SentimentVerySatisfied","Close","Check","FormatListNumberedIcon","ExpandMore","getIcon","icon","richTextControls","type","style","tooltip","text","useStyles","makeStyles","linkPicker","top","left","zIndex","position","background","borderBottom","boxShadow","padding","display","alignItems","justifyContent","paddingLeft","width","input","border","marginRight","outline","transition","paddingTop","paddingBottom","inputError","CloseIcon","CheckIcon","LinkPicker","closeLinkPicker","editorState","setEditorState","classes","presetUrl","contentState","getCurrentContent","startKey","getSelection","getStartKey","startOffset","getStartOffset","linkKey","getBlockForKey","getEntityAt","getEntity","getData","url","useState","setUrl","error","setError","onChange","useCallback","e","target","value","saveUrl","preventDefault","contentStateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","EditorState","set","currentContent","RichUtils","toggleLink","Fade","in","className","placeholder","clsx","IconButton","size","onMouseDown","onClick","richEditorTools","btn","borderRadius","borderRight","textIcon","fontWeight","fontSize","height","paddingRight","RichTextEditorTools","React","memo","setLinkPicker","openLinkPicker","selection","isEmpty","isCollapsed","onToggleControl","toggleBlockType","toggleInlineStyle","currentStyle","getCurrentInlineStyle","blockType","getType","map","control","i","IconComponent","color","has","Tooltip","placement","title","arrow","disabled","link","textDecoration","richTextEditorDecorators","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","component","props","href","children","italicDecorator","richEditorWrapper","marginBottom","minWidth","richEditorWrapperFocus","borderColor","richEditorArea","overflowY","richEditorAreaFocus","toolsUnfocus","opacity","amountBar","bottom","textAlign","borderTop","styleMap","BOLD","LINK","RichTextEditor","defaultValue","forceClean","createWithContent","markdown","convertFromRaw","markdownToDraft","convertMarkdownToDraft","symbolsAmount","setSymbolsAmount","nextEditorState","ref","createRef","focus","setFocus","onBlur","onClickArea","current","useEffect","createEmpty","markdownString","content","rawObject","convertToRaw","draftToMarkdown","styleItems","ITALIC","open","close","convertDraftToMarkdown","length","undefined","spellCheck","customStyleMap","colors","symbols","comment","commentArea","author","date","overflow","marginTop","textHidden","readMoreButton","marginLeft","readMoreButtonClose","transform","avatar","ArrowIcon","SingleComment","index","firstAnimated","hidden","setHidden","needReadMoreButton","setNeedReadMoreButton","initialHeight","getBoundingClientRect","toggleHidden","useMemo","animationTimeout","symbol","slice","toLocaleUpperCase","find","includes","getCommentAvatarData","timeout","backgroundColor","maxHeight","capitalize","str","toUpperCase","generateComment","lorem","LoremIpsum","sentencesPerParagraph","max","min","wordsPerSentence","generateWords","generateSentences","commentsWrapper","comments","overflowX","Comments","data","rows","totalCount","commentsList","setCommentsList","animated","setAnimated","showMoreDisabled","onShowMore","toAdd","Array","fill","showLessDisabled","onShowLess","Fragment","key","Date","Button","appWrapper","margin","maxWidth","minHeight","leaveCommentBtn","badge","decisionBtn","App","fakeApiComments","setComments","setForceClean","currentComment","setCurrentComment","leaveComment","console","log","Typography","variant","customTheme","createMuiTheme","palette","primary","main","overrides","MuiTooltip","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","theme","document","getElementById"],"mappings":"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","file":"static/js/main.5200ecb2.chunk.js","sourcesContent":["import List from \"@material-ui/icons/List\";\r\nimport FormatBold from \"@material-ui/icons/FormatBold\";\r\nimport FormatItalic from \"@material-ui/icons/FormatItalic\";\r\nimport Link from \"@material-ui/icons/Link\";\r\nimport FormatUnderlined from \"@material-ui/icons/FormatUnderlined\";\r\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\r\nimport { SvgIconTypeMap } from \"@material-ui/core\";\r\nimport SentimentVerySatisfied from \"@material-ui/icons/SentimentVerySatisfied\";\r\nimport Close from \"@material-ui/icons/Close\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst icons: {\r\n\t[key: string]: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\r\n} = {\r\n\tList,\r\n\tFormatBold,\r\n\tFormatItalic,\r\n\tFormatUnderlined,\r\n\tLink,\r\n\tSentimentVerySatisfied,\r\n\tClose,\r\n\tCheck,\r\n\tFormatListNumberedIcon,\r\n\tExpandMore,\r\n};\r\n\r\nexport const getIcon = (icon: string) => icons[icon];\r\n","/**\r\n * Описание кнопки в панели инструментов расширенного редактора текстов\r\n */\r\nexport interface ToolControl {\r\n\t/**\r\n\t * Тип действия кнопки\r\n\t * - inline - включить стиль (например: курсив, жирный)\r\n\t * - block - добавить стилизованный блок (напримр: заголовок, список)\r\n\t * - link - добавить ссылку\r\n\t */\r\n\ttype: \"inline\" | \"block\" | \"link\";\r\n\t/**\r\n\t * Иконка для кнопки\r\n\t */\r\n\ticon?: string;\r\n\t/**\r\n\t * Текст для кнопки\r\n\t */\r\n\ttext?: string;\r\n\t/**\r\n\t * Тип стиля/блока, активируемого кнопкой\r\n\t */\r\n\tstyle?: string;\r\n\t/**\r\n\t * Кнопка неактивна\r\n\t */\r\n\tdisabled?: boolean;\r\n\t/**\r\n\t * Подсказка\r\n\t */\r\n\ttooltip?: string;\r\n}\r\n\r\n/**\r\n * Набор кнопок для панели инструментов расширенного редактора текстов\r\n */\r\nexport const richTextControls: ToolControl[] = [\r\n\t{\r\n\t\ttype: \"inline\",\r\n\t\ticon: \"FormatBold\",\r\n\t\tstyle: \"BOLD\",\r\n\t\ttooltip: \"Жирный шрифт\",\r\n\t},\r\n\t{\r\n\t\ttype: \"inline\",\r\n\t\ticon: \"FormatItalic\",\r\n\t\tstyle: \"ITALIC\",\r\n\t\ttooltip: \"Курсив\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"unordered-list-item\",\r\n\t\ticon: \"List\",\r\n\t\ttooltip: \"Список\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"ordered-list-item\",\r\n\t\ticon: \"FormatListNumberedIcon\",\r\n\t\ttooltip: \"Нумерованный список\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"header-two\",\r\n\t\ttext: \"Заголовок\",\r\n\t},\r\n\t{\r\n\t\ttype: \"block\",\r\n\t\tstyle: \"header-three\",\r\n\t\ttext: \"Подзаголовок\",\r\n\t},\r\n\t{\r\n\t\ttype: \"link\",\r\n\t\tstyle: \"\",\r\n\t\ticon: \"Link\",\r\n\t\ttooltip: \"Ссылка\",\r\n\t},\r\n];\r\n","import { Fade, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { EditorState, RichUtils } from \"draft-js\";\r\nimport React, { ChangeEvent, useCallback, useState } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlinkPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 2,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#fafdff\",\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t\tpadding: 5,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpaddingLeft: 10,\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tinput: {\r\n\t\tborder: 0,\r\n\t\tborderBottom: \"2px solid #0088bb\",\r\n\t\tmarginRight: 10,\r\n\t\tbackground: \"transparent\",\r\n\t\toutline: \"none !important\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 3,\r\n\t},\r\n\tinputError: {\r\n\t\tborderBottom: \"2px solid #ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\nconst CheckIcon = getIcon(\"Check\")!;\r\n\r\ninterface LinkPickerProps {\r\n\t/**\r\n\t * Текущий стейт редактора текстов\r\n\t */\r\n\teditorState: EditorState;\r\n\t/**\r\n\t * Ф-я изменения стейта\r\n\t */\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\t/**\r\n\t * Ф-я, закрывающая интерфейс редактирования ссылки\r\n\t */\r\n\tcloseLinkPicker: () => void;\r\n}\r\n\r\n/**\r\n * Форма добавления ссылки в расширенном редакторе текстов\r\n *\r\n * @param {LinkPickerProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPicker: React.FC<LinkPickerProps> = ({\r\n\tcloseLinkPicker,\r\n\teditorState,\r\n\tsetEditorState,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tlet presetUrl = \"\";\r\n\tconst contentState = editorState.getCurrentContent();\r\n\tconst startKey = editorState.getSelection().getStartKey();\r\n\tconst startOffset = editorState.getSelection().getStartOffset();\r\n\tconst blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\r\n\tconst linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\r\n\r\n\tif (linkKey) {\r\n\t\tconst linkInstance = contentState.getEntity(linkKey);\r\n\t\tpresetUrl = linkInstance.getData().url;\r\n\t}\r\n\r\n\tconst [url, setUrl] = useState<string>(presetUrl);\r\n\tconst [error, setError] = useState<boolean>();\r\n\r\n\tconst onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.value) {\r\n\t\t\tsetError(false);\r\n\t\t}\r\n\t\tsetUrl(e.target.value);\r\n\t}, []);\r\n\r\n\tconst saveUrl = useCallback(\r\n\t\t(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tif (!url) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\tconst contentStateWithEntity = contentState.createEntity(\r\n\t\t\t\t\"LINK\",\r\n\t\t\t\t\"MUTABLE\",\r\n\t\t\t\t{ url }\r\n\t\t\t);\r\n\t\t\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n\t\t\tconst newEditorState = EditorState.set(editorState, {\r\n\t\t\t\tcurrentContent: contentStateWithEntity,\r\n\t\t\t});\r\n\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleLink(\r\n\t\t\t\t\tnewEditorState,\r\n\t\t\t\t\tnewEditorState.getSelection(),\r\n\t\t\t\t\tentityKey\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tcloseLinkPicker();\r\n\t\t},\r\n\t\t[editorState, url]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fade in={true}>\r\n\t\t\t<div className={classes.linkPicker}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Введите URL:\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={url}\r\n\t\t\t\t\tclassName={clsx(classes.input, {\r\n\t\t\t\t\t\t[classes.inputError]: error,\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t\t<IconButton size=\"small\" onMouseDown={saveUrl}>\r\n\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" onClick={closeLinkPicker}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n","import { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { getIcon } from \"../icons\";\r\nimport { EditorState, RichUtils } from \"draft-js\";\r\nimport clsx from \"clsx\";\r\nimport { richTextControls, ToolControl } from \"./toolControls\";\r\nimport { LinkPicker } from \"./LinkPicker\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorTools: {\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t},\r\n\tbtn: {\r\n\t\tpadding: 4,\r\n\t\tborderRadius: 0,\r\n\t\tborderRight: \"1px solid #d2d2d2\",\r\n\t},\r\n\ttextIcon: {\r\n\t\tfontWeight: 400,\r\n\t\tfontSize: 15,\r\n\t\theight: 24,\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tdisplay: \"flex\",\r\n\t\tpaddingLeft: 3,\r\n\t\tpaddingRight: 3,\r\n\t},\r\n});\r\n\r\ninterface RichTextEditorToolsProps {\r\n\t/**\r\n\t * Текущий стейт редактора\r\n\t */\r\n\teditorState: EditorState;\r\n\t/**\r\n\t * Ф-я обновления текущего стейта\r\n\t */\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\t/**\r\n\t * CSS-класс\r\n\t */\r\n\tclassName?: string;\r\n}\r\n\r\n/**\r\n * Панель инструментов расширенного редактора текстов\r\n *\r\n * @param {RichTextEditorToolsProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const RichTextEditorTools: React.FC<RichTextEditorToolsProps> = React.memo(\r\n\t({\r\n\t\teditorState,\r\n\t\tsetEditorState,\r\n\t\tclassName,\r\n\t}: RichTextEditorToolsProps): JSX.Element => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst [linkPicker, setLinkPicker] = useState<boolean>();\r\n\r\n\t\tconst openLinkPicker = useCallback(() => {\r\n\t\t\tconst selection = editorState.getSelection();\r\n\t\t\tif (!selection.isEmpty() && !selection.isCollapsed()) {\r\n\t\t\t\tsetLinkPicker(true);\r\n\t\t\t}\r\n\t\t}, [editorState]);\r\n\r\n\t\tconst closeLinkPicker = useCallback(() => setLinkPicker(false), []);\r\n\r\n\t\tconst onToggleControl = useCallback(\r\n\t\t\t({ type, style }: ToolControl) => (\r\n\t\t\t\te: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n\t\t\t) => {\r\n\t\t\t\te.preventDefault();\r\n\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase \"block\":\r\n\t\t\t\t\t\tif (style) {\r\n\t\t\t\t\t\t\tsetEditorState(\r\n\t\t\t\t\t\t\t\tRichUtils.toggleBlockType(editorState, style)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"inline\":\r\n\t\t\t\t\t\tif (style) {\r\n\t\t\t\t\t\t\tsetEditorState(\r\n\t\t\t\t\t\t\t\tRichUtils.toggleInlineStyle(editorState, style)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"link\":\r\n\t\t\t\t\t\topenLinkPicker();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t[editorState, openLinkPicker, setEditorState]\r\n\t\t);\r\n\r\n\t\tconst currentStyle = editorState.getCurrentInlineStyle();\r\n\t\tconst selection = editorState.getSelection();\r\n\t\tconst blockType = editorState\r\n\t\t\t.getCurrentContent()\r\n\t\t\t.getBlockForKey(selection.getStartKey())\r\n\t\t\t.getType();\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className={clsx(classes.richEditorTools, className)}>\r\n\t\t\t\t\t{richTextControls.map((control, i) => {\r\n\t\t\t\t\t\tconst IconComponent =\r\n\t\t\t\t\t\t\tcontrol.icon && getIcon(control.icon);\r\n\t\t\t\t\t\tconst color =\r\n\t\t\t\t\t\t\t(control.style &&\r\n\t\t\t\t\t\t\t\tcontrol.type === \"inline\" &&\r\n\t\t\t\t\t\t\t\tcurrentStyle.has(control.style)) ||\r\n\t\t\t\t\t\t\t(control.type === \"block\" &&\r\n\t\t\t\t\t\t\t\tcontrol.style === blockType)\r\n\t\t\t\t\t\t\t\t? \"primary\"\r\n\t\t\t\t\t\t\t\t: \"default\";\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\tplacement=\"bottom\"\r\n\t\t\t\t\t\t\t\ttitle={control.tooltip || \"\"}\r\n\t\t\t\t\t\t\t\tarrow={true}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tclassName={classes.btn}\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tonMouseDown={onToggleControl(control)}\r\n\t\t\t\t\t\t\t\t\tcolor={color}\r\n\t\t\t\t\t\t\t\t\tdisabled={control.disabled}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{IconComponent && <IconComponent />}\r\n\t\t\t\t\t\t\t\t\t{control.text && (\r\n\t\t\t\t\t\t\t\t\t\t<span className={classes.textIcon}>\r\n\t\t\t\t\t\t\t\t\t\t\t{control.text}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t{linkPicker && (\r\n\t\t\t\t\t<LinkPicker\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tcloseLinkPicker={closeLinkPicker}\r\n\t\t\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { ContentBlock, ContentState, DraftDecorator } from \"draft-js\";\r\nimport React, { ReactNode } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlink: {\r\n\t\tcolor: \"#0088bb\",\r\n\t\ttextDecoration: \"underline\",\r\n\t},\r\n});\r\n\r\ninterface LinkPreviewProps {\r\n\t/**\r\n\t * Название ссылки\r\n\t */\r\n\tchildren?: ReactNode;\r\n\t/**\r\n\t * Адрес ссылки\r\n\t */\r\n\turl?: string;\r\n\t/**\r\n\t * Стейт расширенного редактора текстов\r\n\t */\r\n\tcontentState: ContentState;\r\n\t/**\r\n\t * Id ссылки\r\n\t */\r\n\tentityKey: string;\r\n}\r\n\r\n/**\r\n * Декоратор для отображения ссылок в расширенном редакторе текстов\r\n *\r\n * @param {LinkPreviewProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPreview: React.FC<LinkPreviewProps> = (props) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { url } = props.contentState.getEntity(props.entityKey).getData();\r\n\r\n\treturn (\r\n\t\t<a className={classes.link} href={url} title={`Ссылка: ${url}`}>\r\n\t\t\t{props.children}\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\n/**\r\n * Ф-я для определения ссылки в стейте Draft.js\r\n *\r\n * @param {ContentBlock} contentBlock - блок с контентом\r\n * @param {Function} callback - callback\r\n * @param {ContentState} contentState - текущий стейт редактора\r\n * @returns {void}\r\n */\r\nexport const findLinkEntities = (\r\n\tcontentBlock: ContentBlock,\r\n\tcallback: (start: number, end: number) => void,\r\n\tcontentState: ContentState\r\n): void =>\r\n\tcontentBlock.findEntityRanges((character) => {\r\n\t\tconst entityKey = character.getEntity();\r\n\t\treturn (\r\n\t\t\tentityKey !== null &&\r\n\t\t\tcontentState.getEntity(entityKey).getType() === \"LINK\"\r\n\t\t);\r\n\t}, callback);\r\n","import { CompositeDecorator } from \"draft-js\";\r\nimport { findLinkEntities, LinkPreview } from \"./LinkPreview\";\r\n\r\n/**\r\n * Декораторы расширенного редактора текстов\r\n */\r\nexport const richTextEditorDecorators = new CompositeDecorator([\r\n\t{\r\n\t\tstrategy: findLinkEntities,\r\n\t\tcomponent: LinkPreview,\r\n\t},\r\n]);\r\n","import {\r\n\tContentState,\r\n\tconvertFromRaw,\r\n\tconvertToRaw,\r\n\tEditorState,\r\n} from \"draft-js\";\r\nimport { draftToMarkdown, markdownToDraft } from \"markdown-draft-js\";\r\n\r\n/**\r\n * Декоратор для _курсива_ в markdown\r\n */\r\nconst italicDecorator = () => \"*\";\r\n\r\n/**\r\n * Конвертирует стейт Draft.js в Markdown\r\n *\r\n * @param {EditorState} editorState - стейт редактора текстов\r\n * @returns {string}\r\n */\r\nexport const convertDraftToMarkdown = (editorState: EditorState): string => {\r\n\tconst content = editorState.getCurrentContent();\r\n\tconst rawObject = convertToRaw(content);\r\n\r\n\tconst markdown = draftToMarkdown(rawObject, {\r\n\t\tstyleItems: {\r\n\t\t\tITALIC: {\r\n\t\t\t\topen: italicDecorator,\r\n\t\t\t\tclose: italicDecorator,\r\n\t\t\t},\r\n\t\t},\r\n\t});\r\n\r\n\treturn markdown;\r\n};\r\n\r\n/**\r\n * Конвертирует строку в формате Markdown в объект-стейт редактора текстов Draft.js\r\n *\r\n * @param {string | undefined} markdown - строка в формате markdown\r\n * @returns {ContentState}\r\n */\r\nexport const convertMarkdownToDraft = (markdown: string = \"\"): ContentState =>\r\n\tconvertFromRaw(markdownToDraft(markdown));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, {\r\n\tcreateRef,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n} from \"react\";\r\nimport { Editor, EditorState } from \"draft-js\";\r\nimport { RichTextEditorTools } from \"./RichTextEditorTools\";\r\nimport clsx from \"clsx\";\r\nimport { richTextEditorDecorators } from \"./decorators\";\r\nimport {\r\n\tconvertMarkdownToDraft,\r\n\tconvertDraftToMarkdown,\r\n} from \"./draftMarkdown\";\r\n\r\nconst border = \"1px solid #d2d2d2\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorWrapper: {\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborder,\r\n\t\tmarginBottom: 20,\r\n\t\tposition: \"relative\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingBottom: 22,\r\n\t\tminWidth: 450,\r\n\t},\r\n\trichEditorWrapperFocus: {\r\n\t\tborderColor: \"#4dd0e1\",\r\n\t},\r\n\trichEditorArea: {\r\n\t\tpadding: 10,\r\n\t\theight: 200,\r\n\t\toverflowY: \"auto\",\r\n\t\ttransition: \"box-shadow .2s ease-in-out\",\r\n\t},\r\n\trichEditorAreaFocus: {\r\n\t\tboxShadow: \"inset 0px 0px 10px #caefff\",\r\n\t},\r\n\ttoolsUnfocus: {\r\n\t\topacity: 0.95,\r\n\t\ttransition: \"opacity .2s ease-in-out\",\r\n\t},\r\n\tamountBar: {\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\twidth: \"100%\",\r\n\t\ttextAlign: \"right\",\r\n\t\tfontSize: 11,\r\n\t\tbackground: \"#eeeeee\",\r\n\t\tborderTop: \"1px solid #d2d2d2\",\r\n\t\tpadding: 3,\r\n\t\tzIndex: 1,\r\n\t\tcolor: \"#4c4b4b\",\r\n\t},\r\n});\r\n\r\nconst styleMap = {\r\n\tBOLD: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n\tLINK: {\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n};\r\n\r\ninterface RichTextEditorProps {\r\n\t/**\r\n\t * Обработчик изменения текста\r\n\t */\r\n\tonChange: (value: string) => void;\r\n\t/**\r\n\t * Дефолтное значение\r\n\t */\r\n\tdefaultValue?: string;\r\n\t/**\r\n\t * Редактор очищается при изменении этого свойства\r\n\t */\r\n\tforceClean?: number;\r\n\t/**\r\n\t * Подсказка\r\n\t */\r\n\tplaceholder?: string;\r\n\t/**\r\n\t * CSS-класс\r\n\t */\r\n\tclassName?: string;\r\n}\r\n\r\n/**\r\n * Расширенный редактор текста. Экспортирует строку в формате Markdown.\r\n * - Фреймворк для создания редактора: [Draft.js](https://draftjs.org/)\r\n * - Конвертер стейта Draft.js в Markdown: [markdown-draft-js](https://www.npmjs.com/package/markdown-draft-js)\r\n *\r\n * @param {RichTextEditorProps} props - св-ва компонента\r\n * @returns {JSX.Element}\r\n */\r\nexport const RichTextEditor: React.FC<RichTextEditorProps> = React.memo(\r\n\t({\r\n\t\tdefaultValue,\r\n\t\tforceClean,\r\n\t\tplaceholder,\r\n\t\tclassName,\r\n\t\t...props\r\n\t}: RichTextEditorProps): JSX.Element => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst [editorState, setEditorState] = useState(\r\n\t\t\tEditorState.createWithContent(\r\n\t\t\t\tconvertMarkdownToDraft(defaultValue),\r\n\t\t\t\trichTextEditorDecorators\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst [symbolsAmount, setSymbolsAmount] = useState<number>(0);\r\n\r\n\t\tconst onChange = useCallback(\r\n\t\t\t(nextEditorState: EditorState) => setEditorState(nextEditorState),\r\n\t\t\t[]\r\n\t\t);\r\n\r\n\t\tconst ref = createRef<any>();\r\n\t\tconst [focus, setFocus] = useState<boolean>();\r\n\r\n\t\tconst onBlur = useCallback(() => setFocus(false), [editorState]);\r\n\r\n\t\tconst onClickArea = useCallback(() => {\r\n\t\t\tif (ref && ref.current) {\r\n\t\t\t\tref.current.focus();\r\n\t\t\t\tsetFocus(true);\r\n\t\t\t}\r\n\t\t}, [ref]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (forceClean) {\r\n\t\t\t\tsetEditorState(\r\n\t\t\t\t\tEditorState.createEmpty(richTextEditorDecorators)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, [forceClean]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst markdownString = convertDraftToMarkdown(editorState);\r\n\t\t\tprops.onChange(markdownString);\r\n\t\t\tsetSymbolsAmount(markdownString.length);\r\n\t\t}, [editorState]);\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(\r\n\t\t\t\t\tclasses.richEditorWrapper,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t[classes.richEditorWrapperFocus]: focus,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName\r\n\t\t\t\t)}\r\n\t\t\t>\r\n\t\t\t\t<RichTextEditorTools\r\n\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t\t\tclassName={!focus ? classes.toolsUnfocus : undefined}\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={clsx(classes.richEditorArea, {\r\n\t\t\t\t\t\t[classes.richEditorAreaFocus]: focus,\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tonClick={onClickArea}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Editor\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span className={classes.amountBar}>\r\n\t\t\t\t\tВсего симолов: {symbolsAmount}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n);\r\n","// TODO: переделать на коды символов!\r\nconst colors = [\r\n\t{\r\n\t\tsymbols: [\"A\", \"B\", \"А\", \"Б\", \"В\"],\r\n\t\tcolor: \"#55efc4\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"E\", \"F\", \"Г\", \"Д\", \"Е\", \"Ё\"],\r\n\t\tcolor: \"#81ecec\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"I\", \"J\", \"K\", \"Ж\", \"З\", \"И\", \"Й\"],\r\n\t\tcolor: \"#74b9ff\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"L\", \"M\", \"N\", \"O\", \"К\", \"Л\", \"М\", \"Н\"],\r\n\t\tcolor: \"#a29bfe\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"P\", \"Q\", \"R\", \"О\", \"П\", \"Р\", \"С\"],\r\n\t\tcolor: \"#ffeaa7\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"S\", \"T\", \"U\", \"Т\", \"У\", \"Ф\", \"Х\"],\r\n\t\tcolor: \"#f8c291\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"V\", \"W\", \"Ц\", \"Ч\", \"Ш\", \"Щ\"],\r\n\t\tcolor: \"#fab1a0\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"X\", \"Y\", \"Z\", \"Ъ\", \"Ы\", \"Ь\"],\r\n\t\tcolor: \"#ff7675\",\r\n\t},\r\n\t{\r\n\t\tsymbols: [\"C\", \"D\", \"Э\", \"Ю\", \"Я\"],\r\n\t\tcolor: \"#fd79a8\",\r\n\t},\r\n\r\n\t{\r\n\t\tsymbols: [\"G\", \"H\"],\r\n\t\tcolor: \"#636e72\",\r\n\t},\r\n];\r\n\r\nconst notLatinSymbolColor = \"#636e72\";\r\n\r\ninterface AvatarData {\r\n\tsymbol: string;\r\n\tcolor: string;\r\n}\r\n\r\n/**\r\n * Выделяет первую букву имени автора комментария и выбирает случайный цвет для генерации аватара.\r\n *\r\n * @param {string} author - имя автора комментария\r\n */\r\nexport const getCommentAvatarData = (author: string): AvatarData => {\r\n\tconst symbol = author.slice(0, 1).toLocaleUpperCase();\r\n\tconst color = colors.find(({ symbols }) => symbols.includes(symbol));\r\n\r\n\treturn {\r\n\t\tcolor: color ? color.color : notLatinSymbolColor,\r\n\t\tsymbol,\r\n\t};\r\n};\r\n","import { Fade, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport React, {\r\n\tcreateRef,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { getIcon } from \"../icons\";\r\nimport { getCommentAvatarData } from \"./getCommentAvatar\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcomment: {\r\n\t\tmarginBottom: 10,\r\n\t\t\"&:nth-last-child(1)\": {\r\n\t\t\tmarginBottom: 0,\r\n\t\t},\r\n\t\tposition: \"relative\",\r\n\t\tpaddingLeft: 60,\r\n\t},\r\n\tcommentArea: {\r\n\t\tpadding: 10,\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborderRadius: 5,\r\n\t\tboxShadow: \"2px 4px 5px 2px #dcdcdc80\",\r\n\t},\r\n\tauthor: {\r\n\t\tfontWeight: 500,\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n\tdate: {\r\n\t\topacity: 0.8,\r\n\t\tmarginBottom: 10,\r\n\t\tcolor: \"#5d5d5d\",\r\n\t\tfontSize: 13,\r\n\t},\r\n\ttext: {\r\n\t\toverflow: \"hidden\",\r\n\t\tposition: \"relative\",\r\n\t\t\"& p\": {\r\n\t\t\tmarginTop: 0,\r\n\t\t},\r\n\t},\r\n\ttextHidden: {\r\n\t\t\"&:after\": {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tcontent: \"''\",\r\n\t\t\tbackground: \"linear-gradient(to top, #ffffff, transparent)\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: 40,\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tbottom: 0,\r\n\t\t\tzIndex: 1,\r\n\t\t},\r\n\t},\r\n\treadMoreButton: {\r\n\t\tbottom: 0,\r\n\t\tposition: \"absolute\",\r\n\t\tmarginLeft: \"calc(50% - 15px)\",\r\n\t\tzIndex: 2,\r\n\t\ttransition: \"transform .3s ease-in-out, background .2s linear\",\r\n\t\tcolor: \"#252733\",\r\n\t\tbackground: \"rgb(16, 16, 16, 0.1)\",\r\n\t},\r\n\treadMoreButtonClose: {\r\n\t\ttransform: \"rotate(180deg)\",\r\n\t\tposition: \"static\",\r\n\t\tbackground: \"transparent\",\r\n\t},\r\n\tavatar: {\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#636e72\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tborderRadius: \"100%\",\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tfontSize: 24,\r\n\t\tfontWeight: 500,\r\n\t},\r\n});\r\n\r\nconst ArrowIcon = getIcon(\"ExpandMore\");\r\n\r\n/**\r\n * Максимальная высота блока с текстом комментария\r\n */\r\nconst maxHeight = 100;\r\n\r\nexport interface CommentProps {\r\n\t/**\r\n\t * Содержимое коментария в формате Markdown\r\n\t */\r\n\ttext: string;\r\n\t/**\r\n\t * Автор\r\n\t */\r\n\tauthor: string;\r\n\t/**\r\n\t * Дата\r\n\t */\r\n\tdate: string;\r\n\t/**\r\n\t * Индекс во внешнем массиве комментариев\r\n\t */\r\n\tindex?: number;\r\n\t/**\r\n\t * Анимировать коммент, если он первый в списке\r\n\t */\r\n\tfirstAnimated?: boolean;\r\n}\r\n\r\n/**\r\n * Компонент для отображения комментария\r\n * - Пакет для рендеринга html из Markdown: [react-markdown](https://www.npmjs.com/package/react-markdown)\r\n *\r\n * @param {CommentProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const SingleComment: React.FC<CommentProps> = React.memo(\r\n\t({ author, date, text, index, firstAnimated }: CommentProps) => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst ref = createRef<HTMLDivElement>();\r\n\r\n\t\tconst [hidden, setHidden] = useState<boolean>();\r\n\t\tconst [needReadMoreButton, setNeedReadMoreButton] = useState<boolean>();\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (ref && ref.current) {\r\n\t\t\t\tconst initialHeight = ref.current.getBoundingClientRect()\r\n\t\t\t\t\t.height;\r\n\r\n\t\t\t\tif (hidden === undefined && initialHeight > maxHeight) {\r\n\t\t\t\t\tsetHidden(true);\r\n\t\t\t\t\tsetNeedReadMoreButton(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, []);\r\n\r\n\t\tconst toggleHidden = useCallback(() => setHidden(!hidden), [hidden]);\r\n\r\n\t\tconst height = useMemo(() => {\r\n\t\t\treturn hidden ? maxHeight : undefined;\r\n\t\t}, [hidden]);\r\n\r\n\t\tconst animationTimeout = useMemo(\r\n\t\t\t() => (firstAnimated && index === 0 ? 1000 : 0),\r\n\t\t\t[index, firstAnimated]\r\n\t\t);\r\n\r\n\t\tconst avatar = useMemo(() => getCommentAvatarData(author), [author]);\r\n\r\n\t\treturn (\r\n\t\t\t<Fade in={true} timeout={animationTimeout}>\r\n\t\t\t\t<div className={classes.comment}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={classes.avatar}\r\n\t\t\t\t\t\tstyle={{ backgroundColor: avatar.color }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{avatar.symbol}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.commentArea}>\r\n\t\t\t\t\t\t<div className={classes.author}>{author}</div>\r\n\t\t\t\t\t\t<div className={classes.date}>{date}</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(classes.text, {\r\n\t\t\t\t\t\t\t\t[classes.textHidden]: hidden,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\tstyle={{ maxHeight: height }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ReactMarkdown>{text}</ReactMarkdown>\r\n\t\t\t\t\t\t\t{needReadMoreButton && (\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tclassName={clsx(classes.readMoreButton, {\r\n\t\t\t\t\t\t\t\t\t\t[classes.readMoreButtonClose]: !hidden,\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleHidden}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{ArrowIcon && <ArrowIcon />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>\r\n\t\t);\r\n\t}\r\n);\r\n","import { LoremIpsum } from \"lorem-ipsum\";\r\nimport { CommentProps } from \"./Comment\";\r\n\r\nconst capitalize = (str: string) => `${str[0].toUpperCase()}${str.slice(1)}`;\r\n\r\n/**\r\n * Для тестов. Генерирует рыбу-коментарий.\r\n */\r\nexport const generateComment = (): CommentProps => {\r\n\tconst lorem = new LoremIpsum({\r\n\t\tsentencesPerParagraph: {\r\n\t\t\tmax: 2,\r\n\t\t\tmin: 1,\r\n\t\t},\r\n\t\twordsPerSentence: {\r\n\t\t\tmax: 6,\r\n\t\t\tmin: 4,\r\n\t\t},\r\n    });\r\n    \r\n\treturn {\r\n\t\tauthor: `${capitalize(lorem.generateWords(1))} ${capitalize(\r\n\t\t\tlorem.generateWords(1)\r\n\t\t)}`,\r\n\t\tdate: `12.02.2020 20:43`,\r\n\t\ttext: lorem.generateSentences(5),\r\n\t};\r\n};\r\n","import { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { CommentProps, SingleComment } from \"./Comment\";\r\nimport { generateComment } from \"./generateComment\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcommentsWrapper: {\r\n\t\tmarginBottom: 20,\r\n\t},\r\n\tcomments: {\r\n\t\tmarginBottom: 10,\r\n\t\tmaxHeight: 700,\r\n\t\toverflowY: \"auto\",\r\n\t\toverflowX: \"hidden\",\r\n\t\tpaddingTop: 10,\r\n\t\tpaddingRight: 20,\r\n\t\tpaddingBottom: 15,\r\n\t},\r\n});\r\n\r\nconst paginationSize = 5;\r\nconst tmpTotalCount = 15;\r\n\r\n/**\r\n * Формат ответа от сервера, возвращающего массив комментариев\r\n */\r\ninterface CommentsList {\r\n\trows: CommentProps[];\r\n\ttotalCount: number;\r\n}\r\n\r\ninterface CommentsProps {\r\n\t/**\r\n\t * Массив комментариев.\r\n\t * TODO: только для тестов.\r\n\t * В проекте комментарии будут запрашиваться самим комопонентом с сервера.\r\n\t */\r\n\tdata: CommentProps[];\r\n\t/**\r\n\t * CSS-класс\r\n\t */\r\n\tclassName?: string;\r\n}\r\n\r\n/**\r\n * Список комментариев\r\n *\r\n * @param {CommentsProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const Comments: React.FC<CommentsProps> = React.memo(\r\n\t({ data, className }) => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst [commentsList, setCommentsList] = useState<CommentsList>({\r\n\t\t\trows: data,\r\n\t\t\ttotalCount: tmpTotalCount,\r\n\t\t});\r\n\r\n\t\tconst [animated, setAnimated] = useState<boolean>(false);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetCommentsList({\r\n\t\t\t\trows: data,\r\n\t\t\t\ttotalCount: tmpTotalCount,\r\n\t\t\t});\r\n\t\t\tsetAnimated(true);\r\n\t\t}, [data]);\r\n\r\n\t\tconst showMoreDisabled = useMemo(\r\n\t\t\t() => commentsList.rows.length >= commentsList.totalCount,\r\n\t\t\t[commentsList]\r\n\t\t);\r\n\r\n\t\tconst onShowMore = useCallback(() => {\r\n\t\t\t// TODO: временно, заглушка! Здесь запрос на сервер!\r\n\t\t\tconst toAdd: CommentProps[] = new Array(paginationSize)\r\n\t\t\t\t.fill(null)\r\n\t\t\t\t.map(generateComment);\r\n\r\n\t\t\tsetCommentsList({\r\n\t\t\t\trows: [...commentsList.rows, ...toAdd],\r\n\t\t\t\ttotalCount: tmpTotalCount,\r\n\t\t\t});\r\n\t\t\tsetAnimated(false);\r\n\t\t}, [commentsList]);\r\n\r\n\t\tconst showLessDisabled = useMemo(\r\n\t\t\t() => commentsList.rows.length <= paginationSize,\r\n\t\t\t[commentsList]\r\n\t\t);\r\n\r\n\t\tconst onShowLess = useCallback(() => {\r\n\t\t\t// TODO: временно, заглушка!\r\n\t\t\tsetCommentsList({\r\n\t\t\t\trows: commentsList.rows.slice(0, -paginationSize),\r\n\t\t\t\ttotalCount: tmpTotalCount,\r\n\t\t\t});\r\n\t\t\tsetAnimated(false);\r\n\t\t}, [commentsList]);\r\n\r\n\t\treturn (\r\n\t\t\t<div className={clsx(classes.commentsWrapper, className)}>\r\n\t\t\t\t<div className={classes.comments}>\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t{commentsList.rows.map((comment, i) => (\r\n\t\t\t\t\t\t\t<SingleComment\r\n\t\t\t\t\t\t\t\t{...comment}\r\n\t\t\t\t\t\t\t\t// Чтобы обеспечить правильную перерисовку комментария\r\n\t\t\t\t\t\t\t\t// при добавлении нового элемента в стек\r\n\t\t\t\t\t\t\t\tkey={`${i}-${+new Date()}`}\r\n\t\t\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\t\t\tfirstAnimated={animated}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t</div>\r\n\t\t\t\t{commentsList.totalCount && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={onShowMore}\r\n\t\t\t\t\t\t\tdisabled={showMoreDisabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t+ Показать больше\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={onShowLess}\r\n\t\t\t\t\t\t\tdisabled={showLessDisabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t- Скрыть\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n);\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { RichTextEditor } from \"./components/RichTextEditor/RichTextEditor\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CommentProps } from \"./components/Comments/Comment\";\r\nimport { Comments } from \"./components/Comments/Comments\";\r\nimport fakeApiComments from \"./fake-api.json\";\r\n\r\nconst useStyles = makeStyles({\r\n\tappWrapper: {\r\n\t\tmargin: \"0 auto\",\r\n\t\tmaxWidth: 800,\r\n\t\tminHeight: \"100vh\",\r\n\t\tpadding: 10,\r\n\t\tpaddingLeft: 30,\r\n\t\tpaddingRight: 30,\r\n\t\tbackground: \"#eef2f4\",\r\n\t},\r\n\t\"@global\": {\r\n\t\t\"*::-webkit-scrollbar\": {\r\n\t\t\twidth: 10,\r\n\t\t},\r\n\t\t\"*::-webkit-scrollbar-thumb\": {\r\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, .3)\",\r\n\t\t\tborderRadius: 5,\r\n\t\t},\r\n\t\t\"*::-webkit-scrollbar-track\": {\r\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, .1)\",\r\n\t\t},\r\n\t},\r\n\t\"body\": {\r\n\t\tminWidth: 1000,\r\n\t\tbackgroundColor: \"#eef2f4\",\r\n\t},\r\n\tleaveCommentBtn: {\r\n\t\tmarginBottom: 20,\r\n\t},\r\n\tbadge: {\r\n\t\tbackground: \"#78a971\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\tmaxWidth: 250,\r\n\t\ttextAlign: \"center\",\r\n\t\tborderRadius: 5,\r\n\t\tpadding: 3,\r\n\t\tmargin: \"0 auto\",\r\n\t\tmarginBottom: 30,\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 17,\r\n\t\ttextAlign: \"center\",\r\n\t\tmarginBottom: 10,\r\n\t\tmarginTop: 15,\r\n\t\tfontWeight: 500,\r\n\t},\r\n\tdecisionBtn: {\r\n\t\tbackground: \"#78a971\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\tpaddingLeft: 50,\r\n\t\tpaddingRight: 50,\r\n\t\tmargin: \"0 auto\",\r\n\t\tdisplay: \"block\",\r\n\t\tmarginTop: 10,\r\n\t\tmarginBottom: 20,\r\n\t\t\"&:hover\": {\r\n\t\t\tbackground: \"#78a971\",\r\n\t\t}\r\n\t},\r\n});\r\n\r\nfunction App() {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [comments, setComments] = useState<CommentProps[]>(fakeApiComments);\r\n\tconst [forceClean, setForceClean] = useState<number>();\r\n\tconst [currentComment, setCurrentComment] = useState<string>();\r\n\r\n\tconst leaveComment = useCallback(() => {\r\n\t\tif (currentComment) {\r\n\t\t\tsetComments([\r\n\t\t\t\t{\r\n\t\t\t\t\tauthor: \"Тест Тестов\",\r\n\t\t\t\t\tdate: \"23.09.2020 20:31\",\r\n\t\t\t\t\ttext: currentComment,\r\n\t\t\t\t},\r\n\t\t\t\t...comments,\r\n\t\t\t]);\r\n\t\t\tsetForceClean(+new Date());\r\n\t\t\tsetCurrentComment(undefined);\r\n\r\n\t\t\tconsole.log(currentComment);\r\n\t\t}\r\n\t}, [currentComment, comments]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.appWrapper}>\r\n\t\t\t<Typography variant=\"h3\" className={classes.title}>\r\n\t\t\t\tОснование для принятия решения по активу 201212000932\r\n\t\t\t</Typography>\r\n\t\t\t<div className={classes.badge}>Актив в пуле</div>\r\n\t\t\t<RichTextEditor\r\n\t\t\t\tonChange={setCurrentComment}\r\n\t\t\t\tforceClean={forceClean}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tonClick={leaveComment}\r\n\t\t\t\tclassName={classes.leaveCommentBtn}\r\n\t\t\t>\r\n\t\t\t\tОставить комментарий\r\n\t\t\t</Button>\r\n\t\t\t<Comments data={comments} />\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tclassName={classes.decisionBtn}\r\n\t\t\t>\r\n\t\t\t\tПринять решение по активу\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const customTheme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tmain: \"#0088bb\",\r\n\t\t},\r\n\t},\r\n\toverrides: {\r\n\t\tMuiTooltip: {\r\n\t\t\ttooltip: {\r\n\t\t\t\tfontSize: 13,\r\n\t\t\t\tfontWeight: 400,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n","import { CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { customTheme } from \"./customTheme\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<CssBaseline />\r\n\t\t<ThemeProvider theme={customTheme}>\r\n\t\t\t<App />\r\n\t\t</ThemeProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}