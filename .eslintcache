[{"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\icons.ts":"1","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx":"2","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx":"3","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\App.tsx":"4","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\index.tsx":"5","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\Comments\\Comment.tsx":"6","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\Comments\\Comments.tsx":"7","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\customTheme.ts":"8","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\LinkPicker.tsx":"9","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\LinkPreview.tsx":"10"},{"size":950,"mtime":1606625057498,"results":"11","hashOfConfig":"12"},{"size":3298,"mtime":1606630886569,"results":"13","hashOfConfig":"12"},{"size":3728,"mtime":1606629648753,"results":"14","hashOfConfig":"12"},{"size":1642,"mtime":1606554552200,"results":"15","hashOfConfig":"12"},{"size":377,"mtime":1606541658575,"results":"16","hashOfConfig":"12"},{"size":1457,"mtime":1606628968060,"results":"17","hashOfConfig":"12"},{"size":1273,"mtime":1606554299921,"results":"18","hashOfConfig":"12"},{"size":164,"mtime":1606541622299,"results":"19","hashOfConfig":"12"},{"size":3690,"mtime":1606628541590,"results":"20","hashOfConfig":"12"},{"size":444,"mtime":1606626738894,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3suvvq",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\icons.ts",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx",["47","48"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { createRef, useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n\tconvertToRaw,\r\n\tEditor,\r\n\tEditorState,\r\n\tModifier,\r\n\tRichUtils,\r\n} from \"draft-js\";\r\nimport { RichTextEditorTools } from \"./RichTextEditorTools\";\r\nimport { draftToMarkdown } from \"markdown-draft-js\";\r\nimport clsx from \"clsx\";\r\nimport { LinkPicker } from \"./LinkPicker\";\r\nimport { richTextEditorDecorators } from \"./decorators\";\r\n\r\nconst border = \"1px solid #d2d2d2\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorWrapper: {\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborder,\r\n\t\tmarginBottom: 20,\r\n\t\tposition: \"relative\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t},\r\n\trichEditorWrapperFocus: {\r\n\t\tborderColor: \"#4dd0e1\",\r\n\t},\r\n\trichEditorArea: {\r\n\t\tpadding: 10,\r\n\t\theight: 200,\r\n\t\toverflowY: \"auto\",\r\n\t\ttransition: \"box-shadow .2s ease-in-out\",\r\n\t},\r\n\trichEditorAreaFocus: {\r\n\t\tboxShadow: \"inset 0px 0px 10px #caefff\",\r\n\t},\r\n\ttoolsUnfocus: {\r\n\t\topacity: 0.95,\r\n\t\ttransition: \"opacity .2s ease-in-out\",\r\n\t},\r\n});\r\n\r\nconst styleMap = {\r\n\tBOLD: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n\tLINK: {\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n};\r\n\r\ninterface RichTextEditorProps {\r\n\tonChange: (value: string) => void;\r\n\tforceClean?: number;\r\n}\r\n\r\nexport const RichTextEditor: React.FC<RichTextEditorProps> = ({\r\n\tforceClean,\r\n\t...props\r\n}: RichTextEditorProps): JSX.Element => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [editorState, setEditorState] = useState(\r\n\t\tEditorState.createEmpty(richTextEditorDecorators)\r\n\t);\r\n\r\n\tconst [focus, setFocus] = useState<boolean>();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (forceClean) {\r\n\t\t\tsetEditorState(EditorState.createEmpty());\r\n\t\t}\r\n\t}, [forceClean]);\r\n\r\n\tconst ref = createRef<any>();\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(nextEditorState: EditorState) => {\r\n\t\t\tsetEditorState(nextEditorState);\r\n\r\n\t\t\tconst content = nextEditorState.getCurrentContent();\r\n\t\t\tconst rawObject = convertToRaw(content);\r\n\t\t\tconst markdownString = draftToMarkdown(rawObject, {\r\n\t\t\t\tstyleItems: {\r\n\t\t\t\t\tITALIC: {\r\n\t\t\t\t\t\topen: () => \"*\",\r\n\t\t\t\t\t\tclose: () => \"*\",\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tprops.onChange(markdownString);\r\n\t\t},\r\n\t\t[props.onChange]\r\n\t);\r\n\r\n\tconst toggleBlockType = useCallback(\r\n\t\t(blockType: string) =>\r\n\t\t\tsetEditorState(RichUtils.toggleBlockType(editorState, blockType)),\r\n\t\t[editorState]\r\n\t);\r\n\r\n\tconst toggleInlineStyle = useCallback(\r\n\t\t(inlineStyle: string) =>\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleInlineStyle(editorState, inlineStyle)\r\n\t\t\t),\r\n\t\t[editorState]\r\n\t);\r\n\r\n\tconst onClickArea = useCallback(() => {\r\n\t\tif (ref && ref.current) {\r\n\t\t\tref.current.focus();\r\n\t\t\tsetFocus(true);\r\n\t\t}\r\n\t}, [ref]);\r\n\r\n\tconst onBlur = useCallback(() => setFocus(false), []);\r\n\r\n\tconst [linkPicker, setLinkPicker] = useState<boolean>();\r\n\tconst toggleLinkPicker = useCallback(() => setLinkPicker(!linkPicker), [\r\n\t\tlinkPicker,\r\n\t]);\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={clsx(classes.richEditorWrapper, {\r\n\t\t\t\t[classes.richEditorWrapperFocus]: focus,\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t<RichTextEditorTools\r\n\t\t\t\teditorState={editorState}\r\n\t\t\t\ttoggleBlockType={toggleBlockType}\r\n\t\t\t\ttoggleInlineStyle={toggleInlineStyle}\r\n\t\t\t\ttoggleLinkPicker={toggleLinkPicker}\r\n\t\t\t\tclassName={!focus ? classes.toolsUnfocus : undefined}\r\n\t\t\t/>\r\n\t\t\t<LinkPicker\r\n\t\t\t\teditorState={editorState}\r\n\t\t\t\ttoggleLinkPicker={toggleLinkPicker}\r\n\t\t\t\topen={linkPicker}\r\n\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t/>\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(classes.richEditorArea, {\r\n\t\t\t\t\t[classes.richEditorAreaFocus]: focus,\r\n\t\t\t\t})}\r\n\t\t\t\tonClick={onClickArea}\r\n\t\t\t>\r\n\t\t\t\t<Editor\r\n\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n",["49","50"],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\App.tsx",[],["51","52"],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\index.tsx",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\Comments\\Comment.tsx",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\Comments\\Comments.tsx",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\customTheme.ts",[],["53","54"],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\LinkPicker.tsx",["55","56"],"import { Fade, IconButton, makeStyles, TextField } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { EditorState, RichUtils } from \"draft-js\";\r\nimport React, {\r\n\tChangeEvent,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseRef,\r\n\tuseState,\r\n} from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlinkPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 2,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#fafdff\",\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t\tpadding: 5,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpaddingLeft: 10,\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tinput: {\r\n\t\tborder: 0,\r\n\t\tborderBottom: \"2px solid #0088bb\",\r\n\t\tmarginRight: 10,\r\n\t\tbackground: \"transparent\",\r\n\t\toutline: \"none !important\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t},\r\n\tinputError: {\r\n\t\tborderBottom: \"2px solid #ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\nconst CheckIcon = getIcon(\"Check\")!;\r\n\r\ninterface LinkPickerProps {\r\n\topen?: boolean;\r\n\teditorState: EditorState;\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\ttoggleLinkPicker: () => void;\r\n}\r\n\r\nexport const LinkPicker: React.FC<LinkPickerProps> = ({\r\n\topen,\r\n\ttoggleLinkPicker,\r\n\teditorState,\r\n\tsetEditorState,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [url, setUrl] = useState<string>();\r\n\tconst [error, setError] = useState<boolean>();\r\n\r\n\tconst prevOpenStatus = useRef(open);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (prevOpenStatus.current !== open) {\r\n\t\t\tsetUrl(\"\");\r\n\t\t\tsetError(false);\r\n\r\n\t\t\tprevOpenStatus.current = open;\r\n\t\t\tconst selection = editorState.getSelection();\r\n\r\n\t\t\tif (!selection.isCollapsed()) {\r\n\t\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\t\tconst startKey = editorState.getSelection().getStartKey();\r\n\t\t\t\tconst startOffset = editorState.getSelection().getStartOffset();\r\n\t\t\t\tconst blockWithLinkAtBeginning = contentState.getBlockForKey(\r\n\t\t\t\t\tstartKey\r\n\t\t\t\t);\r\n\t\t\t\tconst linkKey = blockWithLinkAtBeginning.getEntityAt(\r\n\t\t\t\t\tstartOffset\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (linkKey) {\r\n\t\t\t\t\tconst linkInstance = contentState.getEntity(linkKey);\r\n\t\t\t\t\tsetUrl(linkInstance.getData().url);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, [open, editorState]);\r\n\r\n\tconst onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n\t\te.preventDefault();\r\n\t\tsetUrl(e.target.value);\r\n\r\n\t\tif (e.target.value) {\r\n\t\t\tsetError(false);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst saveUrl = useCallback(\r\n\t\t(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tif (!url) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\tconst contentStateWithEntity = contentState.createEntity(\r\n\t\t\t\t\"LINK\",\r\n\t\t\t\t\"MUTABLE\",\r\n\t\t\t\t{ url }\r\n\t\t\t);\r\n\t\t\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n\t\t\tconst newEditorState = EditorState.set(editorState, {\r\n\t\t\t\tcurrentContent: contentStateWithEntity,\r\n\t\t\t});\r\n\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleLink(\r\n\t\t\t\t\tnewEditorState,\r\n\t\t\t\t\tnewEditorState.getSelection(),\r\n\t\t\t\t\tentityKey\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tsetUrl(\"\");\r\n\t\t\ttoggleLinkPicker();\r\n\t\t},\r\n\t\t[editorState, setEditorState, toggleLinkPicker, url]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fade in={open}>\r\n\t\t\t<div className={classes.linkPicker}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Введите URL:\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={url}\r\n\t\t\t\t\tclassName={clsx(classes.input, {\r\n\t\t\t\t\t\t[classes.inputError]: error,\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t\t<IconButton size=\"small\" onMouseDown={saveUrl}>\r\n\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" onClick={toggleLinkPicker}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\LinkPreview.tsx",[],{"ruleId":"57","severity":1,"message":"58","line":7,"column":2,"nodeType":"59","messageId":"60","endLine":7,"endColumn":10},{"ruleId":"61","severity":1,"message":"62","line":95,"column":3,"nodeType":"63","endLine":95,"endColumn":19,"suggestions":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"65","replacedBy":"69"},{"ruleId":"67","replacedBy":"70"},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},{"ruleId":"57","severity":1,"message":"73","line":1,"column":40,"nodeType":"59","messageId":"60","endLine":1,"endColumn":49},{"ruleId":"57","severity":1,"message":"74","line":8,"column":2,"nodeType":"59","messageId":"60","endLine":8,"endColumn":9},"@typescript-eslint/no-unused-vars","'Modifier' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["75"],"no-native-reassign",["76"],"no-negated-in-lhs",["77"],["76"],["77"],["76"],["77"],"'TextField' is defined but never used.","'useMemo' is defined but never used.",{"desc":"78","fix":"79"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props]",{"range":"80","text":"81"},[2140,2156],"[props]"]