[{"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\App.tsx":"1","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx":"2","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx":"3","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\icons.ts":"4","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPicker.tsx":"5","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\customTheme.ts":"6","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\generateComment.ts":"7","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\toolControls.ts":"8","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\getCommentAvatar.ts":"9","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comments.tsx":"10","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\decorators.ts":"11","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comment.tsx":"12","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPreview.tsx":"13","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\index.tsx":"14"},{"size":2938,"mtime":1607060255764,"results":"15","hashOfConfig":"16"},{"size":4690,"mtime":1607060126525,"results":"17","hashOfConfig":"16"},{"size":4035,"mtime":1607060198549,"results":"18","hashOfConfig":"16"},{"size":1021,"mtime":1607059513817,"results":"19","hashOfConfig":"16"},{"size":3661,"mtime":1607004916702,"results":"20","hashOfConfig":"16"},{"size":267,"mtime":1606820385801,"results":"21","hashOfConfig":"16"},{"size":746,"mtime":1607059969705,"results":"22","hashOfConfig":"16"},{"size":1805,"mtime":1607059513724,"results":"23","hashOfConfig":"16"},{"size":1631,"mtime":1607060520992,"results":"24","hashOfConfig":"16"},{"size":3758,"mtime":1606975942544,"results":"25","hashOfConfig":"16"},{"size":346,"mtime":1607059513724,"results":"26","hashOfConfig":"16"},{"size":6611,"mtime":1607059810365,"results":"27","hashOfConfig":"16"},{"size":1794,"mtime":1607059513692,"results":"28","hashOfConfig":"16"},{"size":392,"mtime":1606743270090,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15x2xnr",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\App.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx",["64","65"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, {\r\n\tcreateRef,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\nimport { Editor, EditorState } from \"draft-js\";\r\nimport { RichTextEditorTools } from \"./RichTextEditorTools\";\r\nimport clsx from \"clsx\";\r\nimport { richTextEditorDecorators } from \"./decorators\";\r\nimport {\r\n\tconvertMarkdownToDraft,\r\n\tconvertDraftToMarkdown,\r\n} from \"./draftMarkdown\";\r\n\r\nconst border = \"1px solid #d2d2d2\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorWrapper: {\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborder,\r\n\t\tmarginBottom: 20,\r\n\t\tposition: \"relative\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingBottom: 22,\r\n\t},\r\n\trichEditorWrapperFocus: {\r\n\t\tborderColor: \"#4dd0e1\",\r\n\t},\r\n\trichEditorArea: {\r\n\t\tpadding: 10,\r\n\t\theight: 200,\r\n\t\toverflowY: \"auto\",\r\n\t\ttransition: \"box-shadow .2s ease-in-out\",\r\n\t},\r\n\trichEditorAreaFocus: {\r\n\t\tboxShadow: \"inset 0px 0px 10px #caefff\",\r\n\t},\r\n\ttoolsUnfocus: {\r\n\t\topacity: 0.95,\r\n\t\ttransition: \"opacity .2s ease-in-out\",\r\n\t},\r\n\tamountBar: {\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\twidth: \"100%\",\r\n\t\ttextAlign: \"right\",\r\n\t\tfontSize: 11,\r\n\t\tbackground: \"#eeeeee\",\r\n\t\tborderTop: \"1px solid #d2d2d2\",\r\n\t\tpadding: 3,\r\n\t\tzIndex: 1,\r\n\t\tcolor: \"#4c4b4b\",\r\n\t},\r\n\tamountBarError: {\r\n\t\tcolor: \"#ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst styleMap = {\r\n\tBOLD: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n\tLINK: {\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n};\r\n\r\nconst defaultMax = 1000;\r\n\r\ninterface RichTextEditorProps {\r\n\t/**\r\n\t * Обработчик изменения текста\r\n\t */\r\n\tonChange: (value: string) => void;\r\n\t/**\r\n\t * Дефолтное значение\r\n\t */\r\n\tdefaultValue?: string;\r\n\t/**\r\n\t * Редактор очищается при изменении этого свойства\r\n\t */\r\n\tforceClean?: number;\r\n\t/**\r\n\t * Подсказка\r\n\t */\r\n\tplaceholder?: string;\r\n\t/**\r\n\t * CSS-класс\r\n\t */\r\n\tclassName?: string;\r\n\t/**\r\n\t * Макс. количество символов\r\n\t */\r\n\tmax?: number;\r\n}\r\n\r\n/**\r\n * Расширенный редактор текста. Экспортирует строку в формате Markdown.\r\n * - Фреймворк для создания редактора: [Draft.js](https://draftjs.org/)\r\n * - Конвертер стейта Draft.js в Markdown: [markdown-draft-js](https://www.npmjs.com/package/markdown-draft-js)\r\n *\r\n * @param {RichTextEditorProps} props - св-ва компонента\r\n * @returns {JSX.Element}\r\n */\r\nexport const RichTextEditor: React.FC<RichTextEditorProps> = React.memo(\r\n\t({\r\n\t\tdefaultValue,\r\n\t\tforceClean,\r\n\t\tplaceholder,\r\n\t\tclassName,\r\n\t\t...props\r\n\t}: RichTextEditorProps): JSX.Element => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst [editorState, setEditorState] = useState(\r\n\t\t\tEditorState.createWithContent(\r\n\t\t\t\tconvertMarkdownToDraft(defaultValue),\r\n\t\t\t\trichTextEditorDecorators\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst max = useMemo(() => props.max || defaultMax, [props.max]);\r\n\r\n\t\tconst [symbolsLeft, setSymbolsLeft] = useState<number>(max);\r\n\r\n\t\tconst onChange = useCallback(\r\n\t\t\t(nextEditorState: EditorState) => setEditorState(nextEditorState),\r\n\t\t\t[]\r\n\t\t);\r\n\r\n\t\tconst ref = createRef<any>();\r\n\t\tconst [focus, setFocus] = useState<boolean>();\r\n\r\n\t\tconst onBlur = useCallback(() => setFocus(false), [editorState]);\r\n\r\n\t\tconst onClickArea = useCallback(() => {\r\n\t\t\tif (ref && ref.current) {\r\n\t\t\t\tref.current.focus();\r\n\t\t\t\tsetFocus(true);\r\n\t\t\t}\r\n\t\t}, [ref]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (forceClean) {\r\n\t\t\t\tsetEditorState(\r\n\t\t\t\t\tEditorState.createEmpty(richTextEditorDecorators)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, [forceClean]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst markdownString = convertDraftToMarkdown(editorState);\r\n\t\t\tprops.onChange(markdownString);\r\n\t\t\tsetSymbolsLeft(max - markdownString.length);\r\n\t\t}, [editorState]);\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(\r\n\t\t\t\t\tclasses.richEditorWrapper,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t[classes.richEditorWrapperFocus]: focus,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName\r\n\t\t\t\t)}\r\n\t\t\t>\r\n\t\t\t\t<RichTextEditorTools\r\n\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t\t\tclassName={!focus ? classes.toolsUnfocus : undefined}\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={clsx(classes.richEditorArea, {\r\n\t\t\t\t\t\t[classes.richEditorAreaFocus]: focus,\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tonClick={onClickArea}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Editor\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName={clsx(classes.amountBar, {\r\n\t\t\t\t\t\t[classes.amountBarError]: symbolsLeft <= 0,\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\tОсталось симолов: {symbolsLeft}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n);\r\n",["66","67"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\icons.ts",[],["68","69"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPicker.tsx",["70"],"import { Fade, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { EditorState, RichUtils } from \"draft-js\";\r\nimport React, { ChangeEvent, useCallback, useState } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlinkPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 2,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#fafdff\",\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t\tpadding: 5,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpaddingLeft: 10,\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tinput: {\r\n\t\tborder: 0,\r\n\t\tborderBottom: \"2px solid #0088bb\",\r\n\t\tmarginRight: 10,\r\n\t\tbackground: \"transparent\",\r\n\t\toutline: \"none !important\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 3,\r\n\t},\r\n\tinputError: {\r\n\t\tborderBottom: \"2px solid #ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\nconst CheckIcon = getIcon(\"Check\")!;\r\n\r\ninterface LinkPickerProps {\r\n\t/**\r\n\t * Текущий стейт редактора текстов\r\n\t */\r\n\teditorState: EditorState;\r\n\t/**\r\n\t * Ф-я изменения стейта\r\n\t */\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\t/**\r\n\t * Ф-я, закрывающая интерфейс редактирования ссылки\r\n\t */\r\n\tcloseLinkPicker: () => void;\r\n}\r\n\r\n/**\r\n * Форма добавления ссылки в расширенном редакторе текстов\r\n *\r\n * @param {LinkPickerProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPicker: React.FC<LinkPickerProps> = ({\r\n\tcloseLinkPicker,\r\n\teditorState,\r\n\tsetEditorState,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tlet presetUrl = \"\";\r\n\tconst contentState = editorState.getCurrentContent();\r\n\tconst startKey = editorState.getSelection().getStartKey();\r\n\tconst startOffset = editorState.getSelection().getStartOffset();\r\n\tconst blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\r\n\tconst linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\r\n\r\n\tif (linkKey) {\r\n\t\tconst linkInstance = contentState.getEntity(linkKey);\r\n\t\tpresetUrl = linkInstance.getData().url;\r\n\t}\r\n\r\n\tconst [url, setUrl] = useState<string>(presetUrl);\r\n\tconst [error, setError] = useState<boolean>();\r\n\r\n\tconst onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.value) {\r\n\t\t\tsetError(false);\r\n\t\t}\r\n\t\tsetUrl(e.target.value);\r\n\t}, []);\r\n\r\n\tconst saveUrl = useCallback(\r\n\t\t(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tif (!url) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\tconst contentStateWithEntity = contentState.createEntity(\r\n\t\t\t\t\"LINK\",\r\n\t\t\t\t\"MUTABLE\",\r\n\t\t\t\t{ url }\r\n\t\t\t);\r\n\t\t\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n\t\t\tconst newEditorState = EditorState.set(editorState, {\r\n\t\t\t\tcurrentContent: contentStateWithEntity,\r\n\t\t\t});\r\n\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleLink(\r\n\t\t\t\t\tnewEditorState,\r\n\t\t\t\t\tnewEditorState.getSelection(),\r\n\t\t\t\t\tentityKey\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tcloseLinkPicker();\r\n\t\t},\r\n\t\t[editorState, url]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fade in={true}>\r\n\t\t\t<div className={classes.linkPicker}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Введите URL:\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={url}\r\n\t\t\t\t\tclassName={clsx(classes.input, {\r\n\t\t\t\t\t\t[classes.inputError]: error,\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t\t<IconButton size=\"small\" onMouseDown={saveUrl}>\r\n\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" onClick={closeLinkPicker}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\customTheme.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\generateComment.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\toolControls.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\getCommentAvatar.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comments.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\decorators.ts",[],["71","72"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comment.tsx",["73"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPreview.tsx",["74"],"import { makeStyles } from \"@material-ui/core\";\r\nimport { ContentBlock, ContentState, DraftDecorator } from \"draft-js\";\r\nimport React, { ReactNode } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlink: {\r\n\t\tcolor: \"#0088bb\",\r\n\t\ttextDecoration: \"underline\",\r\n\t},\r\n});\r\n\r\ninterface LinkPreviewProps {\r\n\t/**\r\n\t * Название ссылки\r\n\t */\r\n\tchildren?: ReactNode;\r\n\t/**\r\n\t * Адрес ссылки\r\n\t */\r\n\turl?: string;\r\n\t/**\r\n\t * Стейт расширенного редактора текстов\r\n\t */\r\n\tcontentState: ContentState;\r\n\t/**\r\n\t * Id ссылки\r\n\t */\r\n\tentityKey: string;\r\n}\r\n\r\n/**\r\n * Декоратор для отображения ссылок в расширенном редакторе текстов\r\n *\r\n * @param {LinkPreviewProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPreview: React.FC<LinkPreviewProps> = (props) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { url } = props.contentState.getEntity(props.entityKey).getData();\r\n\r\n\treturn (\r\n\t\t<a className={classes.link} href={url} title={`Ссылка: ${url}`}>\r\n\t\t\t{props.children}\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\n/**\r\n * Ф-я для определения ссылки в стейте Draft.js\r\n *\r\n * @param {ContentBlock} contentBlock - блок с контентом\r\n * @param {Function} callback - callback\r\n * @param {ContentState} contentState - текущий стейт редактора\r\n * @returns {void}\r\n */\r\nexport const findLinkEntities = (\r\n\tcontentBlock: ContentBlock,\r\n\tcallback: (start: number, end: number) => void,\r\n\tcontentState: ContentState\r\n): void =>\r\n\tcontentBlock.findEntityRanges((character) => {\r\n\t\tconst entityKey = character.getEntity();\r\n\t\treturn (\r\n\t\t\tentityKey !== null &&\r\n\t\t\tcontentState.getEntity(entityKey).getType() === \"LINK\"\r\n\t\t);\r\n\t}, callback);\r\n","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\index.tsx",[],{"ruleId":"75","severity":1,"message":"76","line":138,"column":53,"nodeType":"77","endLine":138,"endColumn":66,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":159,"column":6,"nodeType":"77","endLine":159,"endColumn":19,"suggestions":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"75","severity":1,"message":"87","line":120,"column":3,"nodeType":"77","endLine":120,"endColumn":21,"suggestions":"88"},{"ruleId":"81","replacedBy":"89"},{"ruleId":"83","replacedBy":"90"},{"ruleId":"75","severity":1,"message":"91","line":241,"column":6,"nodeType":"77","endLine":241,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":38,"nodeType":"95","messageId":"96","endLine":2,"endColumn":52},"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'editorState'. Either exclude it or remove the dependency array.","ArrayExpression",["97"],"React Hook useEffect has missing dependencies: 'max' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["98"],"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],"React Hook useCallback has missing dependencies: 'closeLinkPicker' and 'setEditorState'. Either include them or remove the dependency array. If 'setEditorState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["101"],["99"],["100"],"React Hook useEffect has missing dependencies: 'hidden' and 'ref'. Either include them or remove the dependency array.",["102"],"@typescript-eslint/no-unused-vars","'DraftDecorator' is defined but never used.","Identifier","unusedVar",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: []",{"range":"111","text":"112"},"Update the dependencies array to be: [editorState, max, props]",{"range":"113","text":"114"},"Update the dependencies array to be: [closeLinkPicker, editorState, setEditorState, url]",{"range":"115","text":"116"},"Update the dependencies array to be: [hidden, ref]",{"range":"117","text":"118"},[3026,3039],"[]",[3519,3532],"[editorState, max, props]",[3000,3018],"[closeLinkPicker, editorState, setEditorState, url]",[4572,4574],"[hidden, ref]"]