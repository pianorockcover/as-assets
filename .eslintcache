[{"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx":"1","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx":"2","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\toolControls.ts":"3","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\customTheme.ts":"4","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPicker.tsx":"5","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\icons.ts":"6","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comment.tsx":"7","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comments.tsx":"8","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\App.tsx":"9","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPreview.tsx":"10","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\index.tsx":"11","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\decorators.ts":"12","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\generateComment.ts":"13","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\getCommentAvatar.ts":"14","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\draftMarkdown.ts":"15"},{"size":4396,"mtime":1606916356859,"results":"16","hashOfConfig":"17"},{"size":3955,"mtime":1606820385766,"results":"18","hashOfConfig":"17"},{"size":1805,"mtime":1606820385788,"results":"19","hashOfConfig":"17"},{"size":267,"mtime":1606820385801,"results":"20","hashOfConfig":"17"},{"size":3661,"mtime":1606820385762,"results":"21","hashOfConfig":"17"},{"size":1021,"mtime":1606820385800,"results":"22","hashOfConfig":"17"},{"size":6490,"mtime":1606977180829,"results":"23","hashOfConfig":"17"},{"size":3758,"mtime":1606975942544,"results":"24","hashOfConfig":"17"},{"size":3106,"mtime":1606975338606,"results":"25","hashOfConfig":"17"},{"size":1794,"mtime":1606820385764,"results":"26","hashOfConfig":"17"},{"size":392,"mtime":1606743270090,"results":"27","hashOfConfig":"17"},{"size":346,"mtime":1606820385779,"results":"28","hashOfConfig":"17"},{"size":750,"mtime":1606977362297,"results":"29","hashOfConfig":"17"},{"size":1603,"mtime":1606975417185,"results":"30","hashOfConfig":"17"},{"size":1202,"mtime":1606820385787,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"15x2xnr",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx",["69","70","71"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, {\r\n\tcreateRef,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseRef,\r\n\tuseState,\r\n} from \"react\";\r\nimport { Editor, EditorState } from \"draft-js\";\r\nimport { RichTextEditorTools } from \"./RichTextEditorTools\";\r\nimport clsx from \"clsx\";\r\nimport { richTextEditorDecorators } from \"./decorators\";\r\nimport {\r\n\tconvertMarkdownToDraft,\r\n\tconvertDraftToMarkdown,\r\n} from \"./draftMarkdown\";\r\n\r\nconst border = \"1px solid #d2d2d2\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorWrapper: {\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborder,\r\n\t\tmarginBottom: 20,\r\n\t\tposition: \"relative\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingBottom: 22,\r\n\t\tminWidth: 450,\r\n\t},\r\n\trichEditorWrapperFocus: {\r\n\t\tborderColor: \"#4dd0e1\",\r\n\t},\r\n\trichEditorArea: {\r\n\t\tpadding: 10,\r\n\t\theight: 200,\r\n\t\toverflowY: \"auto\",\r\n\t\ttransition: \"box-shadow .2s ease-in-out\",\r\n\t},\r\n\trichEditorAreaFocus: {\r\n\t\tboxShadow: \"inset 0px 0px 10px #caefff\",\r\n\t},\r\n\ttoolsUnfocus: {\r\n\t\topacity: 0.95,\r\n\t\ttransition: \"opacity .2s ease-in-out\",\r\n\t},\r\n\tamountBar: {\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\twidth: \"100%\",\r\n\t\ttextAlign: \"right\",\r\n\t\tfontSize: 11,\r\n\t\tbackground: \"#eeeeee\",\r\n\t\tborderTop: \"1px solid #d2d2d2\",\r\n\t\tpadding: 3,\r\n\t\tzIndex: 1,\r\n\t\tcolor: \"#4c4b4b\",\r\n\t},\r\n});\r\n\r\nconst styleMap = {\r\n\tBOLD: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n\tLINK: {\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n};\r\n\r\ninterface RichTextEditorProps {\r\n\t/**\r\n\t * Обработчик изменения текста\r\n\t */\r\n\tonChange: (value: string) => void;\r\n\t/**\r\n\t * Дефолтное значение\r\n\t */\r\n\tdefaultValue?: string;\r\n\t/**\r\n\t * Редактор очищается при изменении этого свойства\r\n\t */\r\n\tforceClean?: number;\r\n\t/**\r\n\t * Подсказка\r\n\t */\r\n\tplaceholder?: string;\r\n\t/**\r\n\t * CSS-класс\r\n\t */\r\n\tclassName?: string;\r\n}\r\n\r\n/**\r\n * Расширенный редактор текста. Экспортирует строку в формате Markdown.\r\n * - Фреймворк для создания редактора: [Draft.js](https://draftjs.org/)\r\n * - Конвертер стейта Draft.js в Markdown: [markdown-draft-js](https://www.npmjs.com/package/markdown-draft-js)\r\n *\r\n * @param {RichTextEditorProps} props - св-ва компонента\r\n * @returns {JSX.Element}\r\n */\r\nexport const RichTextEditor: React.FC<RichTextEditorProps> = React.memo(\r\n\t({\r\n\t\tdefaultValue,\r\n\t\tforceClean,\r\n\t\tplaceholder,\r\n\t\tclassName,\r\n\t\t...props\r\n\t}: RichTextEditorProps): JSX.Element => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst [editorState, setEditorState] = useState(\r\n\t\t\tEditorState.createWithContent(\r\n\t\t\t\tconvertMarkdownToDraft(defaultValue),\r\n\t\t\t\trichTextEditorDecorators\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst [symbolsAmount, setSymbolsAmount] = useState<number>(0);\r\n\r\n\t\tconst onChange = useCallback(\r\n\t\t\t(nextEditorState: EditorState) => setEditorState(nextEditorState),\r\n\t\t\t[]\r\n\t\t);\r\n\r\n\t\tconst ref = createRef<any>();\r\n\t\tconst [focus, setFocus] = useState<boolean>();\r\n\r\n\t\tconst onBlur = useCallback(() => setFocus(false), [editorState]);\r\n\r\n\t\tconst onClickArea = useCallback(() => {\r\n\t\t\tif (ref && ref.current) {\r\n\t\t\t\tref.current.focus();\r\n\t\t\t\tsetFocus(true);\r\n\t\t\t}\r\n\t\t}, [ref]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (forceClean) {\r\n\t\t\t\tsetEditorState(\r\n\t\t\t\t\tEditorState.createEmpty(richTextEditorDecorators)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, [forceClean]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst markdownString = convertDraftToMarkdown(editorState);\r\n\t\t\tprops.onChange(markdownString);\r\n\t\t\tsetSymbolsAmount(markdownString.length);\r\n\t\t}, [editorState]);\r\n\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={clsx(\r\n\t\t\t\t\tclasses.richEditorWrapper,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t[classes.richEditorWrapperFocus]: focus,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tclassName\r\n\t\t\t\t)}\r\n\t\t\t>\r\n\t\t\t\t<RichTextEditorTools\r\n\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t\t\tclassName={!focus ? classes.toolsUnfocus : undefined}\r\n\t\t\t\t/>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={clsx(classes.richEditorArea, {\r\n\t\t\t\t\t\t[classes.richEditorAreaFocus]: focus,\r\n\t\t\t\t\t})}\r\n\t\t\t\t\tonClick={onClickArea}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Editor\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<span className={classes.amountBar}>\r\n\t\t\t\t\tВсего симолов: {symbolsAmount}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n);\r\n",["72","73"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\toolControls.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\customTheme.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPicker.tsx",["74"],"import { Fade, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { EditorState, RichUtils } from \"draft-js\";\r\nimport React, { ChangeEvent, useCallback, useState } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlinkPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 2,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#fafdff\",\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t\tpadding: 5,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpaddingLeft: 10,\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tinput: {\r\n\t\tborder: 0,\r\n\t\tborderBottom: \"2px solid #0088bb\",\r\n\t\tmarginRight: 10,\r\n\t\tbackground: \"transparent\",\r\n\t\toutline: \"none !important\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 3,\r\n\t},\r\n\tinputError: {\r\n\t\tborderBottom: \"2px solid #ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\nconst CheckIcon = getIcon(\"Check\")!;\r\n\r\ninterface LinkPickerProps {\r\n\t/**\r\n\t * Текущий стейт редактора текстов\r\n\t */\r\n\teditorState: EditorState;\r\n\t/**\r\n\t * Ф-я изменения стейта\r\n\t */\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\t/**\r\n\t * Ф-я, закрывающая интерфейс редактирования ссылки\r\n\t */\r\n\tcloseLinkPicker: () => void;\r\n}\r\n\r\n/**\r\n * Форма добавления ссылки в расширенном редакторе текстов\r\n *\r\n * @param {LinkPickerProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPicker: React.FC<LinkPickerProps> = ({\r\n\tcloseLinkPicker,\r\n\teditorState,\r\n\tsetEditorState,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tlet presetUrl = \"\";\r\n\tconst contentState = editorState.getCurrentContent();\r\n\tconst startKey = editorState.getSelection().getStartKey();\r\n\tconst startOffset = editorState.getSelection().getStartOffset();\r\n\tconst blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\r\n\tconst linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\r\n\r\n\tif (linkKey) {\r\n\t\tconst linkInstance = contentState.getEntity(linkKey);\r\n\t\tpresetUrl = linkInstance.getData().url;\r\n\t}\r\n\r\n\tconst [url, setUrl] = useState<string>(presetUrl);\r\n\tconst [error, setError] = useState<boolean>();\r\n\r\n\tconst onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.value) {\r\n\t\t\tsetError(false);\r\n\t\t}\r\n\t\tsetUrl(e.target.value);\r\n\t}, []);\r\n\r\n\tconst saveUrl = useCallback(\r\n\t\t(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tif (!url) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\tconst contentStateWithEntity = contentState.createEntity(\r\n\t\t\t\t\"LINK\",\r\n\t\t\t\t\"MUTABLE\",\r\n\t\t\t\t{ url }\r\n\t\t\t);\r\n\t\t\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n\t\t\tconst newEditorState = EditorState.set(editorState, {\r\n\t\t\t\tcurrentContent: contentStateWithEntity,\r\n\t\t\t});\r\n\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleLink(\r\n\t\t\t\t\tnewEditorState,\r\n\t\t\t\t\tnewEditorState.getSelection(),\r\n\t\t\t\t\tentityKey\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tcloseLinkPicker();\r\n\t\t},\r\n\t\t[editorState, url]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fade in={true}>\r\n\t\t\t<div className={classes.linkPicker}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Введите URL:\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={url}\r\n\t\t\t\t\tclassName={clsx(classes.input, {\r\n\t\t\t\t\t\t[classes.inputError]: error,\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t\t<IconButton size=\"small\" onMouseDown={saveUrl}>\r\n\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" onClick={closeLinkPicker}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\icons.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comment.tsx",["75"],"import { Fade, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport React, {\r\n\tcreateRef,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { getIcon } from \"../icons\";\r\nimport { getCommentAvatarData } from \"./getCommentAvatar\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcomment: {\r\n\t\tmarginBottom: 25,\r\n\t\t\"&:nth-last-child(1)\": {\r\n\t\t\tmarginBottom: 0,\r\n\t\t},\r\n\t\tposition: \"relative\",\r\n\t\tpaddingLeft: 60,\r\n\r\n\t\t\"&:before\": {\r\n\t\t\tcontent: \"''\",\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: \"calc(100% - 60px)\",\r\n\t\t\theight: 1,\r\n\t\t\tbackground: \"#d4d4d4\",\r\n\t\t\ttop: 10,\r\n\t\t\tzIndex: 1,\r\n\t\t},\r\n\r\n\t\t\"&:after\": {\r\n\t\t\tcontent: \"''\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: 5,\r\n\t\t\theight: 5,\r\n\t\t\tbackground: \"#d4d4d4\",\r\n\t\t\ttop: 8,\r\n\t\t\tleft: 60,\r\n\t\t\tright: \"auto\",\r\n\t\t},\r\n\t},\r\n\tcommentArea: {\r\n\t\tpadding: 10,\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborderRadius: 5,\r\n\t\tboxShadow: \"2px 4px 5px 2px #dcdcdc80\",\r\n\t},\r\n\tauthor: {\r\n\t\tfontWeight: 500,\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n\tdate: {\r\n\t\topacity: 0.8,\r\n\t\tmarginBottom: 10,\r\n\t\tcolor: \"#5d5d5d\",\r\n\t\tfontSize: 13,\r\n\t},\r\n\ttext: {\r\n\t\toverflow: \"hidden\",\r\n\t\tposition: \"relative\",\r\n\t\t\"& p\": {\r\n\t\t\tmarginTop: 0,\r\n\t\t},\r\n\t},\r\n\ttextHidden: {\r\n\t\t\"&:after\": {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tcontent: \"''\",\r\n\t\t\tbackground: \"linear-gradient(to top, #ffffff, transparent)\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: 40,\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tbottom: 0,\r\n\t\t\tzIndex: 1,\r\n\t\t},\r\n\t},\r\n\treadMoreButton: {\r\n\t\tbottom: 0,\r\n\t\tposition: \"absolute\",\r\n\t\tmarginLeft: \"calc(50% - 15px)\",\r\n\t\tzIndex: 2,\r\n\t\ttransition: \"transform .3s ease-in-out, background .2s linear\",\r\n\t\tcolor: \"#252733\",\r\n\t\tbackground: \"rgb(16, 16, 16, 0.1)\",\r\n\t},\r\n\treadMoreButtonClose: {\r\n\t\ttransform: \"rotate(180deg)\",\r\n\t\tposition: \"static\",\r\n\t\tbackground: \"transparent\",\r\n\t},\r\n\tavatar: {\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#636e72\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tborderRadius: \"100%\",\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tfontSize: 20,\r\n\t\tfontWeight: 400,\r\n\t},\r\n\tavatarSelf: {\r\n\t\tborder: \"3px solid #ffffff\",\r\n\r\n\t\t\"&:after\": {\r\n\t\t\tcontent: \"''\",\r\n\t\t\twidth: 14,\r\n\t\t\theight: 14,\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tbottom: -4,\r\n\t\t\tright: 0,\r\n\t\t\tborderRadius: \"100%\",\r\n\t\t\tbackground: \"#03A9F4\",\r\n\t\t\tborder: \"2px solid #ffffff\",\r\n\t\t},\r\n\t},\r\n\tdecision: {\r\n\t\tcolor: \"#636e72\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: 3,\r\n\t\tfontSize: 11,\r\n\t\tmarginLeft: 20,\r\n\t\tmarginBottom: 8,\r\n\t\tborderRadius: 5,\r\n\t\tpaddingLeft: 10,\r\n\t\tpaddingRight: 10,\r\n\t\tposition: \"relative\",\r\n\t\tzIndex: 2,\r\n\t\tbackground: \"#eef2f4\",\r\n\t\tborder: \"1px solid\",\r\n\t},\r\n\tdecisionSuccess: {\r\n\t\tcolor: \"#8BC34A\",\r\n\t\tborder: \"1px solid\",\r\n\t},\r\n\tdecisionError: {\r\n\t\tcolor: \"#f44336\",\r\n\t\tborder: \"1px solid\",\r\n\t},\r\n});\r\n\r\nconst ArrowIcon = getIcon(\"ExpandMore\");\r\n\r\n/**\r\n * Максимальная высота блока с текстом комментария\r\n */\r\nconst maxHeight = 100;\r\n\r\nexport interface CommentProps {\r\n\t/**\r\n\t * Содержимое коментария в формате Markdown\r\n\t */\r\n\ttext: string;\r\n\t/**\r\n\t * Автор\r\n\t */\r\n\tauthor: string;\r\n\t/**\r\n\t * Дата\r\n\t */\r\n\tdate: string;\r\n\t/**\r\n\t * Индекс во внешнем массиве комментариев\r\n\t */\r\n\tindex?: number;\r\n\t/**\r\n\t * Анимировать коммент, если он первый в списке\r\n\t */\r\n\tfirstAnimated?: boolean;\r\n\t/**\r\n\t * Решение\r\n\t */\r\n\tdecision?: {\r\n\t\tsuccess?: boolean;\r\n\t\tlabel: string;\r\n\t};\r\n\t/**\r\n\t * Id текущего пользователя\r\n\t */\r\n\tselfUserId?: number;\r\n\t/**\r\n\t * Пользователь, оставивший коммент\r\n\t */\r\n\tuser: {\r\n\t\tid: number;\r\n\t};\r\n}\r\n\r\n/**\r\n * Компонент для отображения комментария\r\n * - Пакет для рендеринга html из Markdown: [react-markdown](https://www.npmjs.com/package/react-markdown)\r\n *\r\n * @param {CommentProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const SingleComment: React.FC<CommentProps> = React.memo(\r\n\t({\r\n\t\tauthor,\r\n\t\tdate,\r\n\t\ttext,\r\n\t\tindex,\r\n\t\tfirstAnimated,\r\n\t\tdecision,\r\n\t\tselfUserId,\r\n\t\tuser,\r\n\t}: CommentProps) => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst ref = createRef<HTMLDivElement>();\r\n\r\n\t\tconst [hidden, setHidden] = useState<boolean>();\r\n\t\tconst [needReadMoreButton, setNeedReadMoreButton] = useState<boolean>();\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (ref && ref.current) {\r\n\t\t\t\tconst initialHeight = ref.current.getBoundingClientRect()\r\n\t\t\t\t\t.height;\r\n\r\n\t\t\t\tif (hidden === undefined && initialHeight > maxHeight) {\r\n\t\t\t\t\tsetHidden(true);\r\n\t\t\t\t\tsetNeedReadMoreButton(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, []);\r\n\r\n\t\tconst toggleHidden = useCallback(() => setHidden(!hidden), [hidden]);\r\n\r\n\t\tconst height = useMemo(() => {\r\n\t\t\treturn hidden ? maxHeight : undefined;\r\n\t\t}, [hidden]);\r\n\r\n\t\tconst animationTimeout = useMemo(\r\n\t\t\t() => (firstAnimated && index === 0 ? 1000 : 0),\r\n\t\t\t[index, firstAnimated]\r\n\t\t);\r\n\r\n\t\tconst avatar = useMemo(() => getCommentAvatarData(author), [author]);\r\n\r\n\t\treturn (\r\n\t\t\t<Fade in={true} timeout={animationTimeout}>\r\n\t\t\t\t<div className={clsx(classes.comment)}>\r\n\t\t\t\t\t{decision && (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(classes.decision, {\r\n\t\t\t\t\t\t\t\t[classes.decisionSuccess]:\r\n\t\t\t\t\t\t\t\t\tdecision && decision.success,\r\n\t\t\t\t\t\t\t\t[classes.decisionError]:\r\n\t\t\t\t\t\t\t\t\tdecision && decision.success === false,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{decision.label}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={clsx(classes.avatar, {\r\n\t\t\t\t\t\t\t[classes.avatarSelf]: selfUserId === user.id,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tstyle={{ backgroundColor: avatar.color }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{avatar.symbol}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.commentArea}>\r\n\t\t\t\t\t\t<div className={classes.author}>{author}</div>\r\n\t\t\t\t\t\t<div className={classes.date}>{date}</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(classes.text, {\r\n\t\t\t\t\t\t\t\t[classes.textHidden]: hidden,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\tstyle={{ maxHeight: height }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ReactMarkdown>{text}</ReactMarkdown>\r\n\t\t\t\t\t\t\t{needReadMoreButton && (\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tclassName={clsx(classes.readMoreButton, {\r\n\t\t\t\t\t\t\t\t\t\t[classes.readMoreButtonClose]: !hidden,\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleHidden}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{ArrowIcon && <ArrowIcon />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>\r\n\t\t);\r\n\t}\r\n);\r\n","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comments.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\App.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPreview.tsx",["76"],"import { makeStyles } from \"@material-ui/core\";\r\nimport { ContentBlock, ContentState, DraftDecorator } from \"draft-js\";\r\nimport React, { ReactNode } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlink: {\r\n\t\tcolor: \"#0088bb\",\r\n\t\ttextDecoration: \"underline\",\r\n\t},\r\n});\r\n\r\ninterface LinkPreviewProps {\r\n\t/**\r\n\t * Название ссылки\r\n\t */\r\n\tchildren?: ReactNode;\r\n\t/**\r\n\t * Адрес ссылки\r\n\t */\r\n\turl?: string;\r\n\t/**\r\n\t * Стейт расширенного редактора текстов\r\n\t */\r\n\tcontentState: ContentState;\r\n\t/**\r\n\t * Id ссылки\r\n\t */\r\n\tentityKey: string;\r\n}\r\n\r\n/**\r\n * Декоратор для отображения ссылок в расширенном редакторе текстов\r\n *\r\n * @param {LinkPreviewProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPreview: React.FC<LinkPreviewProps> = (props) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { url } = props.contentState.getEntity(props.entityKey).getData();\r\n\r\n\treturn (\r\n\t\t<a className={classes.link} href={url} title={`Ссылка: ${url}`}>\r\n\t\t\t{props.children}\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\n/**\r\n * Ф-я для определения ссылки в стейте Draft.js\r\n *\r\n * @param {ContentBlock} contentBlock - блок с контентом\r\n * @param {Function} callback - callback\r\n * @param {ContentState} contentState - текущий стейт редактора\r\n * @returns {void}\r\n */\r\nexport const findLinkEntities = (\r\n\tcontentBlock: ContentBlock,\r\n\tcallback: (start: number, end: number) => void,\r\n\tcontentState: ContentState\r\n): void =>\r\n\tcontentBlock.findEntityRanges((character) => {\r\n\t\tconst entityKey = character.getEntity();\r\n\t\treturn (\r\n\t\t\tentityKey !== null &&\r\n\t\t\tcontentState.getEntity(entityKey).getType() === \"LINK\"\r\n\t\t);\r\n\t}, callback);\r\n",["77","78"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\index.tsx",[],["79","80"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\decorators.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\generateComment.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\getCommentAvatar.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\draftMarkdown.ts",[],{"ruleId":"81","severity":1,"message":"82","line":6,"column":2,"nodeType":"83","messageId":"84","endLine":6,"endColumn":8},{"ruleId":"85","severity":1,"message":"86","line":128,"column":53,"nodeType":"87","endLine":128,"endColumn":66,"suggestions":"88"},{"ruleId":"85","severity":1,"message":"89","line":149,"column":6,"nodeType":"87","endLine":149,"endColumn":19,"suggestions":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"85","severity":1,"message":"95","line":120,"column":3,"nodeType":"87","endLine":120,"endColumn":21,"suggestions":"96"},{"ruleId":"85","severity":1,"message":"97","line":233,"column":6,"nodeType":"87","endLine":233,"endColumn":8,"suggestions":"98"},{"ruleId":"81","severity":1,"message":"99","line":2,"column":38,"nodeType":"83","messageId":"84","endLine":2,"endColumn":52},{"ruleId":"91","replacedBy":"100"},{"ruleId":"93","replacedBy":"101"},{"ruleId":"91","replacedBy":"102"},{"ruleId":"93","replacedBy":"103"},"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'editorState'. Either exclude it or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["105"],"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"React Hook useCallback has missing dependencies: 'closeLinkPicker' and 'setEditorState'. Either include them or remove the dependency array. If 'setEditorState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["108"],"React Hook useEffect has missing dependencies: 'hidden' and 'ref'. Either include them or remove the dependency array.",["109"],"'DraftDecorator' is defined but never used.",["106"],["107"],["106"],["107"],{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: []",{"range":"118","text":"119"},"Update the dependencies array to be: [editorState, props]",{"range":"120","text":"121"},"Update the dependencies array to be: [closeLinkPicker, editorState, setEditorState, url]",{"range":"122","text":"123"},"Update the dependencies array to be: [hidden, ref]",{"range":"124","text":"125"},[2842,2855],"[]",[3331,3344],"[editorState, props]",[3000,3018],"[closeLinkPicker, editorState, setEditorState, url]",[4492,4494],"[hidden, ref]"]