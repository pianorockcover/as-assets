[{"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\App.tsx":"1","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx":"2","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx":"3","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\icons.ts":"4","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPicker.tsx":"5","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\customTheme.ts":"6","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\generateComment.ts":"7","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\toolControls.ts":"8","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\getCommentAvatar.ts":"9","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comments.tsx":"10","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\decorators.ts":"11","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comment.tsx":"12","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPreview.tsx":"13","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\index.tsx":"14","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\StickerPicker.tsx":"15","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\StickerPreview.tsx":"16","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\decorateStickers.ts":"17","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\CardLayout\\CardLayout.tsx":"18","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\draftMarkdown.ts":"19","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichEditorContext.ts":"20","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\TaskHistory\\TaskHistory.tsx":"21","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\routes.tsx":"22","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\AppGraph.tsx":"23","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Loader.tsx":"24"},{"size":2822,"mtime":1607344868499,"results":"25","hashOfConfig":"26"},{"size":5005,"mtime":1607399495064,"results":"27","hashOfConfig":"26"},{"size":4584,"mtime":1607412296909,"results":"28","hashOfConfig":"26"},{"size":1021,"mtime":1607342001757,"results":"29","hashOfConfig":"26"},{"size":3661,"mtime":1607402328993,"results":"30","hashOfConfig":"26"},{"size":267,"mtime":1606820385801,"results":"31","hashOfConfig":"26"},{"size":746,"mtime":1607059969705,"results":"32","hashOfConfig":"26"},{"size":2037,"mtime":1607344392342,"results":"33","hashOfConfig":"26"},{"size":1631,"mtime":1607060520992,"results":"34","hashOfConfig":"26"},{"size":3758,"mtime":1606975942544,"results":"35","hashOfConfig":"26"},{"size":551,"mtime":1607344419267,"results":"36","hashOfConfig":"26"},{"size":6848,"mtime":1607344452175,"results":"37","hashOfConfig":"26"},{"size":1794,"mtime":1607059513692,"results":"38","hashOfConfig":"26"},{"size":405,"mtime":1607417497853,"results":"39","hashOfConfig":"26"},{"size":5554,"mtime":1607413862165,"results":"40","hashOfConfig":"26"},{"size":3568,"mtime":1607413784448,"results":"41","hashOfConfig":"26"},{"size":672,"mtime":1607344436700,"results":"42","hashOfConfig":"26"},{"size":933,"mtime":1607399062822,"results":"43","hashOfConfig":"26"},{"size":1202,"mtime":1606820385787,"results":"44","hashOfConfig":"26"},{"size":525,"mtime":1607399477930,"results":"45","hashOfConfig":"26"},{"size":2706,"mtime":1607419160937,"results":"46","hashOfConfig":"26"},{"size":441,"mtime":1607418818945,"results":"47","hashOfConfig":"26"},{"size":364,"mtime":1607418451114,"results":"48","hashOfConfig":"26"},{"size":249,"mtime":1607412384779,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15x2xnr",{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\App.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx",["110","111"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, {\r\n\tcreateRef,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\nimport { Editor, EditorState } from \"draft-js\";\r\nimport { RichTextEditorTools } from \"./RichTextEditorTools\";\r\nimport clsx from \"clsx\";\r\nimport { richTextEditorDecorators } from \"./decorators\";\r\nimport {\r\n\tconvertMarkdownToDraft,\r\n\tconvertDraftToMarkdown,\r\n} from \"./draftMarkdown\";\r\nimport { RichEditorContext } from \"./RichEditorContext\";\r\n\r\nconst border = \"1px solid #d2d2d2\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorWrapper: {\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborder,\r\n\t\tmarginBottom: 20,\r\n\t\tposition: \"relative\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingBottom: 22,\r\n\t},\r\n\trichEditorWrapperFocus: {\r\n\t\tborderColor: \"#4dd0e1\",\r\n\t},\r\n\trichEditorArea: {\r\n\t\tpadding: 10,\r\n\t\theight: 200,\r\n\t\toverflowY: \"auto\",\r\n\t\ttransition: \"box-shadow .2s ease-in-out\",\r\n\t},\r\n\trichEditorAreaFocus: {\r\n\t\tboxShadow: \"inset 0px 0px 10px #caefff\",\r\n\t},\r\n\ttoolsUnfocus: {\r\n\t\topacity: 0.95,\r\n\t\ttransition: \"opacity .2s ease-in-out\",\r\n\t},\r\n\tamountBar: {\r\n\t\tposition: \"absolute\",\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\twidth: \"100%\",\r\n\t\ttextAlign: \"right\",\r\n\t\tfontSize: 11,\r\n\t\tbackground: \"#eeeeee\",\r\n\t\tborderTop: \"1px solid #d2d2d2\",\r\n\t\tpadding: 3,\r\n\t\tzIndex: 1,\r\n\t\tcolor: \"#4c4b4b\",\r\n\t},\r\n\tamountBarError: {\r\n\t\tcolor: \"#ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst styleMap = {\r\n\tBOLD: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n\tLINK: {\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n};\r\n\r\nconst defaultMax = 1000;\r\n\r\ninterface RichTextEditorProps {\r\n\t/**\r\n\t * Обработчик изменения текста\r\n\t */\r\n\tonChange: (value: string) => void;\r\n\t/**\r\n\t * Дефолтное значение\r\n\t */\r\n\tdefaultValue?: string;\r\n\t/**\r\n\t * Редактор очищается при изменении этого свойства\r\n\t */\r\n\tforceClean?: number;\r\n\t/**\r\n\t * Подсказка\r\n\t */\r\n\tplaceholder?: string;\r\n\t/**\r\n\t * CSS-класс\r\n\t */\r\n\tclassName?: string;\r\n\t/**\r\n\t * Макс. количество символов\r\n\t */\r\n\tmax?: number;\r\n}\r\n\r\n/**\r\n * Расширенный редактор текста. Экспортирует строку в формате Markdown.\r\n * - Фреймворк для создания редактора: [Draft.js](https://draftjs.org/)\r\n * - Конвертер стейта Draft.js в Markdown: [markdown-draft-js](https://www.npmjs.com/package/markdown-draft-js)\r\n *\r\n * @param {RichTextEditorProps} props - св-ва компонента\r\n * @returns {JSX.Element}\r\n */\r\nexport const RichTextEditor: React.FC<RichTextEditorProps> = React.memo(\r\n\t({\r\n\t\tdefaultValue,\r\n\t\tforceClean,\r\n\t\tplaceholder,\r\n\t\tclassName,\r\n\t\t...props\r\n\t}: RichTextEditorProps): JSX.Element => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst [editorState, setEditorState] = useState(\r\n\t\t\tEditorState.createWithContent(\r\n\t\t\t\tconvertMarkdownToDraft(defaultValue),\r\n\t\t\t\trichTextEditorDecorators\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tconst max = useMemo(() => props.max || defaultMax, [props.max]);\r\n\r\n\t\tconst [symbolsLeft, setSymbolsLeft] = useState<number>(max);\r\n\r\n\t\tconst onChange = useCallback(\r\n\t\t\t(nextEditorState: EditorState) => setEditorState(nextEditorState),\r\n\t\t\t[]\r\n\t\t);\r\n\r\n\t\tconst ref = createRef<any>();\r\n\t\tconst [focus, setFocus] = useState<boolean>();\r\n\r\n\t\tconst onBlur = useCallback(() => setFocus(false), [editorState]);\r\n\r\n\t\tconst onClickArea = useCallback(() => {\r\n\t\t\tif (ref && ref.current) {\r\n\t\t\t\tref.current.focus();\r\n\t\t\t\tsetFocus(true);\r\n\t\t\t}\r\n\t\t}, [ref]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (forceClean) {\r\n\t\t\t\tsetEditorState(\r\n\t\t\t\t\tEditorState.createEmpty(richTextEditorDecorators)\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}, [forceClean]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tconst markdownString = convertDraftToMarkdown(editorState);\r\n\t\t\tprops.onChange(markdownString);\r\n\t\t\tsetSymbolsLeft(max - markdownString.length);\r\n\t\t}, [editorState]);\r\n\r\n\t\tconst editorContextValue = useMemo(\r\n\t\t\t() => ({\r\n\t\t\t\teditorState,\r\n\t\t\t\tsetEditorState,\r\n\t\t\t}),\r\n\t\t\t[editorState]\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<RichEditorContext.Provider value={editorContextValue}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\tclasses.richEditorWrapper,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t[classes.richEditorWrapperFocus]: focus,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclassName\r\n\t\t\t\t\t)}\r\n\t\t\t\t>\r\n\t\t\t\t\t<RichTextEditorTools\r\n\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\tsetEditorState={setEditorState}\r\n\t\t\t\t\t\tclassName={!focus ? classes.toolsUnfocus : undefined}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={clsx(classes.richEditorArea, {\r\n\t\t\t\t\t\t\t[classes.richEditorAreaFocus]: focus,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tonClick={onClickArea}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={clsx(classes.amountBar, {\r\n\t\t\t\t\t\t\t[classes.amountBarError]: symbolsLeft <= 0,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tОсталось симолов: {symbolsLeft}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</RichEditorContext.Provider>\r\n\t\t);\r\n\t}\r\n);\r\n",["112","113"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\icons.ts",[],["114","115"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPicker.tsx",["116"],"import { Fade, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { EditorState, RichUtils } from \"draft-js\";\r\nimport React, { ChangeEvent, useCallback, useState } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlinkPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 3,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#fafdff\",\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t\tpadding: 5,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"flex-start\",\r\n\t\tpaddingLeft: 10,\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tinput: {\r\n\t\tborder: 0,\r\n\t\tborderBottom: \"2px solid #0088bb\",\r\n\t\tmarginRight: 10,\r\n\t\tbackground: \"transparent\",\r\n\t\toutline: \"none !important\",\r\n\t\ttransition: \"border .2s ease-in-out\",\r\n\t\tpaddingTop: 3,\r\n\t\tpaddingBottom: 3,\r\n\t},\r\n\tinputError: {\r\n\t\tborderBottom: \"2px solid #ee1d1d\",\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\nconst CheckIcon = getIcon(\"Check\")!;\r\n\r\ninterface LinkPickerProps {\r\n\t/**\r\n\t * Текущий стейт редактора текстов\r\n\t */\r\n\teditorState: EditorState;\r\n\t/**\r\n\t * Ф-я изменения стейта\r\n\t */\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\t/**\r\n\t * Ф-я, закрывающая интерфейс редактирования ссылки\r\n\t */\r\n\tcloseLinkPicker: () => void;\r\n}\r\n\r\n/**\r\n * Форма добавления ссылки в расширенном редакторе текстов\r\n *\r\n * @param {LinkPickerProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPicker: React.FC<LinkPickerProps> = ({\r\n\tcloseLinkPicker,\r\n\teditorState,\r\n\tsetEditorState,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tlet presetUrl = \"\";\r\n\tconst contentState = editorState.getCurrentContent();\r\n\tconst startKey = editorState.getSelection().getStartKey();\r\n\tconst startOffset = editorState.getSelection().getStartOffset();\r\n\tconst blockWithLinkAtBeginning = contentState.getBlockForKey(startKey);\r\n\tconst linkKey = blockWithLinkAtBeginning.getEntityAt(startOffset);\r\n\r\n\tif (linkKey) {\r\n\t\tconst linkInstance = contentState.getEntity(linkKey);\r\n\t\tpresetUrl = linkInstance.getData().url;\r\n\t}\r\n\r\n\tconst [url, setUrl] = useState<string>(presetUrl);\r\n\tconst [error, setError] = useState<boolean>();\r\n\r\n\tconst onChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (e.target.value) {\r\n\t\t\tsetError(false);\r\n\t\t}\r\n\t\tsetUrl(e.target.value);\r\n\t}, []);\r\n\r\n\tconst saveUrl = useCallback(\r\n\t\t(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\tif (!url) {\r\n\t\t\t\tsetError(true);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\tconst contentStateWithEntity = contentState.createEntity(\r\n\t\t\t\t\"LINK\",\r\n\t\t\t\t\"MUTABLE\",\r\n\t\t\t\t{ url }\r\n\t\t\t);\r\n\t\t\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n\t\t\tconst newEditorState = EditorState.set(editorState, {\r\n\t\t\t\tcurrentContent: contentStateWithEntity,\r\n\t\t\t});\r\n\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleLink(\r\n\t\t\t\t\tnewEditorState,\r\n\t\t\t\t\tnewEditorState.getSelection(),\r\n\t\t\t\t\tentityKey\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tcloseLinkPicker();\r\n\t\t},\r\n\t\t[editorState, url]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fade in={true}>\r\n\t\t\t<div className={classes.linkPicker}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Введите URL:\"\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tvalue={url}\r\n\t\t\t\t\tclassName={clsx(classes.input, {\r\n\t\t\t\t\t\t[classes.inputError]: error,\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t\t<IconButton size=\"small\" onMouseDown={saveUrl}>\r\n\t\t\t\t\t<CheckIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" onClick={closeLinkPicker}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n",["117","118"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\customTheme.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\generateComment.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\toolControls.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\getCommentAvatar.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comments.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\decorators.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\Comment.tsx",["119"],"import { Fade, IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport React, {\r\n\tcreateRef,\r\n\tuseCallback,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseState,\r\n} from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { getIcon } from \"../icons\";\r\nimport { decorateStickers } from \"./decorateStickers\";\r\nimport { getCommentAvatarData } from \"./getCommentAvatar\";\r\n\r\nconst useStyles = makeStyles({\r\n\tcomment: {\r\n\t\tmarginBottom: 25,\r\n\t\t\"&:nth-last-child(1)\": {\r\n\t\t\tmarginBottom: 0,\r\n\t\t},\r\n\t\tposition: \"relative\",\r\n\t\tpaddingLeft: 60,\r\n\r\n\t\t\"&:before\": {\r\n\t\t\tcontent: \"''\",\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: \"calc(100% - 60px)\",\r\n\t\t\theight: 1,\r\n\t\t\tbackground: \"#d4d4d4\",\r\n\t\t\ttop: 10,\r\n\t\t\tzIndex: 1,\r\n\t\t},\r\n\r\n\t\t\"&:after\": {\r\n\t\t\tcontent: \"''\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\twidth: 5,\r\n\t\t\theight: 5,\r\n\t\t\tbackground: \"#d4d4d4\",\r\n\t\t\ttop: 8,\r\n\t\t\tleft: 60,\r\n\t\t\tright: \"auto\",\r\n\t\t},\r\n\t},\r\n\tcommentArea: {\r\n\t\tpadding: 10,\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborderRadius: 5,\r\n\t\tboxShadow: \"2px 4px 5px 2px #dcdcdc80\",\r\n\t},\r\n\tauthor: {\r\n\t\tfontWeight: 500,\r\n\t\tcolor: \"#0088bb\",\r\n\t},\r\n\tdate: {\r\n\t\topacity: 0.8,\r\n\t\tmarginBottom: 10,\r\n\t\tcolor: \"#5d5d5d\",\r\n\t\tfontSize: 13,\r\n\t},\r\n\ttext: {\r\n\t\toverflow: \"hidden\",\r\n\t\tposition: \"relative\",\r\n\t\t\"& p\": {\r\n\t\t\tmarginTop: 0,\r\n\t\t},\r\n\t},\r\n\ttextHidden: {\r\n\t\t\"&:after\": {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tcontent: \"''\",\r\n\t\t\tbackground: \"linear-gradient(to top, #ffffff, transparent)\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\theight: 40,\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tbottom: 0,\r\n\t\t\tzIndex: 1,\r\n\t\t},\r\n\t},\r\n\treadMoreButton: {\r\n\t\tbottom: 0,\r\n\t\tposition: \"absolute\",\r\n\t\tmarginLeft: \"calc(50% - 15px)\",\r\n\t\tzIndex: 2,\r\n\t\ttransition: \"transform .3s ease-in-out, background .2s linear\",\r\n\t\tcolor: \"#252733\",\r\n\t\tbackground: \"rgb(16, 16, 16, 0.1)\",\r\n\t},\r\n\treadMoreButtonClose: {\r\n\t\ttransform: \"rotate(180deg)\",\r\n\t\tposition: \"static\",\r\n\t\tbackground: \"transparent\",\r\n\t},\r\n\tavatar: {\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#636e72\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\twidth: 50,\r\n\t\theight: 50,\r\n\t\tborderRadius: \"100%\",\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tfontSize: 20,\r\n\t\tfontWeight: 400,\r\n\t},\r\n\tavatarSelf: {\r\n\t\tborder: \"3px solid #ffffff\",\r\n\r\n\t\t\"&:after\": {\r\n\t\t\tcontent: \"''\",\r\n\t\t\twidth: 14,\r\n\t\t\theight: 14,\r\n\t\t\tdisplay: \"block\",\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tbottom: -4,\r\n\t\t\tright: 0,\r\n\t\t\tborderRadius: \"100%\",\r\n\t\t\tbackground: \"#03A9F4\",\r\n\t\t\tborder: \"2px solid #ffffff\",\r\n\t\t},\r\n\t},\r\n\tdecision: {\r\n\t\tcolor: \"#636e72\",\r\n\t\twidth: \"fit-content\",\r\n\t\tpadding: 3,\r\n\t\tfontSize: 11,\r\n\t\tmarginLeft: 20,\r\n\t\tmarginBottom: 8,\r\n\t\tborderRadius: 5,\r\n\t\tpaddingLeft: 10,\r\n\t\tpaddingRight: 10,\r\n\t\tposition: \"relative\",\r\n\t\tzIndex: 2,\r\n\t\tbackground: \"#eef2f4\",\r\n\t\tborder: \"1px solid\",\r\n\t},\r\n\tdecisionSuccess: {\r\n\t\tcolor: \"#8BC34A\",\r\n\t\tborder: \"1px solid\",\r\n\t},\r\n\tdecisionError: {\r\n\t\tcolor: \"#f44336\",\r\n\t\tborder: \"1px solid\",\r\n\t},\r\n});\r\n\r\nconst ArrowIcon = getIcon(\"ExpandMore\");\r\n\r\n/**\r\n * Максимальная высота блока с текстом комментария\r\n */\r\nconst maxHeight = 120;\r\n\r\nexport interface CommentProps {\r\n\t/**\r\n\t * Содержимое коментария в формате Markdown\r\n\t */\r\n\ttext: string;\r\n\t/**\r\n\t * Дата\r\n\t */\r\n\tdate: string;\r\n\t/**\r\n\t * Индекс во внешнем массиве комментариев\r\n\t */\r\n\tindex?: number;\r\n\t/**\r\n\t * Анимировать коммент, если он первый в списке\r\n\t */\r\n\tfirstAnimated?: boolean;\r\n\t/**\r\n\t * Решение\r\n\t */\r\n\tdecision?: {\r\n\t\t/**\r\n\t\t * Успех/неуспех\r\n\t\t */\r\n\t\tsuccess?: boolean;\r\n\t\t/**\r\n\t\t * Текст решения\r\n\t\t */\r\n\t\tlabel: string;\r\n\t};\r\n\t/**\r\n\t * Id текущего пользователя\r\n\t */\r\n\tselfUserId?: number;\r\n\t/**\r\n\t * Пользователь, оставивший коммент\r\n\t */\r\n\tuser: {\r\n\t\t/**\r\n\t\t * Id\r\n\t\t */\r\n\t\tid: number;\r\n\t\t/**\r\n\t\t * Имя\r\n\t\t */\r\n\t\tname: string;\r\n\t};\r\n}\r\n\r\n/**\r\n * Компонент для отображения комментария\r\n * - Пакет для рендеринга html из Markdown: [react-markdown](https://www.npmjs.com/package/react-markdown)\r\n *\r\n * @param {CommentProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const SingleComment: React.FC<CommentProps> = React.memo(\r\n\t({\r\n\t\tdate,\r\n\t\ttext,\r\n\t\tindex,\r\n\t\tfirstAnimated,\r\n\t\tdecision,\r\n\t\tselfUserId,\r\n\t\tuser,\r\n\t}: CommentProps) => {\r\n\t\tconst classes = useStyles();\r\n\r\n\t\tconst ref = createRef<HTMLDivElement>();\r\n\r\n\t\tconst [hidden, setHidden] = useState<boolean>();\r\n\t\tconst [needReadMoreButton, setNeedReadMoreButton] = useState<boolean>();\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tif (ref && ref.current) {\r\n\t\t\t\tconst initialHeight = ref.current.getBoundingClientRect()\r\n\t\t\t\t\t.height;\r\n\r\n\t\t\t\tif (hidden === undefined && initialHeight > maxHeight) {\r\n\t\t\t\t\tsetHidden(true);\r\n\t\t\t\t\tsetNeedReadMoreButton(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, []);\r\n\r\n\t\tconst toggleHidden = useCallback(() => setHidden(!hidden), [hidden]);\r\n\r\n\t\tconst height = useMemo(() => {\r\n\t\t\treturn hidden ? maxHeight : undefined;\r\n\t\t}, [hidden]);\r\n\r\n\t\tconst animationTimeout = useMemo(\r\n\t\t\t() => (firstAnimated && index === 0 ? 1000 : 0),\r\n\t\t\t[index, firstAnimated]\r\n\t\t);\r\n\r\n\t\tconst avatar = useMemo(() => getCommentAvatarData(user.name), [\r\n\t\t\tuser.name,\r\n\t\t]);\r\n\r\n        // ***TODO: Just for fun! Remove in production!***\r\n\t\tconst decoratedText = useMemo(() => decorateStickers(text), [text]);\r\n\r\n\t\treturn (\r\n\t\t\t<Fade in={true} timeout={animationTimeout}>\r\n\t\t\t\t<div className={clsx(classes.comment)}>\r\n\t\t\t\t\t{decision && (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(classes.decision, {\r\n\t\t\t\t\t\t\t\t[classes.decisionSuccess]:\r\n\t\t\t\t\t\t\t\t\tdecision && decision.success,\r\n\t\t\t\t\t\t\t\t[classes.decisionError]:\r\n\t\t\t\t\t\t\t\t\tdecision && decision.success === false,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{decision.label}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={clsx(classes.avatar, {\r\n\t\t\t\t\t\t\t[classes.avatarSelf]: selfUserId === user.id,\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\tstyle={{ backgroundColor: avatar.color }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{avatar.symbol}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.commentArea}>\r\n\t\t\t\t\t\t<div className={classes.author}>{user.name}</div>\r\n\t\t\t\t\t\t<div className={classes.date}>{date}</div>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName={clsx(classes.text, {\r\n\t\t\t\t\t\t\t\t[classes.textHidden]: hidden,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\tstyle={{ maxHeight: height }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ReactMarkdown escapeHtml={false}>\r\n\t\t\t\t\t\t\t\t{decoratedText}\r\n\t\t\t\t\t\t\t</ReactMarkdown>\r\n\t\t\t\t\t\t\t{needReadMoreButton && (\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\t\tclassName={clsx(classes.readMoreButton, {\r\n\t\t\t\t\t\t\t\t\t\t[classes.readMoreButtonClose]: !hidden,\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\tonClick={toggleHidden}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{ArrowIcon && <ArrowIcon />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Fade>\r\n\t\t);\r\n\t}\r\n);\r\n","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\LinkPreview.tsx",["120"],"import { makeStyles } from \"@material-ui/core\";\r\nimport { ContentBlock, ContentState, DraftDecorator } from \"draft-js\";\r\nimport React, { ReactNode } from \"react\";\r\n\r\nconst useStyles = makeStyles({\r\n\tlink: {\r\n\t\tcolor: \"#0088bb\",\r\n\t\ttextDecoration: \"underline\",\r\n\t},\r\n});\r\n\r\ninterface LinkPreviewProps {\r\n\t/**\r\n\t * Название ссылки\r\n\t */\r\n\tchildren?: ReactNode;\r\n\t/**\r\n\t * Адрес ссылки\r\n\t */\r\n\turl?: string;\r\n\t/**\r\n\t * Стейт расширенного редактора текстов\r\n\t */\r\n\tcontentState: ContentState;\r\n\t/**\r\n\t * Id ссылки\r\n\t */\r\n\tentityKey: string;\r\n}\r\n\r\n/**\r\n * Декоратор для отображения ссылок в расширенном редакторе текстов\r\n *\r\n * @param {LinkPreviewProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const LinkPreview: React.FC<LinkPreviewProps> = (props) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { url } = props.contentState.getEntity(props.entityKey).getData();\r\n\r\n\treturn (\r\n\t\t<a className={classes.link} href={url} title={`Ссылка: ${url}`}>\r\n\t\t\t{props.children}\r\n\t\t</a>\r\n\t);\r\n};\r\n\r\n/**\r\n * Ф-я для определения ссылки в стейте Draft.js\r\n *\r\n * @param {ContentBlock} contentBlock - блок с контентом\r\n * @param {Function} callback - callback\r\n * @param {ContentState} contentState - текущий стейт редактора\r\n * @returns {void}\r\n */\r\nexport const findLinkEntities = (\r\n\tcontentBlock: ContentBlock,\r\n\tcallback: (start: number, end: number) => void,\r\n\tcontentState: ContentState\r\n): void =>\r\n\tcontentBlock.findEntityRanges((character) => {\r\n\t\tconst entityKey = character.getEntity();\r\n\t\treturn (\r\n\t\t\tentityKey !== null &&\r\n\t\t\tcontentState.getEntity(entityKey).getType() === \"LINK\"\r\n\t\t);\r\n\t}, callback);\r\n","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\index.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\StickerPicker.tsx",["121","122"],"import { Fade, IconButton, makeStyles } from \"@material-ui/core\";\r\nimport {\r\n\tContentBlock,\r\n\tContentState,\r\n\tEditorState,\r\n\tRichUtils,\r\n\tSelectionState,\r\n} from \"draft-js\";\r\nimport React, { useCallback } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\nimport { Loader } from \"../Loader\";\r\n\r\nconst useStyles = makeStyles({\r\n\tstickerPicker: {\r\n\t\ttop: 33,\r\n\t\tleft: 0,\r\n\t\tzIndex: 3,\r\n\t\tposition: \"absolute\",\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborderBottom: \"1px solid #d2d2d2\",\r\n\t\tboxShadow: \"1px 1px 4px 0px #e4e1e1\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"calc(100% - 100px)\",\r\n\t\toverflow: \"auto\",\r\n\t},\r\n\tsticker: {\r\n\t\tdisplay: \"inline-block\",\r\n\t\twidth: 60,\r\n\t\tposition: \"relative\",\r\n\t\tzIndex: 2,\r\n\t\tcursor: \"pointer\",\r\n\t\tverticalAlign: \"middle\",\r\n\t\ttransition: \"saturate .3s ease-in-out\",\r\n\t\t\"&:hover\": {\r\n\t\t\tfilter: \"saturate(300%)\",\r\n\t\t},\r\n\t},\r\n\tclose: {\r\n\t\tposition: \"absolute\",\r\n\t\tright: 10,\r\n        top: 10,\r\n        zIndex: 3,\r\n\t},\r\n\tloader: {\r\n\t\tposition: \"absolute\",\r\n\t\tzIndex: 1,\r\n\t\twidth: 100,\r\n\t\ttop: 70,\r\n\t\tleft: \"calc(50% - 50px)\",\r\n\t},\r\n});\r\n\r\nconst genKey = (length = 10) => {\r\n\tlet result = \"\";\r\n\tconst characters =\r\n\t\t\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\tconst charactersLength = characters.length;\r\n\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tresult += characters.charAt(\r\n\t\t\tMath.floor(Math.random() * charactersLength)\r\n\t\t);\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\nexport const stickersPath = \"/as-assets/build/stickers/\";\r\nconst stickersAmount = 28;\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\n\r\ninterface StickerPickerProps {\r\n\t/**\r\n\t * Текущий стейт редактора текстов\r\n\t */\r\n\teditorState: EditorState;\r\n\t/**\r\n\t * Ф-я изменения стейта\r\n\t */\r\n\tsetEditorState: (editorState: EditorState) => void;\r\n\t/**\r\n\t * Ф-я, закрывающая интерфейс выбора стикера\r\n\t */\r\n\tcloseStickerPicker: () => void;\r\n}\r\n\r\n/**\r\n * Форма добавления стикера в расширенном редакторе текстов\r\n *\r\n * ***TODO: Just for fun! Remove in production!***\r\n *\r\n * @param {StickerPickerProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const StickerPicker: React.FC<StickerPickerProps> = ({\r\n\tcloseStickerPicker,\r\n\teditorState,\r\n\tsetEditorState,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst addSticker = useCallback(\r\n\t\t(type: number) => (\r\n\t\t\te: React.MouseEvent<HTMLImageElement, MouseEvent>\r\n\t\t) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tconst linkText = ` sticker:${type} `;\r\n\r\n\t\t\tconst selectionState = editorState.getSelection();\r\n\t\t\tconst contentState = editorState.getCurrentContent();\r\n\t\t\tconst currentBlock = contentState.getBlockForKey(\r\n\t\t\t\tselectionState.getStartKey()\r\n\t\t\t);\r\n\t\t\tconst currentBlockKey = currentBlock.getKey();\r\n            const blockMap = contentState.getBlockMap();\r\n            \r\n\t\t\tconst blocksBefore = blockMap\r\n\t\t\t\t.toSeq()\r\n                .takeUntil((v) => v === currentBlock);\r\n                \r\n\t\t\tconst blocksAfter = blockMap\r\n\t\t\t\t.toSeq()\r\n\t\t\t\t.skipUntil((v) => v === currentBlock)\r\n                .rest();\r\n                \r\n\t\t\tconst newBlockKey = genKey();\r\n\r\n\t\t\tconst newBlock = new ContentBlock({\r\n\t\t\t\tkey: newBlockKey,\r\n\t\t\t\ttype: \"unstyled\",\r\n\t\t\t\ttext: linkText,\r\n\t\t\t});\r\n\r\n\t\t\tconst newBlockMap = blocksBefore\r\n\t\t\t\t.concat(\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t[currentBlockKey, currentBlock],\r\n\t\t\t\t\t\t[newBlockKey, newBlock],\r\n\t\t\t\t\t],\r\n\t\t\t\t\tblocksAfter\r\n\t\t\t\t)\r\n\t\t\t\t.toOrderedMap();\r\n\r\n\t\t\tconst selection = editorState.getSelection();\r\n\r\n\t\t\tconst newContent = contentState.merge({\r\n\t\t\t\tblockMap: newBlockMap,\r\n\t\t\t\tselectionBefore: selection,\r\n\t\t\t\tselectionAfter: selection.merge({\r\n\t\t\t\t\tanchorKey: newBlockKey,\r\n\t\t\t\t\tanchorOffset: 0,\r\n\t\t\t\t\tfocusKey: newBlockKey,\r\n\t\t\t\t\tfocusOffset: 0,\r\n\t\t\t\t\tisBackward: false,\r\n\t\t\t\t}),\r\n\t\t\t}) as ContentState;\r\n\r\n\t\t\tlet newEditorState = EditorState.push(\r\n\t\t\t\teditorState,\r\n\t\t\t\tnewContent,\r\n\t\t\t\t\"split-block\"\r\n\t\t\t);\r\n\r\n\t\t\tlet newSelection = new SelectionState({\r\n\t\t\t\tanchorKey: newBlockKey,\r\n\t\t\t\tanchorOffset: 0,\r\n\t\t\t\tfocusKey: newBlockKey,\r\n\t\t\t\tfocusOffset: linkText.length,\r\n\t\t\t});\r\n\r\n\t\t\tnewEditorState = EditorState.forceSelection(\r\n\t\t\t\tnewEditorState,\r\n\t\t\t\tnewSelection\r\n\t\t\t);\r\n\r\n\t\t\tconst newContentState = newEditorState.getCurrentContent();\r\n\r\n\t\t\tconst contentStateWithEntity = newContentState.createEntity(\r\n\t\t\t\t\"STICKER\",\r\n\t\t\t\t\"IMMUTABLE\",\r\n\t\t\t\t{ type, blockKey: newBlockKey }\r\n\t\t\t);\r\n\r\n\t\t\tconst entityKey = contentStateWithEntity.getLastCreatedEntityKey();\r\n\t\t\tnewEditorState = EditorState.set(newEditorState, {\r\n\t\t\t\tcurrentContent: contentStateWithEntity,\r\n\t\t\t});\r\n\r\n\t\t\tnewEditorState = RichUtils.toggleLink(\r\n\t\t\t\tnewEditorState,\r\n\t\t\t\tnewEditorState.getSelection(),\r\n\t\t\t\tentityKey\r\n\t\t\t);\r\n\r\n\t\t\tnewSelection = new SelectionState({\r\n\t\t\t\tanchorKey: newBlockKey,\r\n\t\t\t\tanchorOffset: linkText.length,\r\n\t\t\t\tfocusKey: newBlockKey,\r\n\t\t\t\tfocusOffset: linkText.length,\r\n\t\t\t});\r\n\r\n\t\t\tnewEditorState = EditorState.forceSelection(\r\n\t\t\t\tnewEditorState,\r\n\t\t\t\tnewSelection\r\n\t\t\t);\r\n\r\n\t\t\tsetEditorState(newEditorState);\r\n\t\t\tcloseStickerPicker();\r\n\t\t},\r\n\t\t[editorState]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Fade in={true}>\r\n\t\t\t<div className={classes.stickerPicker}>\r\n\t\t\t\t<Loader className={classes.loader} />\r\n\t\t\t\t{new Array(stickersAmount).fill(null).map((_, i) => (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={`${stickersPath}${i + 1}.gif`}\r\n\t\t\t\t\t\tonClick={addSticker(i + 1)}\r\n\t\t\t\t\t\tclassName={classes.sticker}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tclassName={classes.close}\r\n\t\t\t\t\tonClick={closeStickerPicker}\r\n\t\t\t\t>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t</Fade>\r\n\t);\r\n};\r\n","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\StickerPreview.tsx",["123","124"],"import { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n\tContentBlock,\r\n\tContentState,\r\n\tEditorState,\r\n\tModifier,\r\n\tSelectionState,\r\n} from \"draft-js\";\r\nimport React, { useCallback, useContext } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\nimport { RichEditorContext } from \"./RichEditorContext\";\r\nimport { stickersPath } from \"./StickerPicker\";\r\n\r\nconst useStyles = makeStyles({\r\n\tstickerWrapper: {\r\n\t\tposition: \"relative\",\r\n\t\tzIndex: 2,\r\n\t\twidth: 100,\r\n\t},\r\n\tsticker: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n\tclose: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 0,\r\n\t\tright: 0,\r\n\t\tzIndex: 2,\r\n\t\tfontSize: 10,\r\n\t\tcursor: \"pointer\",\r\n\t\tdisplay: \"block\",\r\n\t\topacity: 0.7,\r\n\t\ttransition: \"opacity .2s linear\",\r\n\t\t\"&:hover\": {\r\n\t\t\topacity: 1,\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\")!;\r\n\r\ninterface StickerPreviewProps {\r\n\t/**\r\n\t * Номер стикера\r\n\t */\r\n\ttype: number;\r\n\t/**\r\n\t * Стейт расширенного редактора текстов\r\n\t */\r\n\tcontentState: ContentState;\r\n\t/**\r\n\t * Id объекта в редакторе\r\n\t */\r\n\tentityKey: string;\r\n}\r\n\r\n/**\r\n * Декоратор для отображения стикеров в расширенном редакторе текстов\r\n *\r\n * ***TODO: Just for fun! Remove in production!***\r\n *\r\n * @param {StickerPreviewProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const StickerPreview: React.FC<StickerPreviewProps> = ({\r\n\tcontentState,\r\n\tentityKey,\r\n}) => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst { editorState, setEditorState } = useContext(RichEditorContext);\r\n\r\n\tconst { type, blockKey } = contentState.getEntity(entityKey).getData();\r\n\r\n\tconst onRemove = useCallback(() => {\r\n\t\tif (editorState && entityKey && setEditorState) {\r\n\t\t\ttry {\r\n\t\t\t\tconst block = contentState.getBlockForKey(blockKey);\r\n\r\n\t\t\t\tconst targetRange = new SelectionState({\r\n\t\t\t\t\tanchorKey: blockKey,\r\n\t\t\t\t\tanchorOffset: 0,\r\n\t\t\t\t\tfocusKey: blockKey,\r\n\t\t\t\t\tfocusOffset: block.getLength(),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst withoutTeX = Modifier.removeRange(\r\n\t\t\t\t\tcontentState,\r\n\t\t\t\t\ttargetRange,\r\n\t\t\t\t\t\"backward\"\r\n\t\t\t\t);\r\n\t\t\t\tconst resetBlock = Modifier.setBlockType(\r\n\t\t\t\t\twithoutTeX,\r\n\t\t\t\t\twithoutTeX.getSelectionAfter(),\r\n\t\t\t\t\t\"unstyled\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst newState = EditorState.push(\r\n\t\t\t\t\teditorState,\r\n\t\t\t\t\tresetBlock,\r\n\t\t\t\t\t\"remove-range\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetEditorState(\r\n\t\t\t\t\tEditorState.forceSelection(\r\n\t\t\t\t\t\tnewState,\r\n\t\t\t\t\t\tresetBlock.getSelectionAfter()\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(\"Can't remove sticker\", e);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [entityKey, editorState, blockKey, setEditorState]);\r\n\r\n\treturn (\r\n\t\t<div className={classes.stickerWrapper}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={`${stickersPath}${type}.gif`}\r\n\t\t\t\tclassName={classes.sticker}\r\n\t\t\t/>\r\n\t\t\t<span className={classes.close} onClick={onRemove}>\r\n\t\t\t\t<CloseIcon />\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n/**\r\n * Ф-я для определения стикера в стейте Draft.js\r\n *\r\n * ***TODO: Just for fun! Remove in production!***\r\n *\r\n * @param {ContentBlock} contentBlock - блок с контентом\r\n * @param {Function} callback - callback\r\n * @param {ContentState} contentState - текущий стейт редактора\r\n * @returns {void}\r\n */\r\nexport const findStickerEntities = (\r\n\tcontentBlock: ContentBlock,\r\n\tcallback: (start: number, end: number) => void,\r\n\tcontentState: ContentState\r\n): void =>\r\n\tcontentBlock.findEntityRanges((character) => {\r\n\t\tconst entityKey = character.getEntity();\r\n\t\treturn (\r\n\t\t\tentityKey !== null &&\r\n\t\t\tcontentState.getEntity(entityKey).getType() === \"STICKER\"\r\n\t\t);\r\n\t}, callback);\r\n","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Comments\\decorateStickers.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\CardLayout\\CardLayout.tsx",["125"],"// import { IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { getIcon } from \"../icons\";\r\n\r\nconst useStyles = makeStyles({\r\n\tshadow: {},\r\n\tcardLayoutWrapper: {\r\n\t\tmargin: \"0 auto\",\r\n\t\tmaxWidth: 800,\r\n\t\tminHeight: \"100vh\",\r\n\t\tpadding: 10,\r\n\t\tpaddingLeft: 20,\r\n\t\tpaddingRight: 20,\r\n\t\tbackground: \"#eef2f4\",\r\n\t},\r\n\tcardLayout: {},\r\n\tclose: {},\r\n\tcloseIcon: {},\r\n});\r\n\r\nconst CloseIcon = getIcon(\"Close\");\r\n\r\n// TODO: доделать\r\nexport const CardLayout: React.FC = ({ children }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className={classes.cardLayoutWrapper}>\r\n\t\t\t{/* <div className={classes.close}>\r\n\t\t\t\t<IconButton size=\"small\" className={classes.closeIcon}>\r\n\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div> */}\r\n\t\t\t<div className={classes.shadow} />\r\n\t\t\t<div className={classes.cardLayout}>{children}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n",["126","127"],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\draftMarkdown.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\RichTextEditor\\RichEditorContext.ts",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\TaskHistory\\TaskHistory.tsx",["128"],"import { makeStyles, SvgIconTypeMap } from \"@material-ui/core\";\r\nimport { OverridableComponent } from \"@material-ui/core/OverridableComponent\";\r\nimport clsx from \"clsx\";\r\nimport React, { useMemo } from \"react\";\r\nimport { getIcon } from \"../icons\";\r\nimport { TaskHistoryBlockInfo } from \"./interface\";\r\n\r\nconst useStyles = makeStyles({\r\n\ttaskHistoryWrapper: {},\r\n\ttaskHistory: {\r\n\t\tpadding: 30,\r\n\t\tborder: \"1px solid #d2d2d2\",\r\n\t\tborderRight: 0,\r\n\t\tposition: \"relative\",\r\n\t\t\"&:not(:nth-child(1))\": {\r\n\t\t\tmarginTop: -1,\r\n\t\t},\r\n\t},\r\n\ttaskHistoryBlock: {},\r\n\tdate: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: -10,\r\n\t\twidth: 100,\r\n\t\ttextAlign: \"center\",\r\n\t\tbackground: \"#cacaca\",\r\n\t\tcolor: \"#ffffff\",\r\n\t\tpadding: 3,\r\n\t\tborderRadius: 7,\r\n\t\tleft: \"calc(50% - 50px)\",\r\n\t},\r\n\ticon: {},\r\n\tsuccess: {},\r\n\twarnin: {},\r\n\tinfo: {},\r\n\terror: {},\r\n\tdecision: {},\r\n});\r\n\r\nconst icons: {\r\n\t[key: string]: OverridableComponent<SvgIconTypeMap<{}, \"svg\">>;\r\n} = {\r\n\tinfo: getIcon(\"Info\"),\r\n\twarning: getIcon(\"Warning\"),\r\n\terror: getIcon(\"Error\"),\r\n\tsuccess: getIcon(\"CheckCircle\"),\r\n};\r\n\r\ninterface TaskHistoryProps {\r\n\t/**\r\n\t * Данные\r\n\t * TODO: доделать запрос с сервера\r\n\t */\r\n\tdata: {\r\n\t\t/**\r\n\t\t * Список событий за день\r\n\t\t */\r\n\t\titems: TaskHistoryBlockInfo[];\r\n\t\t/**\r\n\t\t * Дата\r\n\t\t */\r\n\t\tdate: string;\r\n\t}[];\r\n}\r\n\r\n/**\r\n * Граф с историей изменений в задаче\r\n *\r\n * @param {TaskHistoryProps} props\r\n * @returns {JSX.Element}\r\n */\r\nexport const TaskHistory: React.FC<TaskHistoryProps> = ({ data }) => {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{data.map(({ date, items }, i) => (\r\n\t\t\t\t<div className={classes.taskHistory} key={i}>\r\n\t\t\t\t\t<div className={classes.date}>{date}</div>\r\n\t\t\t\t\t{items.map(({ text, decision, type }, j) => {\r\n\t\t\t\t\t\tconst IconComponent = icons[type];\r\n\r\n\t\t\t\t\t\tconst decisionBy =\r\n\t\t\t\t\t\t\tdecision &&\r\n\t\t\t\t\t\t\t`Решение ${\r\n\t\t\t\t\t\t\t\tdecision.by === \"controller\"\r\n\t\t\t\t\t\t\t\t\t? \"контролера\"\r\n\t\t\t\t\t\t\t\t\t: \"оператора\"\r\n\t\t\t\t\t\t\t}`;\r\n\r\n\t\t\t\t\t\tconst typeClass = classes[type as keyof typeof classes];\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div className={classes.taskHistoryBlock} key={j}>\r\n\t\t\t\t\t\t\t\t{IconComponent && (\r\n\t\t\t\t\t\t\t\t\t<IconComponent\r\n\t\t\t\t\t\t\t\t\t\tclassName={clsx(\r\n\t\t\t\t\t\t\t\t\t\t\tclasses.icon,\r\n\t\t\t\t\t\t\t\t\t\t\ttypeClass\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{decision && (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={classes.decision}>\r\n\t\t\t\t\t\t\t\t\t\t\t{decisionBy}:{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t<span className={typeClass}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{decision.label} {decision.date}\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n","C:\\Users\\Nikitos\\Documents\\as-assets\\src\\routes.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\AppGraph.tsx",[],"C:\\Users\\Nikitos\\Documents\\as-assets\\src\\components\\Loader.tsx",[],{"ruleId":"129","severity":1,"message":"130","line":139,"column":53,"nodeType":"131","endLine":139,"endColumn":66,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":160,"column":6,"nodeType":"131","endLine":160,"endColumn":19,"suggestions":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"135","replacedBy":"139"},{"ruleId":"137","replacedBy":"140"},{"ruleId":"129","severity":1,"message":"141","line":120,"column":3,"nodeType":"131","endLine":120,"endColumn":21,"suggestions":"142"},{"ruleId":"135","replacedBy":"143"},{"ruleId":"137","replacedBy":"144"},{"ruleId":"129","severity":1,"message":"145","line":242,"column":6,"nodeType":"131","endLine":242,"endColumn":8,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":2,"column":38,"nodeType":"149","messageId":"150","endLine":2,"endColumn":52},{"ruleId":"129","severity":1,"message":"151","line":211,"column":3,"nodeType":"131","endLine":211,"endColumn":16,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":219,"column":6,"nodeType":"155","endLine":224,"endColumn":8},{"ruleId":"129","severity":1,"message":"156","line":113,"column":5,"nodeType":"131","endLine":113,"endColumn":55,"suggestions":"157"},{"ruleId":"153","severity":1,"message":"154","line":117,"column":4,"nodeType":"155","endLine":120,"endColumn":6},{"ruleId":"147","severity":1,"message":"158","line":22,"column":7,"nodeType":"149","messageId":"150","endLine":22,"endColumn":16},{"ruleId":"135","replacedBy":"159"},{"ruleId":"137","replacedBy":"160"},{"ruleId":"147","severity":1,"message":"161","line":4,"column":17,"nodeType":"149","messageId":"150","endLine":4,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'editorState'. Either exclude it or remove the dependency array.","ArrayExpression",["162"],"React Hook useEffect has missing dependencies: 'max' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["163"],"no-native-reassign",["164"],"no-negated-in-lhs",["165"],["164"],["165"],"React Hook useCallback has missing dependencies: 'closeLinkPicker' and 'setEditorState'. Either include them or remove the dependency array. If 'setEditorState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["166"],["164"],["165"],"React Hook useEffect has missing dependencies: 'hidden' and 'ref'. Either include them or remove the dependency array.",["167"],"@typescript-eslint/no-unused-vars","'DraftDecorator' is defined but never used.","Identifier","unusedVar","React Hook useCallback has missing dependencies: 'closeStickerPicker' and 'setEditorState'. Either include them or remove the dependency array. If 'setEditorState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["168"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback has a missing dependency: 'contentState'. Either include it or remove the dependency array.",["169"],"'CloseIcon' is assigned a value but never used.",["164"],["165"],"'useMemo' is defined but never used.",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: []",{"range":"182","text":"183"},"Update the dependencies array to be: [editorState, max, props]",{"range":"184","text":"185"},"Update the dependencies array to be: [closeLinkPicker, editorState, setEditorState, url]",{"range":"186","text":"187"},"Update the dependencies array to be: [hidden, ref]",{"range":"188","text":"189"},"Update the dependencies array to be: [closeStickerPicker, editorState, setEditorState]",{"range":"190","text":"191"},"Update the dependencies array to be: [editorState, entityKey, setEditorState, contentState, blockKey]",{"range":"192","text":"193"},[3084,3097],"[]",[3577,3590],"[editorState, max, props]",[3000,3018],"[closeLinkPicker, editorState, setEditorState, url]",[4628,4630],"[hidden, ref]",[4888,4901],"[closeStickerPicker, editorState, setEditorState]",[2395,2445],"[editorState, entityKey, setEditorState, contentState, blockKey]"]