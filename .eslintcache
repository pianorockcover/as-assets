[{"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\icons.ts":"1","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx":"2","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx":"3","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\App.tsx":"4","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\index.tsx":"5","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\Comments\\Comment.tsx":"6","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\Comments\\Comments.tsx":"7","C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\customTheme.ts":"8"},{"size":575,"mtime":1606460931859,"results":"9","hashOfConfig":"10"},{"size":2399,"mtime":1606464593680,"results":"11","hashOfConfig":"10"},{"size":2355,"mtime":1606539216978,"results":"12","hashOfConfig":"10"},{"size":1446,"mtime":1606541919408,"results":"13","hashOfConfig":"10"},{"size":377,"mtime":1606541658575,"results":"14","hashOfConfig":"10"},{"size":1774,"mtime":1606542055316,"results":"15","hashOfConfig":"10"},{"size":1253,"mtime":1606542176030,"results":"16","hashOfConfig":"10"},{"size":164,"mtime":1606541622299,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3suvvq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\icons.ts",[],["37","38"],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\RichTextEditorTools.tsx",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\RichTextEditor\\RichTextEditor.tsx",["39"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { createRef, useCallback, useEffect, useState } from \"react\";\r\nimport { convertToRaw, Editor, EditorState, RichUtils } from \"draft-js\";\r\nimport { RichTextEditorTools } from \"./RichTextEditorTools\";\r\nimport { draftToMarkdown } from \"markdown-draft-js\";\r\n\r\nconst border = \"1px solid #d2d2d2\";\r\n\r\nconst useStyles = makeStyles({\r\n\trichEditorWrapper: {\r\n\t\tbackground: \"#ffffff\",\r\n\t\tborder,\r\n\t\tmarginBottom: 20,\r\n\t},\r\n\trichEditorArea: {\r\n\t\tpadding: 10,\r\n\t\tminHeight: 200,\r\n\t\toverflowY: \"auto\",\r\n\t},\r\n});\r\n\r\nconst styleMap = {\r\n\tBOLD: {\r\n\t\tfontWeight: 600,\r\n\t},\r\n};\r\n\r\ninterface RichTextEditorProps {\r\n\tonChange: (value: string) => void;\r\n\tforceClean?: number;\r\n}\r\n\r\nexport const RichTextEditor: React.FC<RichTextEditorProps> = ({\r\n\tforceClean,\r\n\t...props\r\n}: RichTextEditorProps): JSX.Element => {\r\n\tconst classes = useStyles();\r\n\r\n\tconst [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n\tuseEffect(() => {\r\n\t\tif (forceClean) {\r\n\t\t\tsetEditorState(EditorState.createEmpty());\r\n\t\t}\r\n\t}, [forceClean]);\r\n\r\n\tconst ref = createRef<any>();\r\n\r\n\tconst onChange = useCallback(\r\n\t\t(nextEditorState: EditorState) => {\r\n\t\t\tsetEditorState(nextEditorState);\r\n\r\n\t\t\tconst content = nextEditorState.getCurrentContent();\r\n\t\t\tconst rawObject = convertToRaw(content);\r\n\t\t\tconst markdownString = draftToMarkdown(rawObject);\r\n\r\n\t\t\tprops.onChange(markdownString);\r\n\t\t},\r\n\t\t[props.onChange]\r\n\t);\r\n\r\n\tconst toggleBlockType = useCallback(\r\n\t\t(blockType: string) =>\r\n\t\t\tsetEditorState(RichUtils.toggleBlockType(editorState, blockType)),\r\n\t\t[editorState]\r\n\t);\r\n\r\n\tconst toggleInlineStyle = useCallback(\r\n\t\t(inlineStyle: string) =>\r\n\t\t\tsetEditorState(\r\n\t\t\t\tRichUtils.toggleInlineStyle(editorState, inlineStyle)\r\n\t\t\t),\r\n\t\t[editorState]\r\n\t);\r\n\r\n\tconst onClickArea = useCallback(\r\n\t\t() => ref && ref.current && ref.current.focus(),\r\n\t\t[ref]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={classes.richEditorWrapper}>\r\n\t\t\t<RichTextEditorTools\r\n\t\t\t\teditorState={editorState}\r\n\t\t\t\ttoggleBlockType={toggleBlockType}\r\n\t\t\t\ttoggleInlineStyle={toggleInlineStyle}\r\n\t\t\t/>\r\n\t\t\t<div className={classes.richEditorArea} onClick={onClickArea}>\r\n\t\t\t\t<Editor\r\n\t\t\t\t\teditorState={editorState}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tspellCheck={true}\r\n\t\t\t\t\tcustomStyleMap={styleMap}\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n",["40","41"],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\App.tsx",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\index.tsx",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\Comments\\Comment.tsx",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\components\\Comments\\Comments.tsx",[],"C:\\Users\\maris\\Documents\\dev\\as-assets\\src\\customTheme.ts",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":59,"column":3,"nodeType":"48","endLine":59,"endColumn":19,"suggestions":"49"},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["54"],["52"],["53"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [props]",{"range":"57","text":"58"},[1437,1453],"[props]"]